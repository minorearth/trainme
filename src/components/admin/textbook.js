export const textbook = [{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Первая команда или по-другому функция, которую мы изучим - это print.\n# Функция print выводит данные в поле Выходные данные\nprint('Я не знаю команду print')\n\n# Нажми кнопку 'Выполнить' и ты увидишь результат работы программы в поле Выходные данные\n# Проведи эксперименты - удали некоторые части строки 'Я не знаю команду print' или кода и посмотри будет ли выполняться код и что он будет выводить\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Первая команда или по-другому функция, которую мы изучим - это print.\n# Функция print выводит данные в поле Выходные данные\nprint('Я не знаю команду print')\n\n# Нажми кнопку 'Выполнить' и ты увидишь результат работы программы в поле Выходные данные\n# Проведи эксперименты - удали некоторые части строки 'Я не знаю команду print' или кода и посмотри будет ли выполняться код и что он будет выводить\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Возможно ты заметил, что и в прошлой программе, и в этой - перед некоторыми строками стоит решетка - #.\n# Такие строки называются 'Комментариями' и не учитываются при выполнении программы.\n# Любую строку кода можно исключить из выполнения программы, если поставить перед ней #.\n# Это называется по другому - Закомментировать код.\n\n# Данная программа выводит четыре строки, а нужно одну. Закомментируй любые 3 строки программы.\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Возможно ты заметил, что и в прошлой программе, и в этой - перед некоторыми строками стоит решетка - #.\n# Такие строки называются 'Комментариями' и не учитываются при выполнении программы.\n# Любую строку кода можно исключить из выполнения программы, если поставить перед ней #.\n# Это называется по другому - Закомментировать код.\n\n# Данная программа выводит четыре строки, а нужно одну. Закомментируй любые 3 строки программы.\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Команда print может печатать несколько значений, они указываются через запятую\n# Напечатанные значения будут разделены одним пробелом\n\n# Проведи эксперимент, добавь новых несколько значений через запятую\nprint('1', '2', '3')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print"],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Команда print может печатать несколько значений, они указываются через запятую\n# Напечатанные значения будут разделены одним пробелом\n\n# Проведи эксперимент, добавь новых несколько значений через запятую\nprint('1', '2', '3')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print"],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Пробел - это тоже символ и учитывается при проверке заданий\n# Этот код печатает 4 пробела  между цифрами  и еще 4 пробела в конце\nprint('1   ', '   2   ', '   3', '   ')\n# Пробелы невидимы в окне Выходные данные, из-за этого можно допустить ошибку при выполнениии заданий\n# Чтобы увидеть пробелы нужно  выделить весь текст в окне Выходные данные\n# Проведи эксперимент-выдели ввесь текст в окне Выходные данные",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Научимся использовать переменные.\n# Посмотри на этот код\nprint('Этот код не использует переменные')\nprint('Привет, Иван!')\nprint('Привет, Иван!')\n# Теперь представь, что мы хотим вместо имени Иван напечатать Вася.\n# Придется в двух местах менять код. Проще сделать так:\nprint('Этот код использует переменные')\na = 'Привет, Иван!'\nprint(a)\nprint(a)\n# a - это переменная. Ей можно дать любое имя.",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Научимся использовать переменные.\n# Посмотри на этот код\nprint('Этот код не использует переменные')\nprint('Привет, Иван!')\nprint('Привет, Иван!')\n# Теперь представь, что мы хотим вместо имени Иван напечатать Вася.\n# Придется в двух местах менять код. Проще сделать так:\nprint('Этот код использует переменные')\na = 'Привет, Иван!'\nprint(a)\nprint(a)\n# a - это переменная. Ей можно дать любое имя.",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"induct = 'Привет'\nname = 'Вася'\nprint(induct + ',', name + '!')",defaultcode:"# Предположим мы имеем такой код\ninduct = 'Привет'\nname = 'Вася'\nprint(induct, ',', name)\n# Он печатает 'Привет , Вася'\n# Как убрать лишний пробел перед запятой?\n# Вот так, просто сложим переменную и запятую\nprint(induct + ',', name)",defaultinput:[],defaultoutput:["Привет, Вася!"],inout: [{inv:[],outv:["Привет, Вася!"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["name", "induct"],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Обрати внимание, что под текстом задачи есть поле 'Входные данные'\n# Программа может брать данные из этого поля и делать с ними что-либо.\n\n# Функция input() считывает из окна 'Входные данные' одну строку текста.\n# После этого мы помещаем ее в переменную d и печатаем\nd = input()\nprint(d)",defaultinput:["Сейчас мы загрузим эту строку в программу"],defaultoutput:[],inout: [{inv:["Сейчас мы загрузим эту строку в программу"],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Что делать если нужно считать 2 строки из окна Ввод?\n# Для считывания второй строки вызови команду input() второй раз\na = input()\nprint(a)\nb = input()\nprint(b)",defaultinput:["Всем привет!", "Меня зовут", "Иван"],defaultoutput:[],inout: [{inv:["Всем привет!", "Меня зовут", "Иван"],outv:[]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# В этой главе мы научимся работать с числами\n# Сначала напечатаем несколько чисел\nprint(1, 2, 3, 4)\n# Чем числа отличаются от строк? Они пишутся без кавычек.\n# Мы можем печатать одновременно и строки и числа. Вот так:\nprint(1, 2, 3, 4, '1', '2', 'Это  числа')\n# Обрати внимание, в поле Выходные данные невозможно понять\n# что мы напечатали - число или строку, ведь кавычки исчезают при печати.\n# Если мы складываем числа, то выводится их сумма, если мы складываем строки, то они объединяются\nprint(1 + 4, '1' + '4')\nprint('1 + 5 =', 1 + 5)\n# К числу нельзя прибавить строку, Питон выдаст ошибку.\n# Раскомментируй строку ниже и попробуй выполнить программу - будет ошибка\n# print(1+'1')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# В поле Ввод ты видишь число 5, давай введем его в программу и вычтем из него 2\na = input()\nprint(a - 2)\n# Возникла ошибка! А все потому, что все что находится в поле Ввод является строками, а из строки нельзя вычесть число.\n# Что же делать?\n# Новая команда int(), которую мы изучим позволяет превратить строку в число.\n# (Закомментируй или удали предыдущий код, чтобы ошибка не возникала.)\na = input()\nb = int(a)\nprint(b - 2)\n# Теперь все получилось!\n# Можно сократить код, написав так:\na = int(input())\nprint(a - 2)\n# В программировании говорят-Мы обернули функцию input в функцию int\n# Можно еще короче:\nprint(int(input()) - 2)",defaultinput:["5", "6", "7"],defaultoutput:[],inout: [{inv:["5", "6", "7"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# В предыдущей задаче в строке 'Разность: 5' стоит пробел после двоеточия, так как при печати мы использовали запятую.\n# Что если не требуется печатать пробел? '+' - не сработает, так как к строке нельзя прибавить число\na = int(input())\nb = int(input())\nd = a - b\nprint('Разность:' + d)\n\n# Нам поможет команда str. Она превращает число в строку\n# (Закомментируй или удали предыдущую строку кода, чтобы ошибка не возникала)\nc = str(d)\nprint('Разность:' + c)\n\n# Можно записать короче:\nc = str(a - b)\nprint('Разность:' + c)\n\n# Еще короче:\nprint('Разность:' + str(a - b))",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "3"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# В этой главе мы узнаем новые математические команды\n# *  - умножение\n# /  - деление\n\n# Изучи программу и выходные  данные\na = int(input())\nb = int(input())\nprint('Произведение', str(a) + '*' + str(b) + '=' + str(a * b))\nprint('Частное', str(a) + '/' + str(b) + '=' + str(a / b))\n\n# Как и в обычной математике можно использовать скобки\nprint('(5 - 2) * 2 =', (a - b) * b)",defaultinput:["5", "2", "2"],defaultoutput:[],inout: [{inv:["5", "3", "2"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Две новых операции которые мы пройдем:\n# % - остаток от деления\n# // - целочисленное деление (деление нацело)\n\n# Вот как работают операции на конкретных примерах:\n# 5 // 5 = 1     # 5 % 5 = 0\n# 6 // 5 = 1     # 6 % 5 = 1\n# 7 // 5 = 1     # 7 % 5 = 2\n# 8 // 5 = 1     # 8 % 5 = 3\n# 9 // 5 = 1     # 9 % 5 = 4\n# 10// 5 = 2     # 10% 5 = 0\n# 11// 5 = 2     # 11% 5 = 1\n\n# Поэксперементируй с данными операциями самостоятельно\nprint(10 // 3)\nprint(10 % 3)",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "3"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Что если некоторую строку нужно повторить несколько раз🦕?\nprint('Победа!' + 'Победа!' + 'Победа!' + 'Победа!')\n# Не очень удобно, особенно, если что-то нужно повторить раз 100\n\n# Лучше сделать вот так:\nprint('Победа!' * 4)\n\n# Получается, в Питоне можно умножить строку на число и она повторится!",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Новая функция, которую мы узнаем-это функция  len(). Функция позволяет вычислить длину строки.\ns = 'Сколько в этом предложении букв? Функция len позволит подсчитать их'\nprint('В предложении:', len(s), 'букв')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Дана переменная N\nN = 10\n# Взглянем на следующую строку кода\nif N == 10:\n    print('N равно 10')\n# Запусти код. Программа напечатает 'N равно 10'\n# Теперь измени N на другое число и запусти заново. Программа ничего не напечатает.\n\n# if - это условный оператор, если выполняется условие N==10, то выполняется код после двоеточия\n\n# Обрати внимание на следующие особенности:\n# 1) После условия всегда стоит двоеточие\n# 2) Перед командой print стоит отступ\n# 3) Вместо одного = стоит два равно == . Разница? Одно равно - для того чтобы поместить значение в переменную.\n# == - для сравнения значений.",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Дана переменная N\nN = 10\n# Взглянем на следующую строку кода\nif N == 10:\n    print('N равно 10')\n# В случае если N не равно 10, программа ничего не выводит, это не очень хорошо.\n# В случае если условие не выполняется мы будем выводить 'N не равно 10'\n# Это делается так:\nif N == 10:\n    print('N равно 10')\nelse:\n    print('N не равно 10')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:5,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Помимо равенства == в условии можно использовать следующие знаки:\n# >  больше\n# >= больше или равно\n# <  меньше\n# <= меньше или равно\n# != не равно\nN = 100\nif N > 100:\n    print('больше 100')\nelse:\n    print('меньше либо равно 100')\nif N != 100:\n    print('не равно 100')\nelse:\n    print('равно 100')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Научимся извлекать цифры из числа.\n# Возьмем число 783, как извлечь все цифры числа?\n\n# Начнем с последней цифры. Последняя цифра-это остаток от деления числа на 10\nN = 783\nprint('Последняя цифра', 783 % 10)\n\n# Первая цифра числа-это целочисленное деление на 100\nprint('Первая цифра', N // 100)\n\n# Осталось извлечь цифру в середине. Это можно сделать двумя способами:\n\n# Способ 1.\n# Как уже стало понятно мы можем извлечь первую и последнюю цифру числа.\n# Разделим число нацело на 10, это позволит отбросить последнюю цифру числа и поместим результат в переменную М\nM = N // 10\nprint('Промежуточное число', M)\n# Теперь легко получим последнюю цифру\nprint('Средняя цифра', M % 10)\n\n# Способ 2.\n# Найдем остаток от деления числа на 100\nM = N % 100\nprint('Промежуточное число', M)\n\n# А затем разделим нацело на 10\nprint('Средняя цифра', M // 10)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Представим, что у нас есть следующий код\nprint('Ура!')\nprint('Ура!')\nprint('Ура!')\n\n# Как его можно упростить? Используем циклы!\nfor i in range(3):\n    print('Ура')\n\n# Данный код называется циклом.\n\n# Обрати внимание на следующие детали\n# 1) Как и в условии стоит двоеточие\n# 2) Все строки после строки с for, имеющие отступ будут повторяться\n# 3) Количество повторений указано в круглых скобках (3)\n# 4) Что такое i? Это счетчик цикла, пока мы не будем его использовать\n\n# Остальное нужно просто пока запомнить\n\n# Приведем пример другой программы\nprint('На первый-второй рассчитайся')\nfor i in range(4):\n    print('Первый')\n    print('Второй')\nprint('Молодцы!')  # этот код не будет повторяться",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# На входе программы некоторое количество чисел. В первой строке количество чисел, в остальных строках\n# сами числа.\n# Найдем сумму этих чисел.\n\n# Создадим переменную summ\nsumm = 0\n# Возьмем код для считывания чисел\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    # Каждый раз когда мы считываем очередное число будем добавлять его к сумме\n    summ = summ + r\n# После завершения цикла напечатаем сумму\nprint('Сумма чисел', summ)\n",defaultinput:["3", "2", "3", "4"],defaultoutput:[],inout: [{inv:["3", "2", "3", "4"],outv:[]},{inv:["2", "1", "2"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# На входе программы некоторое количество строк. В первой строке количество строк, в остальных строках\n# сами строки.\n\n# Сложим все строки в одну строку.\n# Создадим переменную line\nline = ''\nN = int(input())\nfor i in range(N):\n    r = input()\n    # Каждый раз когда мы считываем очередную строку будем добавлять ее к переменной line\n    line = line + str(r) + '!'\n# После завершения цикла напечатаем итоговую строку\nprint('Строка', line)",defaultinput:["3", "Быстрей", "Выше", "Сильней"],defaultoutput:[],inout: [{inv:["3", "Быстрей", "Выше", "Сильней"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Рассмотрим следующую задачу\n# В первой строке Входных данных содержится количество строк - 6. Далее идут сами строки.\n# Сложим первую строку со второй, третью - с четвертой, пятую - с шестой.\n# Какое количество повторений цикла нам потребуется?\n# Правильный ответ - 3. То есть - половина от количества строк - 6//2\nN = int(input())\nfor i in range(N // 2):\n    one = input()\n    two = input()\n    print(one + two)\n# Обрати внимание, что нам потребуется оператор целочисленноого деления //, обычное деление / не подойдет",defaultinput:["4", "город-", "герой", "море по ", "колено"],defaultoutput:[],inout: [{inv:["4", "город-", "герой", "море по ", "колено"],outv:[]},{inv:["6", "Ф", "Ф", "Ф", "Ф", "Ф", "Ф"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Рассмотрим следующую задачу\n# В первой строке Входных данных содержится количество чисел - 5. Далее идут сами числа.\n# Требуется найти разность между вторым и первым числом, третьим и вторым, четвертым и третьим, и так далее.\n# Сколько  повторений цикла нам потребуется?\n# Правильный ответ - 4. То есть - на 1 меньше, чем количество чисел.\n# Также возникает вторая проблема  - нужно  где-то хранить предыдущее значение.\n# Изучи способ решения данной проблемы\nN = int(input())\nprev = int(input())  # Запоминаем первое число\nfor i in range(N - 1):\n    curr = int(input())  # Считываем следующее\n    print(curr - prev)  # Вычитаем из следующего предыдущее\n    prev = curr  # Обновляем предыдущее",defaultinput:["5", "1", "2", "3", "5", "10"],defaultoutput:[],inout: [{inv:["5", "1", "2", "3", "5", "10"],outv:[]},{inv:["2", "2", "20"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}}]