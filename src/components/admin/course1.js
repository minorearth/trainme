export const testsall1 = [{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "c35e0d39-cd67-4bd8-b037-02cc27de6a51",rightcode:"pass\n",defaultcode:"# Первая команда или по-другому функция, которую мы изучим - это print.\n# Функция print выводит данные в поле 'Выходные данные'\nprint('Я знаю команду print')\n\n# Нажми кнопку 'Выполнить' и ты увидишь результат работы программы в поле 'Выходные данные'.\n# Проведи эксперименты - удали некоторые части строки 'Я знаю команду print' или кода и посмотри, будет ли выполняться код и что он будет выводить\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Исправь программу так, чтобы она выводила строчку 'Я знаю команду print'",tasktype:"task",id:2,taskuuid: "2ba7a4a6-02d3-42c4-977d-0e0004aee655",rightcode:"# Нужно просто убрать частицу 'не' из предложения вместе с пробелом\nprint('Я знаю команду print')\n",defaultcode:"print('Я не знаю команду print')\n# После исправления программы проверь все ли ты сделал правильно и нажми кнопку 'Выполнить'\n# Если данные в поле 'Выходные данные' равны данным в поле 'Ожидаемый результат', то нажми кнопку 'Проверить'\n",forbiddencode:"print('Я знаю команду print')\n",defaultinput:[],defaultoutput:["Я знаю команду print"],inout: [{inv:[],outv:["Я знаю команду print"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:3,taskuuid: "2838d4b1-6167-474e-bbeb-770daafd66ce",rightcode:"pass\n",defaultcode:"# Ты конечно заметил, что и в прошлой программе, и в этой - перед некоторыми строками стоит решетка - #.\n# Такие строки называются 'Комментариями' и не учитываются при выполнении программы.\n# Любую строку кода можно исключить из выполнения программы, если поставить перед ней #.\n# Это называется по другому - Закомментировать код.\n\n# Данная программа выводит четыре строки, а нужно одну. Закомментируй любые 3 строки программы и выполни программу\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\n",forbiddencode:"pass\ne\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:4,taskuuid: "88f83736-f578-4396-a178-79e35fea3857",rightcode:"pass\n",defaultcode:"# Команда print может печатать несколько значений, они указываются через запятую\n# Напечатанные значения будут разделены одним пробелом\n\n# Проведи эксперимент, добавь несколько новых значений через запятую\nprint('1', '2', '3')\n",forbiddencode:"pass\ne\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Измени программу, чтобы она печатала 1 2 3 4 5. Используй запятые в команде print",tasktype:"task",id:5,taskuuid: "68838d01-6f03-4fb7-aa48-5db929b206f5",rightcode:"print('1', '2', '3', '4', '5')\n",defaultcode:"print('1', '2', '3')\n",forbiddencode:"print('1 2 3 4 5')\n",defaultinput:[],defaultoutput:["1 2 3 4 5"],inout: [{inv:[],outv:["1 2 3 4 5"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[","],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:6,taskuuid: "e2416b4d-cee3-45c3-a5d7-290fa01ccb43",rightcode:"pass\n",defaultcode:"# Пробел - это тоже символ и учитывается при проверке заданий!\n\n# Этот код печатает 4 пробела между цифрами и еще 4 пробела в конце\nprint('1   ', '   2   ', '   3', '   ')\n\n# Пробелы невидимы в поле 'Выходные данные', из-за этого можно допустить ошибку при выполнении заданий. Чтобы увидеть пробелы, нужно выделить весь текст в поле 'Выходные данные'.\n# Проведи эксперимент - выдели весь текст в окне 'Выходные данные' и ты увидишь пробелы\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Напиши программу, чтобы она печатала '1  2  3'.  Между цифрами должно быть по 2 пробела. Используй запятые в команде print",tasktype:"task",id:7,taskuuid: "9e437a5c-864d-4ae3-8e0f-d6242a78049f",rightcode:"print('1 ', '2 ', '3')\n",defaultcode:"",forbiddencode:"print('1  2  3')\n",defaultinput:[],defaultoutput:["1  2  3"],inout: [{inv:[],outv:["1  2  3"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[","],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "0781ebbe-e784-45df-8768-49464b8e3d93",rightcode:"pass\n",defaultcode:"# Научимся использовать переменные.\n\n# Посмотри на этот код:\nprint('Этот код не использует переменные')\nprint('Привет, Иван!')\nprint('Привет, Иван!')\n\n# Теперь представь, что мы хотим вместо имени Иван напечатать Ваня.\n# Придется в двух местах менять код. Проще сделать так:\nprint('Этот код использует переменные')\na = 'Привет, Иван!'\nprint(a)\nprint(a)\n\n# a - это переменная. Её название можно изменить.\n",forbiddencode:"pass\ne\nnputlist, outputlist, maxlines, forbidden, forbiddenRe, musthave, musthaveRe, text, id, tasktype, chpts, gc)\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Измени название переменной с 'a' на 'name' и измени программу так, чтобы она печатала две одинаковые строки 'Привет, Ваня!'",tasktype:"task",id:2,taskuuid: "d00313fd-92da-4fbe-b077-e93576ec8712",rightcode:"name = 'Привет, Ваня!'\nprint(name)\nprint(name)\n",defaultcode:"a = 'Привет, Иван!'\nprint(a)\n",forbiddencode:"name = 'Привет, Ваня!'\nprint(name)\nprint(name)\n",defaultinput:[],defaultoutput:["Привет, Ваня!", "Привет, Ваня!"],inout: [{inv:[],outv:["Привет, Ваня!", "Привет, Ваня!"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["name"],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"1) Измени программу, чтобы она печатала 2 строчки\n'Привет, Ваня!'\n'Пока, Иван!'.\n\n2) Имена должны храниться в двух переменных: name1, name2",tasktype:"task",id:3,taskuuid: "700eec58-1df2-4bce-adea-e877067f9697",rightcode:"name1 = 'Ваня'\nname2 = 'Иван'\nprint('Привет,', name1)\nprint('Пока,', name2)\n",defaultcode:"print('Привет, Ваня')\nprint('Пока, Иван')\n",forbiddencode:"name1 = 'Ваня'\nname2 = 'Иван'\nprint(f'Привет, {name1}')\nprint(f'Пока, {name2}')\n",defaultinput:[],defaultoutput:["Привет, Ваня", "Пока, Иван"],inout: [{inv:[],outv:["Привет, Ваня", "Пока, Иван"]}],restrictions: {maxlines:4,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["name1", "name2"],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"1) Измени программу так, чтобы она печатала 2 строчки \n\n'Привет, Ваня!'\n\n'Пока, Иван!'.\n\n2) Имена должны храниться в двух переменных name1, name2. Слова 'Привет' и 'Пока' также должны храниться в двух переменных greet1 и greet2",tasktype:"task",id:4,taskuuid: "789451df-74a7-4d08-8e18-4af10bc790e5",rightcode:"greet1 = 'Привет,'\ngreet2 = 'Пока,'\nname1 = 'Ваня'\nname2 = 'Иван'\nprint(greet1, name1)\nprint(greet2, name2)\n",defaultcode:"print('Привет, Ваня')\nprint('Пока, Иван')\n",forbiddencode:"greet1 = 'Привет'\ngreet2 = 'Пока'\nname1 = 'Ваня'\nname2 = 'Иван'\nprint(f'{greet1}, {name1}')\nprint(f'{greet2}, {name2}')\n",defaultinput:[],defaultoutput:["Привет, Ваня", "Пока, Иван"],inout: [{inv:[],outv:["Привет, Ваня", "Пока, Иван"]}],restrictions: {maxlines:6,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["name1", "name2", "greet1", "greet2"],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Изучи программу",tasktype:"guide",id:5,taskuuid: "34b38071-7b59-4182-89d5-bc8abff70369",rightcode:"pass\n",defaultcode:"# Предположим мы имеем такой код:\ninduct = 'Привет'\nname = 'Ваня'\nprint(induct, ',', name)\n\n# Он печатает 'Привет , Ваня'. Как убрать лишний пробел перед запятой?\n\n# Вот так, просто сложим переменную и запятую\nprint(induct + ',', name)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Напиши программу, чтобы она печатала 'Привет, Ваня!'(с восклицательным знаком) \nИмя должно храниться в переменной name. Слово 'Привет' также должно храниться в переменной 'induct'",tasktype:"task",id:6,taskuuid: "33d41ca9-8dd6-4360-8592-161072dee7fd",rightcode:"induct = 'Привет'\nname = 'Ваня'\nprint(induct + ',', name + '!')\n",defaultcode:"",forbiddencode:"induct = 'Привет'\nname = 'Ваня'\nprint(f'{induct}, {name}!')\n",defaultinput:[],defaultoutput:["Привет, Ваня!"],inout: [{inv:[],outv:["Привет, Ваня!"]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["name", "induct"],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "c7c7e8d3-dd13-4748-a06c-b78ba9e326b7",rightcode:"pass\n",defaultcode:"# Обрати внимание, что под текстом задачи есть поле 'Входные данные'. Программа может брать данные из этого поля и делать с ними что-либо.\n\n# Функция input() считывает из поля 'Входные данные' одну строку текста. После этого мы помещаем ее в переменную d и печатаем\nd = input()\nprint(d)\n",forbiddencode:"pass\n",defaultinput:["Сейчас мы загрузим эту строку в программу"],defaultoutput:[],inout: [{inv:["Сейчас мы загрузим эту строку в программу"],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"В поле 'Входные данные' содержится строка. Измени программу, чтобы она добавила дефисы слева и справа от строки, вот так:\n-Сейчас мы загрузим эти данные в программу-",tasktype:"task",id:2,taskuuid: "20b47e0c-694a-4878-acdf-1d58c7eba439",rightcode:"d = input()\nprint('-' + d + '-')\n",defaultcode:"d = input()\nprint(d)\n",forbiddencode:"d = input()\nprint(f'-{d}-')\n",defaultinput:["Сейчас мы загрузим эти данные в программу"],defaultoutput:["-Сейчас мы загрузим эти данные в программу-"],inout: [{inv:["Проверка"],outv:["-Проверка-"]}],restrictions: {maxlines:2,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"В поле 'Входные данные' содержится слово 'Победа!'. Напиши программу, которая печатает три раза подряд слово:\n Победа! Победа! Победа! \n\nМежду словами нужен пробел.",tasktype:"task",id:3,taskuuid: "9f2fdae2-9a2c-4d94-839e-70ecf307303f",rightcode:"a = input()\nprint(a, a, a)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Победа!"],defaultoutput:["Победа! Победа! Победа!"],inout: [{inv:["Проверка"],outv:["Проверка Проверка Проверка"]}],restrictions: {maxlines:2,forbidden:["f-строки", "Умножение строки на число"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Изучи программу",tasktype:"guide",id:4,taskuuid: "8fdb3735-6287-4998-83a2-2c8c7cf1a33a",rightcode:"pass\n",defaultcode:"# Что делать если нужно считать 2 строки из поля 'Входные данные'?\n# Для считывания второй строки вызови команду input второй раз:\na = input()\nprint('Это первая строка:', a)\nb = input()\nprint('Это вторая строка:', b)\n",forbiddencode:"pass\n",defaultinput:["Всем привет!", "Меня зовут Иван"],defaultoutput:[],inout: [{inv:["Всем привет!", "Меня зовут Иван"],outv:[]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Измени программу так, чтобы она считывала третью строку из поля 'Входные данные' и выводила ее вместе с двумя другими, как показано в поле 'Ожидаемый результат'",tasktype:"task",id:5,taskuuid: "21f03eb6-b98b-460c-be12-767c9a01793a",rightcode:"a = input()\nprint(a)\nb = input()\nprint(b)\nc = input()\nprint(c)\n",defaultcode:"a = input()\nprint(a)\nb = input()\nprint(b)\n",forbiddencode:"pass\n",defaultinput:["Всем привет!", "Меня зовут", "Иван"],defaultoutput:["Всем привет!", "Меня зовут", "Иван"],inout: [{inv:["Всем привет!", "Меня зовут", "Ваня"],outv:["Всем привет!", "Меня зовут", "Ваня"]}],restrictions: {maxlines:6,forbidden:["for"],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Считай 2 строки из поля 'Входные данные'. Сложи их вместе без пробелов и напечатай в виде одной строки, как показано в поле 'Ожидаемый результат'",tasktype:"task",id:6,taskuuid: "9013a0c3-5282-4570-b30b-2b351fe4d6f4",rightcode:"a = input()\nb = input()\nprint(a + b)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Всем при", "вет! Меня зовут Иван"],defaultoutput:["Всем привет! Меня зовут Иван"],inout: [{inv:["Всем по", "ка! Меня зовут Ива"],outv:["Всем пока! Меня зовут Ива"]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["+"],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Считай 2 строки из поля 'Входные данные'. Добавь к каждой строке восклицательный знак без пробела и напечатай их",tasktype:"task",id:7,taskuuid: "e2773ee0-416c-4f23-8bcd-2f0a251c64ab",rightcode:"a = input()\nb = input()\nprint(a, b + '!')  # Еще можно вот так - print(a+' '+b+'!')\n",defaultcode:"",forbiddencode:"a = input()\nb = input()\nprint(f'{a} {b}!')  # Еще можно вот так - print(a+' '+b+'!')\n",defaultinput:["Всем привет!", "Меня зовут Иван"],defaultoutput:["Всем привет! Меня зовут Иван!"],inout: [{inv:["Всем привет!", "Меня зовут Иван"],outv:["Всем привет! Меня зовут Иван!"]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["+"],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "859eca5b-c7e1-4092-a20c-199465ab3824",rightcode:"pass\n",defaultcode:"# В этой главе мы научимся работать с числами.\n\n# Сначала напечатаем несколько чисел\nprint(1, 2, 3, 4)\n\n# Чем числа отличаются от строк? Они пишутся без кавычек.\n\n# Мы можем печатать одновременно и строки и числа. Вот так:\nprint(1, 2, 3, 4, '1', '2', '-это  числа')\n\n# Обрати внимание, в поле 'Выходные данные' невозможно понять что мы напечатали - число или строку, ведь кавычки исчезают при печати.\n\n# Если мы складываем числа, то выводится их сумма, если мы складываем строки, то они объединяются\nprint('Результат сложения чисел:', 1 + 4)\nprint('Результат сложения строк:', '1' + '4')\nprint('1 + 5 =', 1 + 5)\n\n# К числу нельзя прибавить строку, питон выдаст ошибку.\n\n# Раскомментируй строку ниже и попробуй выполнить программу - будет ошибка:\n# print(1+'1')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Исправь программу, чтобы она печатала '3 + 5 = 8'. Сумма должна вычисляться с помощью знака + ",tasktype:"task",id:2,taskuuid: "212644c8-351e-4687-9b9c-79583f2d2a5a",rightcode:"print('3 + 5 =', 3 + 5)\n",defaultcode:"print('1 + 5 =', 1 + 5)\n",forbiddencode:"print(f'3 + 5 = {3 + 5}')\n",defaultinput:[],defaultoutput:["3 + 5 = 8"],inout: [{inv:[],outv:["3 + 5 = 8"]}],restrictions: {maxlines:1,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["+", ","],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:3,taskuuid: "7bac10b2-fab4-4767-a704-be0387b05b10",rightcode:"pass\n",defaultcode:"# В поле 'Входные данные' ты видишь число 5, давай введем его в программу и вычтем из него 2\na = input()\nprint(a - 2)\n\n# Возникла ошибка! А все потому, что всё, что содержитсяв поле 'Входные данные' является строками, а из строки нельзя вычесть число.\n\n# Что же делать?\n\n# Новая команда int, которую мы изучим позволяет превратить строку в число.\n# (Закомментируй или удали предыдущий код, чтобы ошибка не возникала.)\na = input()\nb = int(a)\nprint(b - 2)\n\n# Теперь все получилось!\n\n# Можно сократить код, написав так:\na = int(input())\nprint(a - 2)\n\n# В программировании говорят - Мы обернули функцию input в функцию int\n\n# Можно еще короче:\nprint(int(input()) - 2)\n",forbiddencode:"pass\n",defaultinput:["5", "6", "7"],defaultoutput:[],inout: [{inv:["5", "6", "7"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Измени программу так, чтобы она выводила строку '5 - 2 = 3'. Число 3 должно вычисляться с использованием знака минус '-'. Значения 5 и 2 должны браться из поля 'Входные данные'",tasktype:"task",id:4,taskuuid: "563b023e-f43f-41aa-b435-0a9306f31ff7",rightcode:"a = int(input())\nprint('5 - 2 =', a - 2)\n",defaultcode:"print(5 - 2)\n",forbiddencode:"pass\n",defaultinput:["5"],defaultoutput:["5 - 2 = 3"],inout: [{inv:["6"],outv:["5 - 2 = 4"]}],restrictions: {maxlines:2,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["-", ","],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Напиши программу, которая считывает два числа из поля 'Входные данные' и складывает их. Сумму нужно напечатать.",tasktype:"task",id:5,taskuuid: "9b4d7f2b-64a1-4886-9749-96e03a6c5668",rightcode:"a = int(input())\nb = int(input())\nprint(a + b)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["5", "2"],defaultoutput:["7"],inout: [{inv:["5", "3"],outv:["8"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Напиши программу, которая считывает два числа из поля Входные данные и находит их разность. Разность нужно напечатать. Программа должна состоять из одной строчки кода",tasktype:"task",id:6,taskuuid: "ee316435-e58d-4737-8da7-09f0203f2f2e",rightcode:"print(int(input()) - int(input()))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["5", "2"],defaultoutput:["3"],inout: [{inv:["5", "3"],outv:["2"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Напиши программу, которая считывает два числа из поля 'Входные данные', вычитает из первого второе. Разность нужно напечатать, как показано в поле 'Ожидаемый результат'",tasktype:"task",id:7,taskuuid: "3a4f2764-008b-40fa-82f9-62dd09b5b314",rightcode:"a = int(input())\nb = int(input())\nprint('Разность:', a - b)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["5", "2"],defaultoutput:["Разность: 3"],inout: [{inv:["5", "3"],outv:["Разность: 2"]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:8,taskuuid: "f272d096-27c4-416b-b9a2-b263e203bffd",rightcode:"pass\n",defaultcode:"# Что если необходимо найти разность между двумя числами, которые находятся в поле 'Входные данные' и напечатать результат в виде 'Разность:3'\n# Перед тире нет пробела!\n\n# Данный код выдаст ошибку, а всё потому, что к строке нельзя прибавить число\na = int(input())\nb = int(input())\nd = a - b\nprint('Разность:' + d)\n\n# Нам поможет новая команда str! Она превращает число в строку!\n# (Закомментируй или удали предыдущую строку кода, чтобы ошибка не возникала)\nc = str(d)\nprint('Разность:' + c)\n\n# Можно записать короче:\nprint('Сокращаем код')\nc = str(a - b)\nprint('Разность:' + c)\n\n# Еще короче:\nprint('Еще сокращаем код')\nprint('Разность:' + str(a - b))\n",forbiddencode:"pass\n",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "3"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Напиши программу, которая считывает два числа из поля 'Входные данные', вычитает из первого второе. Разность нужно напечатать. Пробелов быть не должно! Все числа для формирования строки нужно брать из переменных",tasktype:"task",id:9,taskuuid: "9a2a1896-f815-4c9a-a570-0f6e907df36d",rightcode:"a = int(input())\nb = int(input())\nprint(str(a) + '-' + str(b) + '=' + str(a - b))\n",defaultcode:"",forbiddencode:"a = int(input())\nb = int(input())\nprint(f'{a}-{b}={a - b}')\n",defaultinput:["5", "2"],defaultoutput:["5-2=3"],inout: [{inv:["5", "3"],outv:["5-3=2"]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["str"],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"В поле 'Входные данные' содержится 1 число. Возведи число в квадрат. Результат распечатай.",tasktype:"task",id:10,taskuuid: "e2d61019-aea3-43f3-b0f7-372d6c6029b2",rightcode:"a = int(input())\nprint(a * a)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["3"],defaultoutput:["9"],inout: [{inv:["4"],outv:["16"]}],restrictions: {maxlines:2,forbidden:["Возведение в степень **"],forbiddenRe:["\\*\\*"],musthave:[],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "9dc60ec4-9624-41e2-82a2-554edad1b01d",rightcode:"pass\n",defaultcode:"# В этой главе мы узнаем новые математические команды:\n# *  - умножение\n# /  - деление\n# ** - возведение в степень\n\na = int(input())\nb = int(input())\nprint('Произведение', str(a) + '*' + str(b) + ' = ' + str(a * b))\nprint('Частное', str(a) + '/' + str(b) + ' = ' + str(a / b))\nprint(str(a) + ' в степени ' + str(b) + ' = ' + str(a ** b))\n\n# Как и в обычной математике можно использовать скобки:\nprint('(5 - 2) * 2 =', (a - b) * b)\n",forbiddencode:"pass\n",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "2"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"В поле 'Входные данные' содержится 3 числа. Измени программу так, чтобы она находила произведение трех чисел, как показано в поле 'Ожидаемый результат'. Все числа для формирования строки нужно брать из переменных. Используй str.",tasktype:"task",id:2,taskuuid: "d08d92b2-5907-434d-9712-1513d1aa4983",rightcode:"a = int(input())\nb = int(input())\nc = int(input())\nprint('Произведение', str(a) + '*' + str(b) + '*' + str(c) + '=' + str(a * b * c))\n",defaultcode:"print('Произведение', str(a) + '*' + str(b) + '=' + str(a * b))\n",forbiddencode:"a = int(input())\nb = int(input())\nc = int(input())\nprint(f'Произведение {a}*{b}*{c}={a * b * c}')\n",defaultinput:["5", "2", "2"],defaultoutput:["Произведение 5*2*2=20"],inout: [{inv:["5", "3", "2"],outv:["Произведение 5*3*2=30"]}],restrictions: {maxlines:4,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["str"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Напиши программу, которая печатает строку '(5-2)*3=9' Все числа для формирования строки нужно брать из переменных. Используй скобки ( ) и str.",tasktype:"task",id:3,taskuuid: "3e0d20ed-5561-46a8-86e4-2cb3965632ba",rightcode:"a = int(input())\nb = int(input())\nc = int(input())\nprint('(' + str(a) + '-' + str(b) + ')*' + str(c) + '=' + str((a - b) * c))\n",defaultcode:"",forbiddencode:"a = int(input())\nb = int(input())\nc = int(input())\nprint(f'({a}-{b})*{c}={(a - b) * c}')\n",defaultinput:["5", "2", "3"],defaultoutput:["(5-2)*3=9"],inout: [{inv:["5", "3", "2"],outv:["(5-3)*2=4"]}],restrictions: {maxlines:4,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["str"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"В поле 'Входные данные' содержится 4 числа. Вычти из первого - второе, а из третьего - четвертое. Результаты перемножь и напечатай. Используй скобки ( )",tasktype:"task",id:4,taskuuid: "da5daaa9-75eb-488b-b47b-5e2ea7faf6e5",rightcode:"a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\nprint((a - b) * (c - d))\n",defaultcode:"",forbiddencode:"a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\nprint((a - b) * (c - d))\n",defaultinput:["5", "2", "3", "1"],defaultoutput:["6"],inout: [{inv:["5", "3", "2", "1"],outv:["2"]}],restrictions: {maxlines:5,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Изучи программу",tasktype:"guide",id:5,taskuuid: "8c42cab8-1583-43f5-8d5a-d3797ee0feaa",rightcode:"pass\n",defaultcode:"# Две новых операции которые мы пройдем:\n# % - остаток от деления\n# // - целочисленное деление (деление нацело)\n\n# Вот как работают операции на конкретных примерах:\n# 5 // 5 = 1     5 % 5 = 0\n# 6 // 5 = 1     6 % 5 = 1\n# 7 // 5 = 1     7 % 5 = 2\n# 8 // 5 = 1     8 % 5 = 3\n# 9 // 5 = 1     9 % 5 = 4\n# 10// 5 = 2     10% 5 = 0\n# 11// 5 = 2     11% 5 = 1\n\n# Поэкспериментируй с данными операциями самостоятельно\nprint(10 // 3)\nprint(10 % 3)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"В поле 'Входные данные' содержится 2 числа. Раздели первое на второе нацело и найди остаток от деления первого на второе. Результат напечатай в виде двух строк.",tasktype:"task",id:6,taskuuid: "09ae10ae-a3d1-4797-9677-d1bdaa1b0c45",rightcode:"a = int(input())\nb = int(input())\nprint(a // b)\nprint(a % b)\n",defaultcode:"",forbiddencode:"a = int(input())\nb = int(input())\nprint(a // b)\nprint(a % b)\n",defaultinput:["5", "2"],defaultoutput:["2", "1"],inout: [{inv:["5", "3"],outv:["1", "2"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["//", "%"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Возраст Вани в днях указан в поле 'Входные данные'. Вычисли сколько полных лет Ване и сколько дней прошло с его последнего дня рождения. Считай что в году всегда 365 дней. Используй операции целочисленного деления и нахождения остатка. Ответ напечатай в виде двух строк",tasktype:"task",id:7,taskuuid: "f2725def-308a-43fb-9aff-860dd2121eda",rightcode:"a = int(input())\nprint(a // 365)\nprint(a % 365)\n",defaultcode:"",forbiddencode:"a = int(input())\nprint(a // 365)\nprint(a % 365)\n",defaultinput:["640"],defaultoutput:["1", "275"],inout: [{inv:["1590"],outv:["4", "130"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["//", "%"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Возраст Маши в днях содержится в поле 'Входные данные'. Вычисли сколько дней осталось до дня рождения Маши. Считай что в году всегда 365 дней. Используй операцию нахождения остатка от деления",tasktype:"task",id:8,taskuuid: "d63f61a1-4c0c-422b-9774-fbb4122d0528",rightcode:"a = int(input())\nprint(365 - a % 365)\n",defaultcode:"",forbiddencode:"a = int(input())\nprint(365 - a % 365)\n",defaultinput:["1590"],defaultoutput:["235"],inout: [{inv:["640"],outv:["90"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["%"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Длина палки в сантиметрах содержится в поле 'Входные данные'. Рассчитай сколько миллиметров палки нужно отпилить, чтобы получить ровное количество метров. Используй операцию нахождения остатка от деления.",tasktype:"task",id:9,taskuuid: "699547d9-4de3-4d55-96d6-e20712b4c544",rightcode:"a = int(input())\nprint(a % 100 * 10)\n",defaultcode:"",forbiddencode:"a = int(input())\nprint(a % 100 * 10)\n",defaultinput:["240"],defaultoutput:["400"],inout: [{inv:["630"],outv:["300"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["%"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"В поле 'Входные данные' содержится длина ребра куба. Найди объем куба. Используй операцию возведение в степень",tasktype:"task",id:10,taskuuid: "82ee88fe-ff49-47be-993a-654bcbcb349f",rightcode:"a = int(input())\nprint(a ** 3)\n",defaultcode:"",forbiddencode:"a = int(input())\nprint(a ** 3)\n",defaultinput:["10"],defaultoutput:["1000"],inout: [{inv:["3"],outv:["27"]}],restrictions: {maxlines:2,forbidden:[],forbiddenRe:[],musthave:["**"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "81d414fc-2c52-468b-ad77-a8d87e4191ed",rightcode:"pass\n",defaultcode:"# Что если некоторую строку нужно повторить несколько раз🦕?\nprint('Победа!' + 'Победа!' + 'Победа!' + 'Победа!')\n# Не очень удобно, особенно, если что-то нужно повторить раз 100!\n\n# Лучше сделать вот так:\nprint('Победа!' * 4)\n\n# Получается, в Питоне можно умножить строку на число и она повторится!\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Считай строку из поля 'Входные данные'. Повтори ее 3 раза. Используй умножение строки на число.",tasktype:"task",id:2,taskuuid: "5d50be9a-1b7d-4850-b43a-87b48538be85",rightcode:"a = input()\nprint(a * 3)\n",defaultcode:"",forbiddencode:"a = input()\nprint(a + a + a)\n",defaultinput:["Победа!"],defaultoutput:["Победа!Победа!Победа!"],inout: [{inv:["Проверка"],outv:["ПроверкаПроверкаПроверка"]}],restrictions: {maxlines:2,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:["\\*.?3"],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Считай строку из поля 'Входные данные'. Добавь к ней восклицательный знак и пробел. Повтори получившуюся строку 3 раза. Используй умножение строки на число.",tasktype:"task",id:3,taskuuid: "4d196b12-b87e-40a4-9846-de8620796616",rightcode:"a = input()\nb = a + '! '\nprint(b * 3)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Победа"],defaultoutput:["Победа! Победа! Победа! "],inout: [{inv:["Проверка"],outv:["Проверка! Проверка! Проверка! "]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["*"],musthaveRe:["\\*.?3"],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Изучи программу",tasktype:"guide",id:4,taskuuid: "bb932726-7f3e-483f-a24a-ebc7722ae233",rightcode:"pass\n",defaultcode:"# Новая функция, которую мы узнаем - это функция len. Функция позволяет вычислить длину строки.\ns = 'Сколько в этом предложении букв? Функция len позволит подсчитать их'\nprint('В предложении:', len(s), 'букв')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Подсчитай сколько полных десятков букв в первой строке поля 'Входные данные'. Используй целочисленное деление.",tasktype:"task",id:5,taskuuid: "19f3cf0f-86e6-4c70-87ff-c5743cc68d93",rightcode:"a = input()\nprint(len(a) // 10)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["В  этом предложении  много  букв, функция len позволит подсчитать их"],defaultoutput:["6"],inout: [{inv:["123456789123"],outv:["1"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["len", "//"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"В поле 'Входные данные' содержится 1 слово. Повтори слово столько раз сколько в нем букв. Результат напечатай",tasktype:"task",id:6,taskuuid: "4fa5df8d-9667-46fd-8d3d-7d02c4c0ae0f",rightcode:"a = input()\nprint(a * len(a))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Мир"],defaultoutput:["МирМирМир"],inout: [{inv:["По"],outv:["ПоПо"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["*"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"В поле 'Входные данные' содержится 1 слово. Вычисли остаток от деления длины слова на 5, пусть остаток равен N. Повтори слово N раз.",tasktype:"task",id:7,taskuuid: "5cd623cb-209a-4d34-b02a-c544d50c5979",rightcode:"a = input()\nprint(a * (len(a) % 5))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Мир"],defaultoutput:["МирМирМир"],inout: [{inv:["ПоПоПо"],outv:["ПоПоПо"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["%"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"В поле 'Входные данные' содержится 1 число. Возведи число в квадрат и подсчитай количество знаков в получившемся числе",tasktype:"task",id:8,taskuuid: "2e8be748-21eb-47d1-b212-47c5a5f9fada",rightcode:"a = int(input())\nb = str(a ** 2)\nprint(len(b))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["10"],defaultoutput:["3"],inout: [{inv:["100"],outv:["5"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["len", "**"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"Нарисуй квадрат 3 на 3, состоящий из знаков $. Для этого нужно напечатать 3 строки. Используй умножение строки на число",tasktype:"task",id:1,taskuuid: "40e67b58-f2ef-448c-89b7-e781d3bec082",rightcode:"print('$' * 3)\nprint('$' * 3)\nprint('$' * 3)\n",defaultcode:"",forbiddencode:"print('$' * 3)\nprint('$' * 3)\nprint('$' * 3)\n",defaultinput:[""],defaultoutput:["$$$", "$$$", "$$$"],inout: [{inv:[""],outv:["$$$", "$$$", "$$$"]}],restrictions: {maxlines:3,forbidden:["Циклы"],forbiddenRe:["for"],musthave:["*"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"Нарисуй квадрат 4 на 4, состоящий из букв V. Внутри квадрат должен быть заполнен буквами X. Используй умножение строки на число",tasktype:"task",id:2,taskuuid: "39cf2cbb-be97-443c-8f8d-a37d87694305",rightcode:"print('V' * 4)\nprint('VXXV')\nprint('VXXV')\nprint('V' * 4)\n",defaultcode:"",forbiddencode:"print('V' * 4)\nprint('VXXV')\nprint('VXXV')\nprint('V' * 4)\n",defaultinput:[""],defaultoutput:["VVVV", "VXXV", "VXXV", "VVVV"],inout: [{inv:[""],outv:["VVVV", "VXXV", "VXXV", "VVVV"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["*"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"Канистра наполнена водой, в поле 'Входные данные' содержится объем канистры в литрах. В одну банку🫙 помещается 4 литра воды. Сколько полных банок можно наполнить из канистры? Сколько останется? Выведи эти два значения в виде двух строк, дополни значения текстом как показано в поле 'Ожидаемый результат'",tasktype:"task",id:3,taskuuid: "fda8874e-8ada-4cb9-86f7-cb01d510bef4",rightcode:"a = int(input())\nprint('Будет заполнено', a // 4, 'банки')\nprint('Останется', a % 4, 'литра')\n",defaultcode:"",forbiddencode:"a = int(input())\nprint(f'Будет заполнено {a // 4} банки')\nprint(f'Останется {a % 4} литра')\n",defaultinput:["14"],defaultoutput:["Будет заполнено 3 банки", "Останется 2 литра"],inout: [{inv:["21"],outv:["Будет заполнено 5 банки", "Останется 1 литра"]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["%", "//"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"Число M содержится в первой строке поля 'Входные данные'. Во второй строке поля 'Входные данные' содержится строка текста. На 1 страницу  помещается M символов. Сколько полных строк текста можно поместить на страницу? Обрати внимание на отсутствие пробела после двоеточия",tasktype:"task",id:4,taskuuid: "75b14de3-ad5f-447b-80ff-b0f525a44905",rightcode:"a = int(input())\nb = input()\nprint('Поместится:' + str(a // len(b)), 'строк')\n",defaultcode:"",forbiddencode:"a = int(input())\nb = input()\nprint(f'Поместится:{a // len(b)} строк')\n",defaultinput:["150", "Мы на верном пути!"],defaultoutput:["Поместится:8 строк"],inout: [{inv:["150", "Проверка!"],outv:["Поместится:16 строк"]}],restrictions: {maxlines:4,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:["//"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "a395194c-9c43-424a-bc0e-8fe1b10d9297",rightcode:"pass\n",defaultcode:"# Дана переменная N:\nN = 10\n\n# Взглянем на следующие строки кода:\nif N == 10:\n    print('N равно 10')\n# Запусти код. Программа напечатает 'N равно 10'\n\n# Теперь измени N на другое число и запусти заново. Программа ничего не напечатает.\n\n# if - это условный оператор, если выполняется условие N==10, то выполняется код после двоеточия\n\n# Обрати внимание на следующие особенности:\n# 1) После условия всегда стоит двоеточие\n# 2) Перед командой print стоит отступ\n# 3) Вместо одного = стоит два ==. В чём разница?\n# =  - для того чтобы поместить значение в переменную,\n# == - для сравнения значений.\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Измени программу так, чтобы значение переменной N бралось из поля 'Входные данные'",tasktype:"task",id:2,taskuuid: "f5bfd8e6-2183-4703-9d06-c2a405497a84",rightcode:"N = int(input())\nif N == 10:\n    print('N равно 10')\n",defaultcode:"if N == 10:\n    print('N равно 10')\n",forbiddencode:"pass\n",defaultinput:["10"],defaultoutput:["N равно 10"],inout: [{inv:["10"],outv:["N равно 10"]},{inv:["15"],outv:[]}],restrictions: {maxlines:3,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:["if"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится строка текста. Напиши программу, которая выводит остаток от деления длины строки на 5, если длина строки равна 36",tasktype:"task",id:3,taskuuid: "ab6cc0c5-e5b4-44f5-a13b-06cf5c955e27",rightcode:"line = input()\nln = len(line)\nif ln == 36:\n    print(ln % 5)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Питон - лучший язык программирования"],defaultoutput:["1"],inout: [{inv:["Питон - лучший язык программированияя"],outv:[]}],restrictions: {maxlines:4,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:["%", "if"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:4,taskuuid: "e712de5c-9fe8-47ec-8756-029ee61b4d37",rightcode:"pass\n",defaultcode:"# Дана переменная N:\nN = 10\n\n# Взглянем на следующие строки кода:\nif N == 10:\n    print('N равно 10')\n\n# В случае если N не равно 10, программа ничего не выводит, это не очень хорошо.\n\n# В случае если условие не выполняется мы будем выводить 'N не равно 10'\n\n# Это делается так:\nprint('Результат работы кода с else')\nif N == 10:\n    print('N равно 10')\nelse:\n    print('N не равно 10')\n# строчки после else выполняются, если не выполнилось условие после if\n\n# Еще пример кода:\nif N % 2 == 0:\n    print('N четное, то есть делится на 2 без остатка')\nelse:\n    print('N нечетное, то есть не делится на 2 без остатка')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:5,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:[],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится число. Измени программу так: если число делится без остатка на 5, то напечатай 'число делится на 5', в противном случае - 'число не делится на 5'.",tasktype:"task",id:5,taskuuid: "5e034493-02a5-44ba-97f6-3428bc1fad97",rightcode:"N = int(input())\nif N % 5 == 0:\n    print('число делится на 5')\nelse:\n    print('число не делится на 5')\n",defaultcode:"if N == 10:\n    print('N равно 10')\nelse:\n    print('N не равно 10')\n",forbiddencode:"N = int(input())\nprint('число делится на 5') if N % 5 == 0 else print('число не делится на 5')\n",defaultinput:["10"],defaultoutput:["число делится на 5"],inout: [{inv:["11"],outv:["число не делится на 5"]},{inv:["15"],outv:["число делится на 5"]}],restrictions: {maxlines:5,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:["if", "%", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 2 числа. Если первое делится на второе без остатка, то напечатай 'делится', в противном случае напечатай - 'не делится'",tasktype:"task",id:6,taskuuid: "d89984bf-2d6f-45b0-8fcf-663fa336e29a",rightcode:"N = int(input())\nM = int(input())\nif N % M == 0:\n    print('делится')\nelse:\n    print('не делится')\n",defaultcode:"",forbiddencode:"N = int(input())\nM = int(input())\nprint('делится') if N % M == 0 else print('не делится')\n",defaultinput:["10", "2"],defaultoutput:["делится"],inout: [{inv:["11", "2"],outv:["не делится"]},{inv:["15", "3"],outv:["делится"]}],restrictions: {maxlines:6,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:["if", "%", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 1 число. Это может быть двузначное или трехзначное число. Определи какое это число и напечатай одно из двух слов 'двузначное' или 'трехзначное'",tasktype:"task",id:7,taskuuid: "13e70f97-20bb-4bbc-8745-01d82b20f4c3",rightcode:"N = input()\nif len(N) == 2:\n    print('двузначное')\nelse:\n    print('трехзначное')\n",defaultcode:"",forbiddencode:"N = input()\nprint('двузначное') if len(N) == 2 else print('трехзначное')\n",defaultinput:["10"],defaultoutput:["двузначное"],inout: [{inv:["111"],outv:["трехзначное"]}],restrictions: {maxlines:5,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:["len", "if", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 2 строки. Напечатай 'равны' если строки одинаковые(равны), в противном случае напечатай 'не равны'",tasktype:"task",id:8,taskuuid: "86951c36-2ba6-4efa-8432-5840dddda7d8",rightcode:"line1 = input()\nline2 = input()\nif line1 == line2:\n    print('равны')\nelse:\n    print('не равны')\n",defaultcode:"",forbiddencode:"line1 = input()\nline2 = input()\nprint('равны') if line1 == line2 else print('не равны')\n",defaultinput:["Python", "Python"],defaultoutput:["равны"],inout: [{inv:["111", "111"],outv:["равны"]},{inv:["111b", "111"],outv:["не равны"]}],restrictions: {maxlines:6,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:["if", "==", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:9,taskuuid: "03587559-7d61-4e41-8715-8be15981a19e",rightcode:"pass\n",defaultcode:"# Помимо равенства ==, в условии можно использовать знаки неравенства:\n# >  больше\n# >= больше или равно\n# <  меньше\n# <= меньше или равно\n# != не равно\n\nN = 100\nif N > 100:\n    print('больше 100')\nelse:\n    print('меньше либо равно 100')\n\nif N != 100:\n    print('не равно 100')\nelse:\n    print('равно 100')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 2 числа. Если первое число больше второго напечатай 'A>B' в противном случае напечатай 'A<=B'",tasktype:"task",id:10,taskuuid: "630b671f-6db0-4e3a-829f-a740789f1ba0",rightcode:"N = int(input())\nM = int(input())\nif N > M:\n    print('A>B')\nelse:\n    print('A<=B')\n",defaultcode:"",forbiddencode:"N = int(input())\nM = int(input())\nprint('A>B') if N > M else print('A<=B')\n",defaultinput:["5", "2"],defaultoutput:["A>B"],inout: [{inv:["2", "11"],outv:["A<=B"]},{inv:["15", "3"],outv:["A>B"]}],restrictions: {maxlines:6,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:["if", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 2 строки. Если длина первой строки равна длине второй напечатай 'строки одинаковой длины', в противном случае напечатай 'строки разной длины'.  Используй знак неравенства !=",tasktype:"task",id:11,taskuuid: "d0e074e5-f3f7-4597-bbef-aca14012fa6b",rightcode:"N = len(input())\nM = len(input())\nif N != M:\n    print('строки разной длины')\nelse:\n    print('строки одинаковой длины')\n",defaultcode:"",forbiddencode:"N = len(input())\nM = len(input())\nprint('строки разной длины') if N != M else print('строки одинаковой длины')\n",defaultinput:["Иван", "Петр"],defaultoutput:["строки одинаковой длины"],inout: [{inv:["Иван", "Петр"],outv:["строки одинаковой длины"]},{inv:["Диван", "Маяк"],outv:["строки разной длины"]}],restrictions: {maxlines:6,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:["if", "else", "!="],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "fc83c9da-e465-4db4-b4f7-555bb0240428",rightcode:"pass\n",defaultcode:"# Научимся извлекать цифры из числа.\n\n# Возьмем число 783. Как извлечь все цифры числа?\n\n# Начнем с последней цифры. Последняя цифра - это остаток от деления числа на 10\nN = 783\nprint('Последняя цифра:', N % 10)\n\n# Первая цифра числа-это целочисленное деление на 100\nprint('Первая цифра', N // 100)\n\n# Осталось извлечь цифру в середине. Это можно сделать двумя способами:\n\n# Способ 1.\n# Как уже стало понятно мы можем извлечь первую и последнюю цифру числа.\n# Разделим число нацело на 10, это позволит отбросить последнюю цифру числа и поместим результат в переменную М\nM = N // 10\nprint('Промежуточное число', M)\n# Теперь легко получим последнюю цифру\nprint('Средняя цифра', M % 10)\n\n# Способ 2.\n# Найдем остаток от деления числа на 100\nprint('Второй способ')\nM = N % 100\nprint('Промежуточное число', M)\n\n# А затем разделим нацело на 10\nprint('Средняя цифра', M // 10)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится число из четырех цифр. Напечатай все цифры числа по очереди от последней до первой",tasktype:"task",id:2,taskuuid: "de756653-d83b-497f-9e0d-74cad91cbaae",rightcode:"N = int(input())\nprint(N % 10)\nM = N // 10\nprint(M % 10)\nM = M // 10\nprint(M % 10)\nM = M // 10\nprint(M % 10)\n",defaultcode:"",forbiddencode:"N = input()\nprint(N[-1])\nprint(N[-2])\nprint(N[-3])\nprint(N[-4])\n",defaultinput:["1234"],defaultoutput:["4", "3", "2", "1"],inout: [{inv:["1234"],outv:["4", "3", "2", "1"]},{inv:["6598"],outv:["8", "9", "5", "6"]}],restrictions: {maxlines:8,forbidden:["Индексы строк", "len"],forbiddenRe:["\\[.*\\]", "len"],musthave:["%", "//"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится число. Если две последние цифры числа равны 12 напечатай 'Оканчивается на 12', в противном  случае напечатай 'Не оканчивается на 12'",tasktype:"task",id:3,taskuuid: "eb3380e5-8feb-42e0-92e1-6e1240cdbefa",rightcode:"N = int(input())\nM = N % 100\nif M == 12:\n    print('Оканчивается на 12')\nelse:\n    print('Не оканчивается на 12')\n",defaultcode:"",forbiddencode:"N = input()\nif N[-2:] == '12':\n    print('Оканчивается на 12')\nelse:\n    print('Не оканчивается на 12')\n",defaultinput:["112"],defaultoutput:["Оканчивается на 12"],inout: [{inv:["112"],outv:["Оканчивается на 12"]},{inv:["1122114"],outv:["Не оканчивается на 12"]}],restrictions: {maxlines:6,forbidden:["Индексы строк", "срезы", "len", "Тернарный оператор"],forbiddenRe:["\\[.*\\]", "\\[[^\\]\\[]*:[^\\]\\[]*\\]", "len", "if[^:]*else"],musthave:["if", "%"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится двухзначное число, запиши его наоборот.",tasktype:"task",id:4,taskuuid: "ab9553bf-9403-45f3-bc13-134d23dbb7c3",rightcode:"N = int(input())\nA = N % 10\nB = N // 10\nprint(str(A) + str(B))\n",defaultcode:"",forbiddencode:"N = input()\nprint(N[::-1])\n",defaultinput:["12"],defaultoutput:["21"],inout: [{inv:["12"],outv:["21"]},{inv:["18"],outv:["81"]}],restrictions: {maxlines:5,forbidden:["Индексы строк", "срезы", "len"],forbiddenRe:["\\[.*\\]", "\\[[^\\]\\[]*:[^\\]\\[]*\\]", "len"],musthave:[],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится количество нулей. Напечатай число по следующему шаблону '1'+указанное количество нулей",tasktype:"task",id:5,taskuuid: "502ecef1-12ab-4ba0-9170-de394d5832f7",rightcode:"N = int(input())\nA = '1' + '0' * N\nprint(A)\n",defaultcode:"",forbiddencode:"N = int(input())\nprint(f'1{'0' * N}')\n",defaultinput:["3"],defaultoutput:["1000"],inout: [{inv:["3"],outv:["1000"]},{inv:["4"],outv:["10000"]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится двузначное число. Пусть первая цифра А, а вторая - B. Возведи А в степень B",tasktype:"task",id:6,taskuuid: "072e4eae-78a9-423e-8e5f-b64f270006d0",rightcode:"N = int(input())\nB = N % 10\nA = N // 10\nprint(A ** B)\n",defaultcode:"",forbiddencode:"N = input()\nprint(int(N[0]) ** int(N[1]))\n",defaultinput:["32"],defaultoutput:["9"],inout: [{inv:["32"],outv:["9"]},{inv:["43"],outv:["64"]}],restrictions: {maxlines:4,forbidden:["Индексы строк", "len"],forbiddenRe:["\\[.*\\]", "len"],musthave:["**", "%", "//"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится количество нулей. Сформируй число по следующему шаблону '1'+указанное количество нулей. Умножь полученное число на 5",tasktype:"task",id:7,taskuuid: "61fba41e-8d96-4182-83c5-7f073679bdf6",rightcode:"N = int(input())\nA = '1' + '0' * N\nB = int(A) * 5\nprint(B)\n",defaultcode:"",forbiddencode:"N = int(input())\nA = f'1{'0' * N}'\nB = int(A) * 5\nprint(B)\n",defaultinput:["3"],defaultoutput:["5000"],inout: [{inv:["3"],outv:["5000"]},{inv:["4"],outv:["50000"]}],restrictions: {maxlines:4,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится число с неизвестным числом цифр, напечатай его первую цифру, если считать слева направо",tasktype:"task",id:8,taskuuid: "6cc94b63-e456-44b4-b730-9d695db24a5e",rightcode:"N = input()\nB = '1'+'0'*(len(N)-1)\nprint(int(N) // int(B))\n",defaultcode:"",forbiddencode:"N = input()\nprint(N[0])\n",defaultinput:["3231"],defaultoutput:["3"],inout: [{inv:["3231"],outv:["3"]},{inv:["434234"],outv:["4"]}],restrictions: {maxlines:5,forbidden:["Индексы строк"],forbiddenRe:["\\[.*\\]"],musthave:["int", "//"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится трехзначное число. Если сумма цифр числа больше 12, напечатай 'Больше 12', в противном случае напечатай произведение первой и последней цифры",tasktype:"task",id:9,taskuuid: "54061c6b-67fb-43f9-965c-a847cddf8ccf",rightcode:"N = int(input())\nM1 = N % 10\nM2 = N // 10 % 10\nM3 = N // 100\nsm = M1 + M2 + M3\nif sm > 12:\n    print('Больше 12')\nelse:\n    print(M1 * M3)\n",defaultcode:"",forbiddencode:"N = input()\nsm = int(N[0]) +int(N[1]) + int(N[2])\nif sm > 12:\n    print('Больше 12')\nelse:\n    print(int(N[0]) * int(N[2]))\n",defaultinput:["384"],defaultoutput:["Больше 12"],inout: [{inv:["384"],outv:["Больше 12"]},{inv:["234"],outv:["8"]}],restrictions: {maxlines:9,forbidden:["Индексы строк", "Тернарный оператор", "len"],forbiddenRe:["\\[.*\\]", "if[^:]*else", "len"],musthave:[],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "642a94ff-4a9c-48b5-8d36-2d352e918adc",rightcode:"pass\n",defaultcode:"# Представим, что у нас есть следующий код:\nprint('Ура!')\nprint('Ура!')\nprint('Ура!')\n\n# Как его можно упростить? Используем циклы!\nfor i in range(3):\n    print('Ура!')\n\n# Данный код называется циклом.\n\n# Обрати внимание на следующие детали:\n# 1) Как и в условии if после строки с for стоит двоеточие.\n# 2) Все строки после строки с for, имеющие отступ, будут повторяться.\n# 3) Количество повторений указано в круглых скобках (3).\n# 4) Что такое i? Это счетчик цикла, пока мы не будем его использовать.\n# 5) Все что идет после строк с отступом не будет повторяться.\n\n# Остальное нужно просто пока запомнить\n\n# Приведем пример другой программы\nprint('На первый-второй рассчитайся')\nfor i in range(4):\n    print('Первый')\n    print('Второй')\nprint('Молодцы!')  # этот код не будет повторяться, так как нет отступа слева\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"Измени программу так, чтобы она напечатала столько слов 'Ура', сколько указано в поле 'Входные данные'",tasktype:"task",id:2,taskuuid: "1391861b-b613-4df9-a120-854ff11f3cc0",rightcode:"N = int(input())\nfor i in range(N):\n    print('Ура')\n",defaultcode:"for i in range(3):\n    print('Ура')\n",forbiddencode:"N = int(input())\n[print('Ура') for i in range(N)]\n",defaultinput:["4"],defaultoutput:["Ура", "Ура", "Ура", "Ура"],inout: [{inv:["4"],outv:["Ура", "Ура", "Ура", "Ура"]},{inv:["3"],outv:["Ура", "Ура", "Ура"]}],restrictions: {maxlines:3,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится 2 строки, повтори их 3 раза как показано в поле 'Ожидаемый результат'",tasktype:"task",id:3,taskuuid: "794a054e-1337-4f18-8074-c8b0e0d6fcef",rightcode:"A = input()\nB = input()\nfor i in range(N):\n    print(A)\n    print(B)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Черный", "Белый"],defaultoutput:["Черный", "Белый", "Черный", "Белый", "Черный", "Белый"],inout: [{inv:["Черный", "Белый"],outv:["Черный", "Белый", "Черный", "Белый", "Черный", "Белый"]},{inv:["Черный1", "Белый1"],outv:["Черный1", "Белый1", "Черный1", "Белый1", "Черный1", "Белый1"]}],restrictions: {maxlines:5,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится 2 строки, повтори их 3 раза через тире",tasktype:"task",id:4,taskuuid: "b60805da-eab3-486e-8224-18cf3925a78f",rightcode:"A = input()\nB = input()\nfor i in range(3):\n    print(A + '-' + B)\n",defaultcode:"",forbiddencode:"A = input()\nB = input()\n[print(f'{A}-{B}') for i in range(3)]\n",defaultinput:["Красно", "синий"],defaultoutput:["Красно-синий", "Красно-синий", "Красно-синий"],inout: [{inv:["Красно", "синий"],outv:["Красно-синий", "Красно-синий", "Красно-синий"]},{inv:["Сине", "желтый"],outv:["Сине-желтый", "Сине-желтый", "Сине-желтый"]}],restrictions: {maxlines:4,forbidden:["f-строки", "списковые включения", "списки"],forbiddenRe:["f[\"']", "[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится строка и число M, напечатай строку M раз",tasktype:"task",id:5,taskuuid: "8beb653e-20ad-4165-86a6-c76f73076a42",rightcode:"A = input()\nN = int(input())\nfor i in range(N):\n    print(A)\n",defaultcode:"",forbiddencode:"A = input()\nN = int(input())\n[print(A) for i in range(N)]\n",defaultinput:["Цикл for", "4"],defaultoutput:["Цикл for", "Цикл for", "Цикл for", "Цикл for"],inout: [{inv:["Цикл for", "4"],outv:["Цикл for", "Цикл for", "Цикл for", "Цикл for"]},{inv:["if", "2"],outv:["if", "if"]}],restrictions: {maxlines:4,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится символ и число М, повтори строку M раз по горизонтали и вертикали - получится квадрат. Используй умножение строки на число",tasktype:"task",id:6,taskuuid: "9149275d-f52e-44a6-b5b3-775818a08dfc",rightcode:"A = input()\nN = int(input())\nfor i in range(N):\n    print(A * N)\n",defaultcode:"",forbiddencode:"A = input()\nN = int(input())\n[print(A * N) for i in range(N)]\n",defaultinput:["@", "3"],defaultoutput:["@@@", "@@@", "@@@"],inout: [{inv:["@", "3"],outv:["@@@", "@@@", "@@@"]},{inv:["&", "2"],outv:["&&", "&&"]}],restrictions: {maxlines:4,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range", "*"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится строка. Напечатай эту строку столько раз сколько символов в строке",tasktype:"task",id:7,taskuuid: "8260c28e-0130-4074-8cf7-7dba59172d48",rightcode:"A = input()\nN = len(A)\nfor i in range(N):\n    print(A)\n",defaultcode:"",forbiddencode:"A = input()\nN = len(A)\n[print(A) for i in range(N)]\n",defaultinput:["Ура"],defaultoutput:["Ура", "Ура", "Ура"],inout: [{inv:["Ура"],outv:["Ура", "Ура", "Ура"]},{inv:["Ау"],outv:["Ау", "Ау"]}],restrictions: {maxlines:4,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится число. Найди остаток от деления этого числа на 8. Назовем остаток буквой М. Напечатай эту число М раз",tasktype:"task",id:8,taskuuid: "70fb0220-5c35-47b5-8a58-94bd555ed3d0",rightcode:"A = input()\nN = int(A) % 8\nfor i in range(N):\n    print(A)\n",defaultcode:"",forbiddencode:"A = input()\nN = int(A) % 8\n[print(A) for i in range(N)]\n",defaultinput:["18"],defaultoutput:["18", "18"],inout: [{inv:["18"],outv:["18", "18"]},{inv:["17"],outv:["17"]}],restrictions: {maxlines:4,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Считай все числа и просто напечатай их",tasktype:"task",id:1,taskuuid: "e9492b10-41bf-4e2f-8fc3-50fcced02a08",rightcode:"N = int(input())\nfor i in range(N):\n    r = input()\n    print(r)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(input()) for i in range(N)]\n",defaultinput:["3", "123", "5", "33"],defaultoutput:["123", "5", "33"],inout: [{inv:["3", "123", "5", "33"],outv:["123", "5", "33"]},{inv:["2", "123", "5"],outv:["123", "5"]}],restrictions: {maxlines:4,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Считай все числа, возведи каждое число в 3 степень.  Результат напечатай. Используй оператор возведения в степень и цикл for",tasktype:"task",id:2,taskuuid: "18fce302-f920-4123-b95d-3a7ae834f8c6",rightcode:"N = int(input())\nfor i in range(N):\n    r = int(input())\n    print(r ** 3)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(int(input()) ** 3) for i in range(N)]\n",defaultinput:["3", "2", "3", "4"],defaultoutput:["8", "27", "64"],inout: [{inv:["3", "2", "3", "4"],outv:["8", "27", "64"]},{inv:["2", "1", "2"],outv:["1", "8"]}],restrictions: {maxlines:4,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "range", "**"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"Изучи программу",tasktype:"guide",id:3,taskuuid: "311bd0f4-d6fe-4214-b682-6e8c264d9b36",rightcode:"pass\n",defaultcode:"# В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа.\n# Найдем сумму этих чисел.\n\n# Создадим переменную sm, в ней будем копить сумму\nsm = 0\n# Возьмем код для считывания чисел\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    # Каждый раз когда мы считываем очередное число будем добавлять его к сумме\n    sm = sm + r\n# После завершения цикла напечатаем сумму\nprint('Сумма чисел: ', sm)\n\n",forbiddencode:"pass\n",defaultinput:["3", "2", "3", "4"],defaultoutput:[],inout: [{inv:["3", "2", "3", "4"],outv:[]},{inv:["2", "1", "2"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"Изучи программу",tasktype:"guide",id:4,taskuuid: "c498a99a-e1f3-4f46-aec3-547b0e44e538",rightcode:"pass\n",defaultcode:"# В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки.\n\n# Сложим все строки в одну строку.\n\n# Создадим переменную line, в которой будем накапливать все строки\nline = ''\nN = int(input())\nfor i in range(N):\n    r = input()\n    # Каждый раз когда мы считываем очередную строку будем добавлять ее к переменной line\n    line = line + str(r) + '!'\n# После завершения цикла напечатаем итоговую строку\nprint('Строка:', line)\n",forbiddencode:"pass\n",defaultinput:["3", "Быстрей", "Выше", "Сильней"],defaultoutput:[],inout: [{inv:["3", "Быстрей", "Выше", "Сильней"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Считай все числа, возведи каждое число в квадрат. Сложи все квадраты чисел. Используй оператор возведения в степень",tasktype:"task",id:5,taskuuid: "8f94a40a-c067-4bb2-997e-13a3e41f6b20",rightcode:"sm = 0\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    sm = sm + r ** 2\nprint(sm)\n",defaultcode:"",forbiddencode:"sm = 0\nN = int(input())\nprint(sum([int(input()) ** 2 for i in range(N)]))\n",defaultinput:["3", "2", "1", "2"],defaultoutput:["9"],inout: [{inv:["3", "2", "1", "2"],outv:["9"]},{inv:["2", "1", "3"],outv:["10"]}],restrictions: {maxlines:6,forbidden:["списковые включения", "списки", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "sum"],musthave:["for", "range", "**"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Все числа трёхзначные. Считай все числа, сложи первые цифры каждого числа(если считать слева направо). Результат напечатай",tasktype:"task",id:6,taskuuid: "e0919917-bb49-46ac-90d5-6bacc83b4788",rightcode:"sm = 0\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    sm = sm + r // 100\nprint(sm)\n",defaultcode:"",forbiddencode:"N = int(input())\nprint(sum( [int(input()[0]) for i in range(N)]))\n",defaultinput:["3", "200", "111", "234"],defaultoutput:["5"],inout: [{inv:["3", "200", "111", "234"],outv:["5"]},{inv:["2", "324", "199"],outv:["4"]}],restrictions: {maxlines:6,forbidden:["индексы строк", "срезы", "списковые включения", "списки", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "sum"],musthave:["for", "range", "//"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Найди сумму длин всех строк",tasktype:"task",id:7,taskuuid: "ed82aba6-2c84-41fc-8dc7-7cc40e9ee5b5",rightcode:"sm = 0\nN = int(input())\nfor i in range(N):\n    r = input()\n    sm = sm + len(r)\nprint(sm)\n",defaultcode:"",forbiddencode:"N = int(input())\nprint(sum([len(input()) for i in range(N)]))\n",defaultinput:["3", "Быстрей", "Выше", "Сильней"],defaultoutput:["18"],inout: [{inv:["3", "Быстрей", "Выше", "Сильней"],outv:["18"]},{inv:["2", "ФФ", "Ф"],outv:["3"]}],restrictions: {maxlines:6,forbidden:["списковые включения", "списки", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "sum"],musthave:["for", "range", "len"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Подсчитай количество чисел, которые больше 7",tasktype:"task",id:8,taskuuid: "90e8adad-290c-4e6f-afbc-5fa063d6bac0",rightcode:"s = 0\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    if r > 7:\n        s = s + 1\nprint(s)\n",defaultcode:"",forbiddencode:"s = 0\nN = int(input())\na=[int(input())> 7 for i in range(N)]\nprint(sum(a))\n",defaultinput:["3", "3", "9", "10"],defaultoutput:["2"],inout: [{inv:["3", "3", "9", "10"],outv:["2"]},{inv:["4", "3", "9", "10", "11"],outv:["3"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "sum", "count"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "sum", "count"],musthave:["for", "range", "+"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "90c933ec-4f97-4dca-a272-a9e09d5a8553",rightcode:"pass\n",defaultcode:"# Рассмотрим следующую задачу.\n\n# В первой строке поля 'Входные данные' содержится количество строк - 6. Далее идут сами строки. Сложим первую строку со второй, третью - с четвертой, пятую - с шестой.\n\n# Какое количество повторений цикла нам потребуется?\n\n# Правильный ответ - 3. То есть - половина от количества строк - 6//2\nN = int(input())\nfor i in range(N // 2):\n    one = input()\n    two = input()\n    print(one + two)\n\n# Обрати внимание, что нам потребовался оператор целочисленного деления //, обычное деление / не подойдет\n",forbiddencode:"pass\n",defaultinput:["6", "город-", "герой", "море по ", "колено", "крибли крабли", "бумс"],defaultoutput:[],inout: [{inv:["6", "город-", "герой", "море по ", "колено", "крибли крабли", "бумс"],outv:[]},{inv:["6", "Ф", "Ф", "Ф", "Ф", "Ф", "Ф"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Количество чисел всегда чётное. Сложи первое число со вторым, третье - с четвертым, и так далее. Суммы напечатай.",tasktype:"task",id:2,taskuuid: "914e5638-347c-494d-8dd5-be03add2bdf5",rightcode:"N = int(input())\nfor i in range(N // 2):\n    one = int(input())\n    two = int(input())\n    print(one + two)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(int(input()) + int(input())) for i in range(N // 2)]\n",defaultinput:["6", "1", "2", "4", "5", "9", "10"],defaultoutput:["3", "9", "19"],inout: [{inv:["6", "1", "2", "4", "5", "9", "10"],outv:["3", "9", "19"]},{inv:["4", "2", "2", "4", "4"],outv:["4", "8"]}],restrictions: {maxlines:5,forbidden:["Списковые включения", "списки", "append"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "input", "//"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Количество чисел всегда делится без остатка на 3. Умножь первое число на второе и третье, четвертое - на пятое и шестое, и так далее. Произведения напечатай.",tasktype:"task",id:3,taskuuid: "38f0d6f5-2fc0-45c1-9b41-84c822ab4ff2",rightcode:"N = int(input())\nfor i in range(N // 3):\n    one = int(input())\n    two = int(input())\n    three = int(input())\n    print(one * two * three)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(int(input()) * int(input()) * int(input())) for i in range(N // 3)]\n",defaultinput:["6", "1", "2", "4", "5", "9", "10"],defaultoutput:["8", "450"],inout: [{inv:["6", "1", "2", "4", "5", "9", "10"],outv:["8", "450"]},{inv:["3", "2", "2", "4"],outv:["16"]}],restrictions: {maxlines:6,forbidden:["Списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for", "//"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Количество чисел всегда чётное. Напечатай большее из первого и второго числа, большее из третьего и четвертого и так далее. Используй условный оператор",tasktype:"task",id:4,taskuuid: "690cf7ff-d81e-4b47-9f0a-d1576ce40949",rightcode:"N = int(input())\nfor i in range(N // 2):\n    one = int(input())\n    two = int(input())\n    if one > two:\n        print(one)\n    else:\n        print(two)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(max(int(input()), int(input()))) for i in range(N // 2)]\n",defaultinput:["6", "1", "20", "50", "2", "9", "100"],defaultoutput:["20", "50", "100"],inout: [{inv:["6", "1", "20", "4", "50", "9", "100"],outv:["20", "50", "100"]},{inv:["2", "2", "20"],outv:["20"]}],restrictions: {maxlines:8,forbidden:["Списковые включения", "списки", "max"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "max"],musthave:["if"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"Изучи программу",tasktype:"guide",id:5,taskuuid: "4c7e3063-a573-4754-bf31-0468b5781c4a",rightcode:"pass\n",defaultcode:"# Рассмотрим следующую задачу.\n\n# В первой строке поля 'Входные данные' содержится количество чисел - 5. Далее идут сами числа.\n# Требуется найти разность между вторым и первым числом, третьим и вторым, четвертым и третьим, и так далее.\n\n# Сколько повторений цикла нам потребуется?\n\n# Правильный ответ - 4. То есть - на 1 меньше, чем количество чисел.\n\n# Также возникает вторая проблема: нужно где-то хранить предыдущее значение.\n\n# Изучи способ решения данной проблемы\nN = int(input())\nprev = int(input())  # Запоминаем первое число\nfor i in range(N - 1):  # Цикл на 1 меньше, чем количество чисел\n    curr = int(input())  # Считываем следующее число\n    print(curr, '-', prev, '=', curr - prev)  # Вычитаем из следующего числа предыдущее число\n    prev = curr  # Обновляем предыдущее число\n",forbiddencode:"pass\n",defaultinput:["5", "1", "2", "3", "5", "10"],defaultoutput:[],inout: [{inv:["5", "1", "2", "3", "5", "10"],outv:[]},{inv:["2", "2", "20"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Требуется найти разность между вторым и первым числом, третьим и вторым, четвертым и третьим, и так далее. Все разности нужно сложить и напечатать итоговую сумму",tasktype:"task",id:6,taskuuid: "3629cdae-586b-43e0-8667-998b07373389",rightcode:"N = int(input())\nprev = int(input())\nsm = 0\nfor i in range(N - 1):\n    curr = int(input())\n    sm = sm + curr - prev\n    prev = curr\nprint(sm)\n",defaultcode:"",forbiddencode:"N = int(input())\na=[int(input()) for i in range(N)]\nb = [a[i]-a[i-1] for i in range(1,N)]\nprint(sum(b))\n",defaultinput:["4", "1", "3", "7", "9"],defaultoutput:["8"],inout: [{inv:["4", "1", "3", "7", "9"],outv:["8"]},{inv:["2", "2", "20"],outv:["18"]}],restrictions: {maxlines:8,forbidden:["Списковые включения", "списки", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "sum"],musthave:["for", "-"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если одно из чисел меньше предыдущего, то напечатай его",tasktype:"task",id:7,taskuuid: "50554aeb-833e-4871-a370-705b4aa5fe89",rightcode:"N = int(input())\nprev = int(input())\nfor i in range(N - 1):\n    curr = int(input())\n    if curr < prev:\n        print(curr)\n    prev = curr\n",defaultcode:"",forbiddencode:"N = int(input())\na=[int(input()) for i in range(N)]\nb = [a[i] for i in range(1,N) if a[i]<a[i-1]]\n[print(a) for a in b]\n",defaultinput:["4", "1", "3", "2", "1"],defaultoutput:["2", "1"],inout: [{inv:["4", "1", "3", "2", "1"],outv:["2", "1"]},{inv:["3", "1", "0", "1"],outv:["0"]}],restrictions: {maxlines:7,forbidden:["Списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "c4bca955-2bf8-41cb-9af4-cabfeb670ed1",rightcode:"pass\n",defaultcode:"# Вернемся в структуре цикла:\n# for i in range(3):\n#     print('Ура')\n\n# Настала пока изучить счетчик цикла i. На самом деле i - это обычная переменная, которая может принимать разные числовые значения на каждом повторении цикла.\n\n# Проиллюстрируем работу счетчика на конкретном примере\nfor counter in range(3):\n    print(counter)\n# Напечатаются значения 0, 1, 2. Получается, нумерация начинается с нуля и заканчивается на единицу меньше, чем указано в скобках range(3)!\n\n# Что если необходимо начать нумерацию с 1 или другого числа? Прибавим к счетчику столько сколько нужно:\nprint('Нумерация c единицы')\nfor counter in range(3):\n    print(counter + 1)\n\n# Ну и напоследок - нумерация в обратную сторону:\nprint('Нумерация в обратную сторону')\nfor counter in range(3):\n    print(3 - counter)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Добавь к каждой строке ее номер начиная с единицы",tasktype:"task",id:2,taskuuid: "868bfdb7-1c01-4f1e-a237-9ea5b1dd03cd",rightcode:"N = int(input())\nfor num in range(N):\n    line = input()\n    print(num + 1, line)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(num + 1, input()) for num in range(N)]\n",defaultinput:["2", "Иванов", "Петров"],defaultoutput:["1 Иванов", "2 Петров"],inout: [{inv:["2", "Иванов", "Петров"],outv:["1 Иванов", "2 Петров"]},{inv:["3", "Иванов", "Петров", "Сидоров"],outv:["1 Иванов", "2 Петров", "3 Сидоров"]}],restrictions: {maxlines:4,forbidden:["списковые включения", "списки", "f-строки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "f[\"']"],musthave:["for"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Добавь к каждой строке ее номер если считать снизу вверх. Пробелов между номером и точкой быть не должно.",tasktype:"task",id:3,taskuuid: "9f5e980e-79f4-4873-9351-45b1125d899d",rightcode:"N = int(input())\nfor ids in range(N):\n    line = input()\n    print(str(N - ids) + '. ' + line)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(f'{N - ids}. {input()}') for ids in range(N)]\n",defaultinput:["3", "Иванов", "Петров", "Сидоров"],defaultoutput:["3. Иванов", "2. Петров", "1. Сидоров"],inout: [{inv:["3", "Иванов", "Петров", "Сидоров"],outv:["3. Иванов", "2. Петров", "1. Сидоров"]},{inv:["2", "Иванов", "Петров"],outv:["2. Иванов", "1. Петров"]}],restrictions: {maxlines:5,forbidden:["списковые включения", "списки", "f-строки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "f[\"']"],musthave:["for"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Напечатай число, если оно совпадает с номером строчки, в которой оно содержится",tasktype:"task",id:4,taskuuid: "01630cc4-6329-4787-af9b-a40dbb60e5bc",rightcode:"N = int(input())\nfor i in range(1, N + 1):\n    M = input()\n    if str(i) == M:\n        print(M)\n",defaultcode:"",forbiddencode:"N = int(input())\na=[int(input()) for i in range(N)]\n[print(a[i]) for i in range(N) if i+1 == a[i]]\n",defaultinput:["4", "30", "2", "40", "4"],defaultoutput:["2", "4"],inout: [{inv:["4", "30", "2", "40", "4"],outv:["2", "4"]},{inv:["3", "30", "20", "3"],outv:["3"]}],restrictions: {maxlines:5,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:[],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"Изучи программу",tasktype:"guide",id:5,taskuuid: "e6834a8a-c773-4d8d-b3de-7eeddc76f801",rightcode:"pass\n",defaultcode:"# Научимся писать предыдущие программы другим способом.\n\n# 1) Если в скобках указать два числа, например, 1 и 5, то счетчик будет принимать значения от 1 до 4\n# Да, да, да ... это не опечатка 🤔, эту важную деталь ❗️нужно обязательно запомнить\nfor i in range(1, 5):\n    print(i)\n\n# 2) Если в скобках указать три числа, например, 1 и 10 и 2, то счетчик будет принимать значения 1,3,5,7,9\n# Получается третье число - это шаг\nprint('Числа с шагом 2')\nfor i in range(1, 10, 2):\n    print(i)\n\n# 3) Ну, и, напоследок, нумерация в обратную сторону. Если указать два числа 5 и 1, ничего работать не будет. Нужно дополнительно указать шаг со знаком минус:\nprint('Нумерация в обратную сторону')\nfor i in range(5, 1, -1):\n    print(i)\n# ❗️В этом примере диапазон от 5 до 2, последнее число опять не берется, имей это ввиду при решении задач.\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В поле 'Входные данные' содержится число N. Напечатай все числа от 1 до N c шагом 3. Не забывай, что второе число в диапазоне должно быть на 1 больше",tasktype:"task",id:6,taskuuid: "e2b12671-912a-4857-8ed2-92a70212637f",rightcode:"N = int(input())\nfor i in range(1, N + 1, 3):\n    print(i)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(i) for i in range(1, N + 1, 3)]\n",defaultinput:["16"],defaultoutput:["1", "4", "7", "10", "13", "16"],inout: [{inv:["16"],outv:["1", "4", "7", "10", "13", "16"]},{inv:["13"],outv:["1", "4", "7", "10", "13"]}],restrictions: {maxlines:3,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:["for"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В поле 'Входные данные' содержится число N. Напечатай все числа от 1 до N c шагом 3. Не забывай, что второе число в диапазоне должно быть на 1 больше",tasktype:"task",id:7,taskuuid: "3455e9f4-0fef-41de-9fd2-f6e9e58ecac2",rightcode:"N = int(input())\nfor i in range(1, N + 1, 3):\n    print(i)\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(i) for i in range(1, N + 1, 3)]\n\n",defaultinput:["16"],defaultoutput:["1", "4", "7", "10", "13", "16"],inout: [{inv:["16"],outv:["1", "4", "7", "10", "13", "16"]},{inv:["13"],outv:["1", "4", "7", "10", "13"]}],restrictions: {maxlines:3,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:[],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В поле 'Входные данные' содержится 2 числа N и M. Напечатай все числа от N до 1 c шагом M. Не забывай, что второе число в диапазоне должно быть на 1 меньше",tasktype:"task",id:8,taskuuid: "8a63bc65-c2e0-45e8-9edc-91973c1a9e69",rightcode:"N = int(input())\nM = int(input())\nfor i in range(N, 0, -M):\n    print(i)\n",defaultcode:"",forbiddencode:"N = int(input())\nM = int(input())\n[print(i) for i in range(N, 0, -M)]\n",defaultinput:["16", "3"],defaultoutput:["16", "13", "10", "7", "4", "1"],inout: [{inv:["16", "3"],outv:["16", "13", "10", "7", "4", "1"]},{inv:["11", "2"],outv:["11", "9", "7", "5", "3", "1"]}],restrictions: {maxlines:4,forbidden:["списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append"],musthave:[],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В поле 'Входные данные' содержится число N.  Напечатай все числа от 1 до N c шагом 3. Напротив каждого числа укажи четное оно или нет",tasktype:"task",id:9,taskuuid: "e59dab78-33a1-4774-91b7-dd38267081be",rightcode:"N = int(input())\nfor i in range(1, N + 1, 3):\n    if i % 2 == 0:\n        print(str(i) + '-четное')\n    else:\n        print(str(i) + '-нечетное')\n",defaultcode:"",forbiddencode:"N = int(input())\n[print(f'{i}-нечетное') if i % 2 != 0 else print(f'{i}-четное') for i in range(1, N + 1, 3)]\n",defaultinput:["16"],defaultoutput:["1-нечетное", "4-четное", "7-нечетное", "10-четное", "13-нечетное", "16-четное"],inout: [{inv:["16"],outv:["1-нечетное", "4-четное", "7-нечетное", "10-четное", "13-нечетное", "16-четное"]},{inv:["10"],outv:["1-нечетное", "4-четное", "7-нечетное", "10-четное"]}],restrictions: {maxlines:6,forbidden:["списковые включения", "списки", "f-строки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "f[\"']"],musthave:[],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "c2fec89b-da7c-4683-b831-31a5751609de",rightcode:"pass\n",defaultcode:"# Взглянем на структуру цикла более опытными глазами.\n\n# В данном примере i - это переменная, которая принимает значения из диапазона range. Range в переводе с английского Диапазон. Как мы уже знаем диапазон в Питоне можно задавать одним числом (от нуля до указанного числа), двумя числами(первое и последнее число), и тремя числами(первое, последнее, шаг)\nprint('Диапазон чисел')\nfor i in range(3):\n    print(i)\n\n# Вместо диапазона чисел можно использовать набор символов. В этом случае в переменную цикла i будут по очереди попадать все символы строки\nprint('Диапазон символов')\nfor i in 'ABCDEF1234':\n    print(i)\n\nprint('Еще пример')\ncity = input()\nfor i in city:\n    print(i)\n",forbiddencode:"pass\n",defaultinput:["LONDON"],defaultoutput:[],inout: [{inv:["LONDON"],outv:[]},{inv:["LONDON"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка. Подсчитай количество букв Е в этой строке",tasktype:"task",id:2,taskuuid: "6b17eb40-2c5c-4395-a460-544b7da163a5",rightcode:"word = input()\nlet = 0\nfor letter in word:\n    if letter == 'Е':\n        let = let + 1\nprint(let)\n",defaultcode:"",forbiddencode:"print(input().count('Е'))\n",defaultinput:["ДЛИННОШЕЕЕ"],defaultoutput:["3"],inout: [{inv:["ДЛИННОШЕЕЕ"],outv:["3"]},{inv:["ЕЕЕЕЕЕ"],outv:["6"]}],restrictions: {maxlines:6,forbidden:["индексы строк", "списковые включения", "списки", "Тернарный оператор", "sum", "count", "len"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "if[^:]*else", "sum", "count", "len"],musthave:["for", " in "],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка из двух букв A и B. Подсчитай количество букв A и B в этой строке",tasktype:"task",id:3,taskuuid: "b6d9413f-cf02-4779-8fb3-29ee716d2c6e",rightcode:"word = input()\nletA = 0\nletB = 0\nfor letter in word:\n    if letter == 'A':\n        letA = letA + 1\n    if letter == 'B':\n        letB = letB + 1\nprint('A:' + str(letA))\nprint('B:' + str(letB))\n",defaultcode:"",forbiddencode:"word = input()\na=sum(m=='A' for m in word)\nb=sum(m=='B' for m in word)\nprint(f'A:{a}')\nprint(f'B:{b}')\n",defaultinput:["AAABBBAAABA"],defaultoutput:["A:7", "B:4"],inout: [{inv:["AAABBBAAABA"],outv:["A:7", "B:4"]},{inv:["AB"],outv:["A:1", "B:1"]}],restrictions: {maxlines:10,forbidden:["f-строки", "индексы строк", "списковые включения", "списки", "Тернарный оператор", "sum", "count", "len"],forbiddenRe:["f[\"']", "[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "if[^:]*else", "sum", "count", "len"],musthave:["for", " in "],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка из цифр. Сложи все цифры в строке",tasktype:"task",id:4,taskuuid: "723900cf-e6d4-4f96-9c23-d842ce220b6d",rightcode:"line = input()\nsm = 0\nfor digit in line:\n    sm = sm + int(digit)\nprint(sm)\n",defaultcode:"",forbiddencode:"print(sum(map(int, input())))\n",defaultinput:["12223"],defaultoutput:["10"],inout: [{inv:["12223"],outv:["10"]},{inv:["89"],outv:["17"]}],restrictions: {maxlines:5,forbidden:["индексы строк", "списковые включения", "списки", "sum", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "sum", "map"],musthave:[],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка из цифр. Добавь после каждой цифры символ +",tasktype:"task",id:5,taskuuid: "04c0b078-0deb-409f-8661-470c1ba876a3",rightcode:"line = input()\nextra = ''\nfor digit in line:\n    extra = extra + digit + '+'\nprint(extra)\n",defaultcode:"",forbiddencode:"line = list(input())\nprint('+'.join(line)+'+')\n",defaultinput:["12223"],defaultoutput:["1+2+2+2+3+"],inout: [{inv:["12223"],outv:["1+2+2+2+3+"]},{inv:["89"],outv:["8+9+"]}],restrictions: {maxlines:6,forbidden:["индексы строк", "списковые включения", "списки", "map", "list", "join"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "append", "map", "list", "join"],musthave:["for", " in "],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка из цифр и знаков +. Удали + из строки",tasktype:"task",id:6,taskuuid: "c3f6a264-f79e-4d62-9e5c-68367b0ececb",rightcode:"line = input()\nextra = ''\nfor digit in line:\n    if digit != '+':\n        extra = extra + digit\nprint(extra)\n",defaultcode:"",forbiddencode:"print(''.join(input().split('+')))\n",defaultinput:["1+2+2+2+3"],defaultoutput:["12223"],inout: [{inv:["1+2+2+2+3"],outv:["12223"]},{inv:["8+9"],outv:["89"]}],restrictions: {maxlines:6,forbidden:["индексы строк", "срезы", "списковые включения", "списки", "Тернарный оператор", "list", "join", "split"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "if[^:]*else", "list", "join", "split"],musthave:[],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' в первой строке содержится набор цифр. Во второй строке - произвольное число. Перемножь все цифры в первой строке, найди остаток от деления полученного произведения на число во второй строке",tasktype:"task",id:1,taskuuid: "9968c76f-c48b-452b-8342-f8c2f1c56db9",rightcode:"line = input()\nsecond = int(input())\nmult = 1\nfor digit in line:\n    mult = mult * int(digit)\nprint(mult % second)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["1234", "3"],defaultoutput:["0"],inout: [{inv:["1234", "3"],outv:["0"]},{inv:["1235", "4"],outv:["2"]}],restrictions: {maxlines:7,forbidden:[],forbiddenRe:[],musthave:["for", " in "],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' содержится набор символов, среди которых одна буква A. Подсчитай на каком месте стоит буква A (счёт ведем с 1)",tasktype:"task",id:2,taskuuid: "bd4a3100-6aa5-487d-a205-bf0e4376ad9c",rightcode:"line = input()\ncnt = 0\nfor digit in line:\n    cnt = cnt + 1\n    if digit == 'A':\n        print(cnt)\n",defaultcode:"",forbiddencode:"print(input().rfind('A')+1)\n",defaultinput:["BBBAB"],defaultoutput:["4"],inout: [{inv:["BBBAB"],outv:["4"]},{inv:["BBBBBA"],outv:["6"]}],restrictions: {maxlines:6,forbidden:["find", "rfind"],forbiddenRe:["find", "rfind"],musthave:[],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные'  содержится набор символов. Замени пятую букву на звездочку * (счёт ведем с 1)",tasktype:"task",id:3,taskuuid: "80fcdad4-da23-4c56-9bdb-b52242486a2f",rightcode:"symbols = input()\ncnt = 0\nline = ''\nfor digit in symbols:\n    cnt = cnt + 1\n    if cnt == 5:\n        line = line + '*'\n    else:\n        line = line + digit\nprint(line)\n",defaultcode:"",forbiddencode:"a=input()\nprint(f'{a[:4]}*{a[5:]}')\n",defaultinput:["BBBABG"],defaultoutput:["BBBA*G"],inout: [{inv:["BBBABG"],outv:["BBBA*G"]},{inv:["DDBBVA"],outv:["DDBB*A"]}],restrictions: {maxlines:10,forbidden:["f-строки", "индексы строк", "срезы", "списковые включения", "списки"],forbiddenRe:["f[\"']", "[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]"],musthave:["for", " in "],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' содержится набор символов. Удали все символы начиная с указанного во второй строке(счёт ведем с 1)",tasktype:"task",id:4,taskuuid: "548c93a9-53c2-49e2-a3b7-502b45c5c305",rightcode:"symbols = input()\npos = int(input())\ncnt = 0\nline = ''\nfor sym in symbols:\n    cnt = cnt + 1\n    if cnt < pos:\n        line = line + sym\nprint(line)\n",defaultcode:"",forbiddencode:"symbols = input()\npos = int(input())\nprint(symbols[:pos-1])\n",defaultinput:["BBBABG", "4"],defaultoutput:["BBB"],inout: [{inv:["BBBABG", "4"],outv:["BBB"]},{inv:["DD", "3"],outv:["DD"]}],restrictions: {maxlines:9,forbidden:["индексы строк", "срезы", "списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]"],musthave:[],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' содержится набор символов. Удали все символы  с 3 по 6. Счёт ведем с 1.",tasktype:"task",id:5,taskuuid: "45df6c59-5c17-4a69-87a3-d764a5c63561",rightcode:"symbols = input()\ncnt = 0\nline = ''\nfor sym in symbols:\n    cnt = cnt + 1\n    if cnt < 3:\n        line = line + sym\n    if cnt > 6:\n        line = line + sym\nprint(line)\n",defaultcode:"",forbiddencode:"symbols = input()\nprint(symbols[:2]+symbols[6:])\n",defaultinput:["BBBABGDDSA"],defaultoutput:["BBDDSA"],inout: [{inv:["BBBABGDDSA"],outv:["BBDDSA"]},{inv:["QWERTYUI"],outv:["QWUI"]}],restrictions: {maxlines:10,forbidden:["индексы строк", "срезы", "списковые включения", "списки"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]"],musthave:[],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' содержится набор символов. Замени все символы  с 7 по 13 на слово Best",tasktype:"task",id:6,taskuuid: "ce4acca9-282b-4d7b-882b-f32987c05e6f",rightcode:"symbols = input()\ncnt = 0\nline1 = ''\nline2 = ''\nfor sym in symbols:\n    cnt = cnt + 1\n    if cnt < 7:\n        line1 = line1 + sym\n    if cnt > 13:\n        line2 = line2 + sym\nprint(line1 + 'Best' + line2)\n",defaultcode:"",forbiddencode:"symbols = input()\nprint(f'{symbols[:6]}Best{symbols[13:]}')\n",defaultinput:["PythonReplaceCode"],defaultoutput:["PythonBestCode"],inout: [{inv:["PythonReplaceCode"],outv:["PythonBestCode"]},{inv:["QWERTYUIOPASDFGHJKL"],outv:["QWERTYBestFGHJKL"]}],restrictions: {maxlines:12,forbidden:["f-строка", "индексы строк", "срезы", "списковые включения", "списки"],forbiddenRe:["f[\"']", "[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]"],musthave:[],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "6ba0727f-112e-4c61-b184-e8e69c3f7175",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся искать минимальные, максимальные и средние значения.\n\n# Предположим, нам надо найти максимальное среди шести чисел 1 8 17 8 18 3, которые находятся в поле 'Входные данные'.\n# Введем переменную mx, в которую поместим значение заведомо меньшее любого из чисел, среди которых осуществляется поиск.\n\nmx = 0  # Меньше нуля нет ни одного числа\nfor i in range(6):  # Будем перебирать все числа\n    a = int(input())\n    if a > mx:  # Если очередное число больше переменной mx, то поместим это значение в переменную mx\n        mx = a\nprint(mx)  # Готово! Максимальное число найдено!\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"В поле 'Входные данные' содержится набор цифр. Найди максимальную цифру",tasktype:"task",id:2,taskuuid: "c20a87f7-71a4-407e-9440-95ebdbae03ea",rightcode:"line = input()\nmx = 0\nfor digit in line:\n    if int(digit) > mx:\n        mx = int(digit)\nprint(mx)\n",defaultcode:"",forbiddencode:"digits = list(input())\nprint(max(digits))\n",defaultinput:["12534"],defaultoutput:["5"],inout: [{inv:["12534"],outv:["5"]},{inv:["123"],outv:["3"]}],restrictions: {maxlines:7,forbidden:["индексы строк", "списковые включения", "списки", "max", "map", "list"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "max", "map", "list"],musthave:["for", " in "],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Найди длину самую длинную строку и напечатай её.",tasktype:"task",id:3,taskuuid: "0b1fc8f1-0145-47e2-ad6e-0120c5b751b5",rightcode:"n = int(input())\nmx = 0\nmxlen = ''\nfor i in range(n):\n    line = input()\n    if len(line) > mx:\n        mx = len(line)\n        mxlen = line\nprint(mxlen)\n",defaultcode:"",forbiddencode:"n = int(input())\na=[input() for i in range(n)]\nprint(max(a,key=len))\n",defaultinput:["3", "Москва", "Рим", "Сан-Франциско"],defaultoutput:["Сан-Франциско"],inout: [{inv:["3", "Москва", "Рим", "Сан-Франциско"],outv:["Сан-Франциско"]},{inv:["3", "Москва", "Рим", "Клин"],outv:["Москва"]}],restrictions: {maxlines:10,forbidden:["списковые включения", "списки", "max"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "max"],musthave:["for"],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Все числа отрицательные. Самое маленькое число  которое может встретиться это -1000. Найди максимальное число",tasktype:"task",id:4,taskuuid: "0d3aea7d-a404-4f9a-b5d6-995ca39818c2",rightcode:"n = int(input())\nmx = -1001\nfor i in range(n):\n    number = int(input())\n    if number > mx:\n        mx = number\nprint(mx)\n",defaultcode:"",forbiddencode:"n = int(input())\na = [int(input()) for i in range(n)]\nprint(max(a))\n",defaultinput:["3", "-1", "-2", "-5"],defaultoutput:["-1"],inout: [{inv:["3", "-1", "-2", "-5"],outv:["-1"]},{inv:["4", "-1000", "-1000", "-999", "-1000"],outv:["-999"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "max"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "max"],musthave:["for"],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:5,taskuuid: "88bb33c8-e46c-493e-b678-4836756cf5b7",rightcode:"pass\n",defaultcode:"# Предположим нам надо найти минимальное число среди шести чисел 1 8 17 8 18 3, которые находятся в поле 'Входные данные'.\n\n# Введем переменную mn, в которую поместим число заведомо большее любого из чисел, среди которых  осуществляется поиск\nmn = 100  # Больше 100 точно ничего нет среди чисел\nfor i in range(6):  # Будем перебирать все числа\n    a = int(input())\n    if a < mn:  # Если очередное число меньше переменной mn, то поместим это значение в переменную mn\n        mn = a\nprint(mn)\nprint('dummycode')  # Готово! Минимальное число найдено\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Все числа положительные. Самое большое число  которое может встретиться это 1000. Найди минимальное число",tasktype:"task",id:6,taskuuid: "e6b772fc-84bd-4660-b457-85465afec0e3",rightcode:"n = int(input())\nmn = 1001\nfor i in range(n):\n    number = int(input())\n    if number < mn:\n        mn = number\nprint(mn)\n",defaultcode:"",forbiddencode:"n = int(input())\na = [int(input()) for i in range(n)]\nprint(min(a))\n",defaultinput:["3", "1", "20", "10"],defaultoutput:["1"],inout: [{inv:["3", "1", "20", "10"],outv:["1"]},{inv:["4", "1000", "1000", "999", "1000"],outv:["999"]}],restrictions: {maxlines:8,forbidden:["списковые включения", "списки", "min"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "min"],musthave:["for"],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:7,taskuuid: "3ee95094-6a29-4dc4-ba06-f56477b8935d",rightcode:"pass\n",defaultcode:"# Предположим нам надо найти среднее значение среди шести чисел 1 8 17 8 18 3, которые находятся в поле 'Входные данные'.\n\n# Здесь все просто, разделим сумму на количество\nsm = 0\nfor i in range(6):\n    a = int(input())\n    sm = sm + a\nprint(sm / 6)\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:8,taskuuid: "ba5ef8dd-fedd-4ad3-a7b2-6cdf507727f8",rightcode:"pass\n",defaultcode:"# Усложним задачу, найдем среднее значение чисел, которые больше 3.\n\nsm = 0\ncnt = 0  # Введем дополнительную переменную 'cnt' для подсчета таких чисел\nfor i in range(6):\n    a = int(input())\n    if a > 3:\n        sm = sm + a\n        cnt = cnt + 1\nprint(sm / cnt)  # Раздели сумму на подсчитанное количество\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"В поле 'Входные данные' в первой строке содержится набор цифр. Найди среднее значение всех цифр не равных 8 ",tasktype:"task",id:9,taskuuid: "be056ba8-7f66-4d92-a603-998f872dc15f",rightcode:"line = input()\nsm = 0\ncnt = 0\nfor digit in line:\n    if digit != '8':\n        sm = sm + int(digit)\n        cnt = cnt + 1\nprint(sm / cnt)\n",defaultcode:"",forbiddencode:"n = list(input())\na = [int(e) for e in n if e!='8']\nprint(sum(a)/len(a))\n",defaultinput:["88848882"],defaultoutput:["3.0"],inout: [{inv:["88848882"],outv:["3.0"]},{inv:["888488823"],outv:["3.0"]}],restrictions: {maxlines:8,forbidden:["списковые включения", "списки", "sum", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "sum", "map"],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "c5aa28b7-4878-4a2c-94e6-aad54fc90624",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся выполнять поиск числа или строки среди набора значений.\n\n# Предположим нам надо понять есть ли число 8 среди шести уникальных чисел 1 8 17 18 3, которые находятся в поле 'Входные данные'.\nfor i in range(5):  # Будем перебирать все числа\n    a = input()\n    if a == '8':  # если очередное равно 8, то напечатаем результат поиска\n        print('Число 8 найдено')\nprint('dummycode')\n# Обрати внимание, что нам не нужно переводить строку в число, чтобы найти число 8\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "18", "3"],outv:[]},{inv:["1", "8", "17", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:2,taskuuid: "231314a6-f375-48ed-af49-1cfbae6ef71d",rightcode:"pass\n",defaultcode:"# Усложним задачу, выполним поиск числа 10, которого нет в списке, программа должна вывести 'Число 10 не найдено'.\n\n# Задача решается с помощью дополнительной переменной, которую иногда называют флагом. Флагом её называют потому, что поиск с её помощью похож на флаги: есть всего 2 варианта, флаг или поднят, или опущен. В целом это обычная переменная, которая может иметь любое название.\n\nflag = 0  # Флаг опущен\nfor i in range(6):\n    a = input()\n    if a == '10':  # Eсли очередное число равно 10, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n        flag = 1  # Поднимаем флаг\nif flag == 0:  # Если после выполнения цикла переменная все еще равна 0(флаг опущен), это значит, что среди чисел не нашлось 10\n    print('Число 10 не найдено')\nif flag == 1:\n    print('Число 10 найдено')\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:3,taskuuid: "c0734a4d-d2e0-4a3a-a031-266d1cb33f4b",rightcode:"pass\n",defaultcode:"# Выполним поиск числа 8, которое повторяется в списке много раз, программа должна вывести 'Число 8 найдено'\n# Обычным способом это сделать не получится -  программа напечатает строку 'Число 8 найдено' много раз. Задача решается двумя способами:\n\n# Решение с помощью флага\nflag = 0\nfor i in range(6):\n    a = int(\n        input())  # если очередное число равно 8, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n    if a == 8:\n        flag = 1\nif flag == 1:  # Если после выполнения цикла флаг равен 1, это значит, что среди чисел есть число 8\n    print('Число 8 найдено')\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "8", "8"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "8", "8"],outv:[]},{inv:["1", "8", "17", "8", "8", "8"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:4,taskuuid: "fd5866be-2918-4ddc-8fd8-c1c5a03e686e",rightcode:"pass\n",defaultcode:"# Другой способ - это использование новой команды, которая называется break. Команда break позволяет прервать выполнение цикла.\n\n# Попробуй выполнить программу с использованием команды break и без неё\nfor i in range(6):\n    a = int(input())\n    if a == 8:\n        print('Число 8 найдено')\n        break\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "8", "8"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "8", "8"],outv:[]},{inv:["1", "8", "17", "8", "8", "8"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"В поле 'Входные данные' содержится набор цифр. Напечатай 'Да' если среди них есть цифра 9",tasktype:"task",id:5,taskuuid: "edcecb9b-717f-4b8f-aef4-a064f1746d37",rightcode:"line = input()\nfor digit in line:\n    if digit == '9':\n        print('Да')\n        break\n",defaultcode:"",forbiddencode:"line = input()\nif '9' in line:\n    print('Да')\n",defaultinput:["125349"],defaultoutput:["Да"],inout: [{inv:["125349"],outv:["Да"]},{inv:["123"],outv:[]}],restrictions: {maxlines:5,forbidden:["индексы строк", "списковые включения", "списки", "условный оператор in", "count", "find", "rfind"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "if.* in .*:", "count", "find", "rfind"],musthave:["for"],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"В поле 'Входные данные' содержится набор цифр. Напечатай 'Да' если среди них есть цифра 9. Напечатай 'Нет', если  цифры-нет",tasktype:"task",id:6,taskuuid: "d33e4652-7ad9-43a3-8cab-c8263fe21846",rightcode:"line = input()\nflag = 0\nfor digit in line:\n    if digit == '9':\n        flag = 1\nif flag == 1:\n    print('Да')\nelse:\n    print('Нет')\n\n",defaultcode:"",forbiddencode:"line = input()\nprint('Да') if '9' in line else print('Нет')\n",defaultinput:["125349"],defaultoutput:["Да"],inout: [{inv:["125349"],outv:["Да"]},{inv:["123"],outv:["Нет"]}],restrictions: {maxlines:10,forbidden:["индексы строк", "списковые включения", "списки", "условный оператор in", "Тернарный оператор", "count", "find", "rfind"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[.*\\]", "if.* in .*:", "if[^:]*else", "count", "find", "rfind"],musthave:["for"],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "79b1ecd2-bef3-4599-8ae2-be1f29161cb7",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся использовать индексы строк.\n\n# Пусть мы имеем строку\ns = 'Программирование'\n\n# В Питоне есть возможность извлечь из строки отдельный символ.\n# Для этого нужно указать в квадратных скобках номер символа\nsym = s[2]\nprint('Третий символ строки:', sym)\n# Напечатается третий символ, так как нумерация в питоне идет с нуля 0,1,2\n\n# Также в Питоне существует обратная нумерация, она начинается с -1\nsym = s[-1]\nprint('Последний символ строки:', sym)\nsym = s[-2]\nprint('Предпоследний символ строки:', sym)\n\n# Код, который выдаст ошибку, так как указан номер символа, который не существует:\n# print(s[100])\n# print(s[-100])\n\n# Код, который выдаст ошибку, так как строки нельзя изменять:\n# s[1]='A'\n\n# Раскомментируй некоторые строки кода и убедись в этом\nprint('dummycode')\n\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка. Напечатай вместе первый и последний символ строки. Используй индексы",tasktype:"task",id:2,taskuuid: "cfd90674-ab2b-4a32-80aa-6bb70cbb95d9",rightcode:"s = input()\na = s[0]\nb = s[-1]\nprint(a + b)\n",defaultcode:"",forbiddencode:"s = input()\nline=''\ncnt=0\nfor i in s:\n    if cnt==0:\n        line+=i\n    if cnt == len(s)-1:\n        line += i\n    cnt+=1\nprint(line)\n",defaultinput:["Картина"],defaultoutput:["Ка"],inout: [{inv:["Картина"],outv:["Ка"]},{inv:["Дороги"],outv:["Ди"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["["],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержатся 2 строки. В первой строке - набор символов, во второй - число M. Повтори третий символ строки M раз ",tasktype:"task",id:3,taskuuid: "88798bf4-f85e-4cc2-9434-b7110223e169",rightcode:"s = input()\nM = int(input())\na = s[2]\nprint(a * M)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Картина", "8"],defaultoutput:["рррррррр"],inout: [{inv:["Картина", "8"],outv:["рррррррр"]},{inv:["Молоко", "4"],outv:["лллл"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["*"],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка. Замени все символы кроме первого и последнего на звездочку *",tasktype:"task",id:4,taskuuid: "4c8ba354-2bd2-4209-bc6c-8ca707ec07e4",rightcode:"s = input()\nL = len(s) - 2\na = s[0]\nb = s[-1]\nprint(a + '*' * L + b)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Картина"],defaultoutput:["К*****а"],inout: [{inv:["Картина"],outv:["К*****а"]},{inv:["Дороги"],outv:["Д****и"]}],restrictions: {maxlines:5,forbidden:[],forbiddenRe:[],musthave:["*", "]"],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка из нечетного количества символов, напечатай символ посередине.",tasktype:"task",id:5,taskuuid: "300e5a3f-4f03-405b-a661-5b2528daa2ca",rightcode:"s = input()\nmid = len(s) // 2\nprint(s[mid])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Картина"],defaultoutput:["т"],inout: [{inv:["Картина"],outv:["т"]},{inv:["Колокол"],outv:["о"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["//"],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка из нечетного количества символов. Напечатай три символа, которые находятся посередине строки.",tasktype:"task",id:6,taskuuid: "4e1f2297-9fdc-4843-bcee-6e9ffaaf4cf2",rightcode:"s = input()\nmid = len(s) // 2\nprint(s[mid - 1] + s[mid] + s[mid + 1])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Картина"],defaultoutput:["рти"],inout: [{inv:["Картина"],outv:["рти"]},{inv:["Колокол"],outv:["лок"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["]"],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка из четного количества символов, напечатай два символа посередине",tasktype:"task",id:7,taskuuid: "7204c9fc-da9c-45d8-9481-3c669980925e",rightcode:"s = input()\nmid = len(s) // 2\nprint(s[mid - 1] + s[mid])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Дорога"],defaultoutput:["ро"],inout: [{inv:["Дорога"],outv:["ро"]},{inv:["Марс"],outv:["ар"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["]"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "39a7b535-18aa-43d5-b572-4f4857232bcb",rightcode:"pass\n",defaultcode:"# Мы уже знаем, что для перебора символов в строке можно использовать такой цикл:\ns = 'Кодер'\nfor a in s:\n    print(a)\n\n# Существует второй способ перебора символов - через индексы:\nprint('Перебор через индексы')\nL = len(s)  # Берем длину строки\nfor i in range(L):  # Указываем её в круглых скобках\n    print(s[i])\n\n# Продемонстрируем преимущества данного способа\nprint('Вывод каждого второго символа')\nL = len(s)\nfor i in range(1, L, 2):\n    print(s[i])\n\nprint('Вывод символов парами 0 и 1, 1 и 2 и так далее')\nL = len(s)\nfor i in range(L - 1):\n    print(s[i], s[i + 1])\n# Обрати внимание, что мы используем L-1 повторений цикла в данном примере\n# Убери -1 и увидишь что получится\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка. Оставь каждый третий символ, остальные удали, результат напечатай",tasktype:"task",id:2,taskuuid: "195e8ee2-2d7b-45c1-82a1-eb3992982821",rightcode:"s = input()\nL = len(s)\nres = ''\nfor i in range(2, L, 3):\n    res = res + s[i]\nprint(res)\n",defaultcode:"",forbiddencode:"print(input()[2::3])\n",defaultinput:["Картина"],defaultoutput:["рн"],inout: [{inv:["Картина"],outv:["рн"]},{inv:["Дороги"],outv:["ри"]}],restrictions: {maxlines:6,forbidden:["срезы", "списковые включения", "списки"],forbiddenRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]", "[\\[(].*for[^:]*in.*[\\])]"],musthave:["for", "[", "]"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка с четным количеством символов. Добавь тире после каждой пары символов",tasktype:"task",id:4,taskuuid: "d06bfa83-4c2c-44b9-b683-2ab5db4209b2",rightcode:"s = input()\nL = len(s)\nres = ''\nfor i in range(0, L, 2):\n    res = res + s[i] + s[i + 1] + '-'\nprint(res)\n",defaultcode:"",forbiddencode:"s = input()\nL = len(s)\nprint('-'.join([s[i:i + 2] for i in range(0, L, 2)])+'-')\n",defaultinput:["Картон"],defaultoutput:["Ка-рт-он-"],inout: [{inv:["Картон"],outv:["Ка-рт-он-"]},{inv:["Дорога"],outv:["До-ро-га-"]}],restrictions: {maxlines:6,forbidden:["f-строки", "срезы", "списковые включения", "join"],forbiddenRe:["f[\"']", "\\[[^\\]\\[]*:[^\\]\\[]*\\]", "[\\[(].*for[^:]*in.*[\\])]", "join"],musthave:["for", "[", "]"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка. В строке более 2х символов. Выведи символы тройками: 1 2 3,  2 3 4,  3 4 5 и так далее.",tasktype:"task",id:5,taskuuid: "a1c5054c-f356-42a1-a86c-9b598d3560ae",rightcode:"s = input()\nL = len(s)\nfor i in range(L - 2):\n    print(s[i] + s[i + 1] + s[i + 2])\n",defaultcode:"",forbiddencode:"s = input()\nL = len(s)\n[print(s[i:i + 3]) for i in range(0, L-2)]\n",defaultinput:["Картон"],defaultoutput:["Кар", "арт", "рто", "тон"],inout: [{inv:["Картон"],outv:["Кар", "арт", "рто", "тон"]},{inv:["Дорога"],outv:["Дор", "оро", "рог", "ога"]}],restrictions: {maxlines:4,forbidden:["срезы", "списковые включения"],forbiddenRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]", "[\\[(].*for[^:]*in.*[\\])]"],musthave:["for", "[", "]"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка c четным количеством символов. Выведи символы парами: первый и последний,  второй и предпоследний,  и так далее ",tasktype:"task",id:6,taskuuid: "8efcc0e5-4621-4555-86df-5a1d103bf2df",rightcode:"s = input()\nL = len(s) // 2\nfor i in range(L):\n    print(s[i] + s[-i - 1])\n",defaultcode:"",forbiddencode:"s = input()\nL = len(s) // 2\n[print(s[i] + s[-i - 1]) for i in range(L)]\n",defaultinput:["Картон"],defaultoutput:["Кн", "ао", "рт"],inout: [{inv:["Картон"],outv:["Кн", "ао", "рт"]},{inv:["Дорога"],outv:["Да", "ог", "ро"]}],restrictions: {maxlines:4,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["for", "[", "]"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка с нечетным количеством символов. Замени средний символ на тире",tasktype:"task",id:7,taskuuid: "115d345d-e57e-4c88-b7c8-f04af3a3ab0e",rightcode:"s = input()\nL = len(s)\nmid = L // 2\nres = ''\nfor i in range(L):\n    if i != mid:\n        res = res + s[i]\n    else:\n        res = res + '-'\nprint(res)\n",defaultcode:"",forbiddencode:"s = input()\nL = len(s)\nmid = L // 2\nprint(f'{s[:mid]}-{s[mid+1:]}')\n",defaultinput:["Картина"],defaultoutput:["Кар-ина"],inout: [{inv:["Картина"],outv:["Кар-ина"]},{inv:["Дорогая"],outv:["Дор-гая"]}],restrictions: {maxlines:10,forbidden:["f-строки", "срезы", "списковые включения"],forbiddenRe:["f[\"']", "\\[[^\\]\\[]*:[^\\]\\[]*\\]", "[\\[(].*for[^:]*in.*[\\])]"],musthave:["for", "[", "]"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка с четным количеством символов. Добавь в середину символ тире",tasktype:"task",id:8,taskuuid: "e2cb9d0a-80e4-4d93-98c5-155988ac80d3",rightcode:"s = input()\nL = len(s)\nmid = L // 2\nres = ''\nfor i in range(L):\n    if i == mid:\n        res = res + '-'\n    res = res + s[i]\nprint(res)\n",defaultcode:"",forbiddencode:"s = input()\nL = len(s)\nmid = L // 2\nprint(f'{s[:mid]}-{s[mid:]}')\n",defaultinput:["Картон"],defaultoutput:["Кар-тон"],inout: [{inv:["Картон"],outv:["Кар-тон"]},{inv:["Дорога"],outv:["Дор-ога"]}],restrictions: {maxlines:10,forbidden:["f-строки", "срезы", "списковые включения"],forbiddenRe:["f[\"']", "\\[[^\\]\\[]*:[^\\]\\[]*\\]", "[\\[(].*for[^:]*in.*[\\])]"],musthave:["for", "range", "len", "[", "]", "len"],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "0516745b-c851-42af-949a-c89196fb72e6",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся использовать срезы 🍰 строк.\n\n# Срезы очень похожи на индексы, но позволяют вырезать из строки более одного символа.\ns = 'параллелепипед'\nprint(s)\n# Срез с 1-го по 5-ый символ. Обрати внимание как и в циклах нужно указать число на 1 больше - 6\n# Напомним также, что нумерация идет с нуля\na = s[1:6]\nprint('Срез с 1-го по 5-ый символ:', a)\nprint('Срез с 3-го символа до конца строки:', s[3:])\nprint('Срез с начала строки до 6-го символа:', s[:7])\nprint('Срез с 3-го символа с начала строки до 4 символа, считая с конца строки:', s[3:-4])\nprint('Срез с 3-го символа(считая с конца строки) до конца строки:', s[-3:])\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка. Напечатай строку, состоящую из трех первых и трех последних символов строки",tasktype:"task",id:2,taskuuid: "3e47c9e8-539e-4cfb-a422-956381e027ce",rightcode:"line = input()\ns = line[:3] + line[-3:]\nprint(s)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Перевоплощение"],defaultoutput:["Перние"],inout: [{inv:["Перевоплощение"],outv:["Перние"]},{inv:["Владивосток"],outv:["Влаток"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Срежь с каждой строки по 5 символов, результат напечатай",tasktype:"task",id:3,taskuuid: "f41ca247-1a3f-4b95-9f59-bae39144258c",rightcode:"n = int(input())\nfor i in range(n):\n    line = input()\n    print(line[:5])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["3", "комната", "квартира", "улица"],defaultoutput:["комна", "кварт", "улица"],inout: [{inv:["3", "комната", "квартира", "улица"],outv:["комна", "кварт", "улица"]},{inv:["4", "комната", "квартира", "улица", "поселок"],outv:["комна", "кварт", "улица", "посел"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка из четного количества символов. Добавь тире посередине. Используй срезы",tasktype:"task",id:4,taskuuid: "69d08e65-2e93-41ec-afce-11897027ddba",rightcode:"line = input()\nmid = len(line) // 2\nprint(line[:mid] + '-' + line[mid:])\n",defaultcode:"",forbiddencode:"line = input()\nmid = len(line) // 2\nprint(f'{line[:mid]}-{line[mid:]}')\n",defaultinput:["дорога"],defaultoutput:["дор-ога"],inout: [{inv:["дорога"],outv:["дор-ога"]},{inv:["квартира"],outv:["квар-тира"]}],restrictions: {maxlines:4,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка символов. Замени последние три символа на восклицательный знак. Используй срезы",tasktype:"task",id:5,taskuuid: "99690b10-5dc4-46bb-9bf6-53186cb040e3",rightcode:"line = input()\nprint(line[:-3] + '!')\n",defaultcode:"",forbiddencode:"line = input()\nprint(f'{line[:-3]}!')\n",defaultinput:["дорога"],defaultoutput:["дор!"],inout: [{inv:["дорога"],outv:["дор!"]},{inv:["квартира"],outv:["кварт!"]}],restrictions: {maxlines:2,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"Изучи программу",tasktype:"guide",id:6,taskuuid: "dfbd624d-8138-4a6e-9624-c6e2dd0b30cb",rightcode:"pass\n",defaultcode:"# В срезах можно использовать третье число - шаг.\n\ns = 'параллелепипед'\nprint(s)\n# Срез с 1-го по 5-ый символ c шагом 2, то есть питон вырежет 1, 3 и 5 символы\na = s[1:6:2]\nprint('Срез с 1-го по 5-ый символ c шагом 2:', a)\n# Срез с начала до конца с шагом 3, то есть питон вырежет символы 0, 3, 6 и так далее\nprint('Срез с начала до конца c шагом 3:', s[::3])\n# Есть еще вот такая хитрая штука. Выполни программу и посмотри на результат, ты будешь часто использовать такой фокус\nprint('Срез с начала до конца с шагом -1:', s[::-1])\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка символов. Удали каждый второй символ. Результат напечатай. Используй срезы",tasktype:"task",id:7,taskuuid: "e8cd34d9-a429-4c12-8005-04d8213b121c",rightcode:"line = input()\nprint(line[::2])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["дорога"],defaultoutput:["дрг"],inout: [{inv:["дорога"],outv:["дрг"]},{inv:["квартира"],outv:["катр"]}],restrictions: {maxlines:2,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка символов. Вырежи каждый третий символ . Результат разверни в обратную сторону. Используй срезы",tasktype:"task",id:8,taskuuid: "177f0e0c-d545-4ccb-9262-525909249c8e",rightcode:"line = input()\na = line[2::3]\nprint(a[::-1])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["123456789"],defaultoutput:["963"],inout: [{inv:["123456789"],outv:["963"]},{inv:["123456789XYZ"],outv:["Z963"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка цифр. Вырежи каждый второй символ . Найди сумму вырезанных цифр. Используй срезы",tasktype:"task",id:9,taskuuid: "c9c24b60-e8f9-44ae-b0d3-8e1c0fcbabab",rightcode:"line = input()\na = line[2::2]\nsm = 0\nfor el in a:\n    sm = sm + int(el)\nprint(sm)\n",defaultcode:"",forbiddencode:"line = input()\na = line[2::2]\nprint(sum(int(b) for b in a))\n",defaultinput:["413134224"],defaultoutput:["12"],inout: [{inv:["413134224"],outv:["12"]},{inv:["34525234"],outv:["13"]}],restrictions: {maxlines:8,forbidden:["списковые включения", "списки", "sum", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "sum", "map"],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "8f3131d1-f36a-40dc-84b8-a51ae793d394",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся использовать методы строк.\n\n# Методы - это особые функции, которые пишутся через точку и применяются к тому объекту для которого вызываются.\n# Сложновато звучит, но на примерах станет понятно\n\n# Метод count\ns = 'параллелепипед'\n# Метод count считает количество подстрок в строке. Подстрока - это просто набор символов.\nn = s.count('п')\nprint('Количество букв п в строке', s, 'равно', n)\ns = 'AABBAABB'\nn = s.count('AA')\nprint('Количество подстрок АА в строке', s, 'равно', n)\n\n# Метод replace\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\n# Метод replace заменяет в строке одну подстроку на другую\nprint('Заменили всех червяков на жуков:')\ns = s.replace('Червяк', 'Жук')\nprint(s)\n# Важно! Если написать просто вот так s.replace('Червяк', 'Жук'), замена не будет произведена\n# Нужно именно вот так: s=s.replace('Червяк', 'Жук')\n\n# Можно указать сколько замен нужно сделать\nprint('Заменили одного червяка на жука:')\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук', 1)\nprint(s)\n\nprint('Заменили двух червяков на двух жуков:')\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук', 2)\nprint(s)\n\n# Можно сделать несколько замен одновременно\nprint('Заменили всех червяков на жуков, а комаров - на мух:')\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук').replace('Комар', 'Муха')\nprint(s)\n\n# А еще метод replace можно использовать для удаления символов\ns = '000000011111001010101111'\ns = s.replace('0', '')\nprint(s)\n\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится набор строк. В первой строке-их количество. Подсчитай сколько в каждой строке букв 'а'. Напечатай слово, если букв 'а' больше 1",tasktype:"task",id:2,taskuuid: "d078d65d-f75c-43d4-a1de-97db179573d6",rightcode:"n = int(input())\nfor i in range(n):\n    line = input()\n    if line.count('а')>1:\n        print(line)\n",defaultcode:"",forbiddencode:"n = int(input())\na=[input() for i in range(n)]\n[print(e) for e in a if e.count('а')>1]\n",defaultinput:["4", "трава", "дорога", "корова", "глава"],defaultoutput:["трава", "глава"],inout: [{inv:["4", "трава", "дорога", "корова", "глава"],outv:["трава", "глава"]},{inv:["2", "аа", "ааа"],outv:["аа", "ааа"]}],restrictions: {maxlines:6,forbidden:["списковые включения", "списки", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "sum"],musthave:["count"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится набор строк. В первой строке-их количество. Подсчитай сколько в каждой строке букв 'а'. Результат сложи и напечатай",tasktype:"task",id:3,taskuuid: "716f3e63-3197-4bac-982a-e5272746eaf8",rightcode:"n = int(input())\nsm = 0\nfor i in range(n):\n    line = input()\n    sm = sm + line.count('а')\nprint(sm)\n",defaultcode:"",forbiddencode:"n = int(input())\nprint(sum([input().count('а') for i in range(n)]))\n",defaultinput:["3", "трава", "дорога", "корова"],defaultoutput:["4"],inout: [{inv:["3", "трава", "дорога", "корова"],outv:["4"]},{inv:["2", "аа", "ааа"],outv:["5"]}],restrictions: {maxlines:6,forbidden:["списковые включения", "списки", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "sum"],musthave:["count"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Замени все цифры 7 на цифры 8, все цифры 8 на цифру 7. Используй метод replace.",tasktype:"task",id:4,taskuuid: "b4223278-c5e0-450e-b3a6-15950adfa1b2",rightcode:"s = input()\ns = s.replace('7', '*')\ns = s.replace('8', '7')\ns = s.replace('*', '8')\nprint(s)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["9777888"],defaultoutput:["9888777"],inout: [{inv:["9777888"],outv:["9888777"]},{inv:["667788"],outv:["668877"]}],restrictions: {maxlines:5,forbidden:["for"],forbiddenRe:["for"],musthave:["replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится строка из заглавных букв. Замени первые три первые буквы R на тире. Используй метод replace.",tasktype:"task",id:5,taskuuid: "94544793-69b8-49b5-b377-08ecc8b97813",rightcode:"s = input()\ns = s.replace('R', '-', 3)\nprint(s)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["YYYRYYYRRRRR"],defaultoutput:["YYY-YYY--RRR"],inout: [{inv:["YYYRYYYRRRRR"],outv:["YYY-YYY--RRR"]},{inv:["RRRRYY"],outv:["---RYY"]}],restrictions: {maxlines:3,forbidden:["for"],forbiddenRe:[],musthave:["replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' в первой строке содержится число M, во второй - число N. Замени первые M цифр '8' числа N на тире. Используй метод replace.",tasktype:"task",id:6,taskuuid: "c2a7bd1c-277d-442f-8f07-ebcc46e3a63f",rightcode:"m = int(input())\ns = input()\ns = s.replace('8', '-', m)\nprint(s)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["2", "7777888889999"],defaultoutput:["7777--8889999"],inout: [{inv:["2", "7777888889999"],outv:["7777--8889999"]},{inv:["1", "7788883"],outv:["77-8883"]}],restrictions: {maxlines:4,forbidden:["for"],forbiddenRe:[],musthave:["replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Удали все цифры '8' из числа. Полученное число раздели нацело на 9. Результат напечатай. Используй метод replace.",tasktype:"task",id:7,taskuuid: "3b0baf29-9ab6-4a7d-ac26-6ef4201eb025",rightcode:"s = input()\ns = s.replace('8', '')\nn = int(s) // 9\nprint(n)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["998888899"],defaultoutput:["1111"],inout: [{inv:["998888899"],outv:["1111"]},{inv:["9889887"],outv:["110"]}],restrictions: {maxlines:4,forbidden:["for"],forbiddenRe:[],musthave:["replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Замени все нули на двойки, сложи все цифры полученного числа. Результат напечатай. Используй метод replace.",tasktype:"task",id:8,taskuuid: "d8fe6a18-ac39-4a60-91d2-258cc6782cd5",rightcode:"s = input()\ns = s.replace('0', '2')\nsm = 0\nfor d in s:\n    sm = sm + int(d)\nprint(sm)\n",defaultcode:"",forbiddencode:"s = input()\ns = s.replace('0', '2')\nprint(sum(map(int,s)))\n",defaultinput:["0022200"],defaultoutput:["14"],inout: [{inv:["0022200"],outv:["14"]},{inv:["022"],outv:["6"]}],restrictions: {maxlines:6,forbidden:["map", "sum", "list"],forbiddenRe:["map", "sum", "list"],musthave:["replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Возьми первую цифру числа. Подсчитай сколько таких цифр в числе. Результат напечатай. Используй метод count",tasktype:"task",id:9,taskuuid: "a2b71a04-d2c4-4e63-9cbe-4107609cb721",rightcode:"s = input()\nfirst = s[0]\ncnt = s.count(first)\nprint(cnt)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["998888899"],defaultoutput:["4"],inout: [{inv:["998888899"],outv:["4"]},{inv:["9889887"],outv:["2"]}],restrictions: {maxlines:4,forbidden:["for"],forbiddenRe:[],musthave:["count"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится строка из символов. Сколько раз встречается самая часто встречающаяся буква. Результат напечатай. Используй метод count.",tasktype:"task",id:10,taskuuid: "4324cf41-ec32-4cf7-93af-950603286b8c",rightcode:"s = input()\nmx = 0\nfor sym in s:\n    cnt = s.count(sym)\n    if cnt > mx:\n        mx = cnt\nprint(mx)\n",defaultcode:"",forbiddencode:"s = input()\nfrom collections import Counter\na = Counter(s).values()\nprint(max(a))\n",defaultinput:["AACCCCCBB"],defaultoutput:["5"],inout: [{inv:["AACCCCCBB"],outv:["5"]},{inv:["ABB"],outv:["2"]}],restrictions: {maxlines:7,forbidden:["Counter"],forbiddenRe:["Counter"],musthave:["count"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' строка из символов. Найди самую часто встречающуюся букву. Результат напечатай. Используй метод count.",tasktype:"task",id:11,taskuuid: "306a0ec9-129f-46fa-8175-b5218ee62bb8",rightcode:"s = input()\nmx = 0\nmxSym = ''\nfor sym in s:\n    cnt = s.count(sym)\n    if cnt > mx:\n        mx = cnt\n        mxSym = sym\nprint(mxSym)\n",defaultcode:"",forbiddencode:"s = input()\nfrom collections import Counter\na = Counter(s)\nprint(max(a, key=a.get))\n",defaultinput:["AACCCCCBB"],defaultoutput:["C"],inout: [{inv:["AACCCCCBB"],outv:["C"]},{inv:["ABB"],outv:["B"]}],restrictions: {maxlines:10,forbidden:["Counter", "max"],forbiddenRe:["Counter", "max"],musthave:["count"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "e841b146-7646-431c-b6ad-7b0ae2e7b256",rightcode:"pass\n",defaultcode:"# Изучим еще несколько полезных методов строк\n\n# Метод find\ns = 'ПАРАЛЛЕЛЕПИПЕД'\n# Метод find находит подстроку в строке и возвращает её индекс\n# Если искать слева направо буква П найдется на 0 месте, поэтому find вернет 0\nn = s.find('П')\nprint('Индекс буквы П если искать слева направо:', n)\n\n# Если икать слева направо буква Л найдется на 5 месте, поэтому find вернет 5\nprint('Индекс буквы Л, если искать слева направо:', s.find('П'))\n\n# Если искать слева направо символы ЛЕП найдутся начиная с 7 индекса, поэтому find вернет 7\nprint('Индекс подстроки ЛЕП, если искать слева направо:', s.find('ЛЕП'))\n\n# А вот сочетания символов ЛЕПА нет в строке поэтому find вернет -1\nprint('Подстроки ЛЕПА нет в слове', s.find('ЛЕПА'))\n\n# Существует также метод rfind, которые делает тоже самое что и find, но поиск осуществляет справа налево\n# Cравни:\nn = s.find('П')\nm = s.rfind('П')\nprint('Индекс буквы П, если искать слева направо:', n)\nprint('Индекс буквы П, если искать справа налево:', m)\n\nn = s.find('ЛЕП')\nm = s.rfind('ЛЕП')\nprint('Индекс подстроки ЛЕП, если искать слева направо:', n)\nprint('Индекс подстроки ЛЕП, если искать справа налево:', m)\nprint('dummycode')\n\n# Как узнать есть ли символ в строке? Теперь у нас есть 2 быстрых способа:\nif s.count('З') == 0:\n    print('Символа З нет в строке')\nif s.find('З') == -1:\n    print('Символа З нет в строке')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. Напечатай все символы, начиная с первого появления Z до последнего появления Z. Используй только методы строк и срезы",tasktype:"task",id:2,taskuuid: "83c6fba7-1a2a-4575-9843-5b8a95552e48",rightcode:"s = input()\nstart = s.find('Z')\nend = s.rfind('Z')\nprint(s[start:end + 1])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["WWWWWWZWWWWZWWWZWW"],defaultoutput:["ZWWWWZWWWZ"],inout: [{inv:["WWWWWWZWWWWZWWWZWW"],outv:["ZWWWWZWWWZ"]},{inv:["WZWZWZW"],outv:["ZWZWZ"]}],restrictions: {maxlines:4,forbidden:["for"],forbiddenRe:[],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. Удали все символы, начиная с первого появления Z до последнего появления Z. Используй только методы строк и срезы",tasktype:"task",id:3,taskuuid: "193a0b45-d63f-4fc1-a453-a71a05db5c72",rightcode:"s = input()\nstart = s.find('Z')\nend = s.rfind('Z')\nprint(s[:start + 1] + s[end:])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["WWWWWWZWWWWZWWWZWW"],defaultoutput:["WWWWWWZZWW"],inout: [{inv:["WWWWWWZWWWWZWWWZWW"],outv:["WWWWWWZZWW"]},{inv:["WZWZWZW"],outv:["WZZW"]}],restrictions: {maxlines:5,forbidden:["for"],forbiddenRe:[],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. Замени все символы, начиная с первого появления Z до последнего появления Z на тире. Используй только методы строк и срезы",tasktype:"task",id:4,taskuuid: "d65a7feb-09e5-4c3d-8d87-57a56dcbbf2f",rightcode:"s = input()\nstart = s.find('Z')\nend = s.rfind('Z')\nprint(s[:start] + '-' * (end - start + 1) + s[end + 1:])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["WWWWWWZWWWWZWWWZWW"],defaultoutput:["WWWWWW----------WW"],inout: [{inv:["WWWWWWZWWWWZWWWZWW"],outv:["WWWWWW----------WW"]},{inv:["WZWZWZW"],outv:["W-----W"]}],restrictions: {maxlines:5,forbidden:["for"],forbiddenRe:[],musthave:[],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если в числе содержится 0, то добавь его в сумму. Напечатай получившуюся сумму.  Используй  метод find",tasktype:"task",id:5,taskuuid: "3552526b-7268-48e3-9e29-4ab3330e99f4",rightcode:"n = int(input())\nsm = 0\nfor i in range(n):\n    s = input()\n    if s.find('0') != -1:\n        sm = sm + int(s)\nprint(sm)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["3", "100", "88", "202"],defaultoutput:["302"],inout: [{inv:["3", "100", "88", "202"],outv:["302"]},{inv:["4", "100", "88", "202", "20"],outv:["322"]}],restrictions: {maxlines:7,forbidden:[],forbiddenRe:[],musthave:["find"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Все числа не превышают 1000000. Найди минимальную позицию нуля среди всех строк, если считать слева. Используй  метод find",tasktype:"task",id:6,taskuuid: "9f45add8-0670-4947-bb8f-de4ef53c77db",rightcode:"n = int(input())\nmn = 10\nfor i in range(n):\n    s = input()\n    pos = s.find('0')\n    if pos < mn:\n        mn = pos\nprint(mn)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["3", "1111100", "1111000", "110000"],defaultoutput:["2"],inout: [{inv:["3", "1111100", "1111000", "110000"],outv:["2"]},{inv:["4", "100", "1100", "1100", "1100"],outv:["1"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["find"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"Изучи программу",tasktype:"guide",id:7,taskuuid: "aa5001b3-8988-44f1-864c-1913ed7b1c73",rightcode:"pass\n",defaultcode:"# Метод strip удаляет пробелы в начале и в конце строки:\ns = '      п    д     '\nn = s.strip()\nprint('Пробелы слева и справа удалены:', n)\n\n# Если в скобках указать какие-либо символы, он будет удалять их в начале и в конце строки:\ns = '*****п*****д****'\nprint('Звездочки слева и справа удалены:', s.strip('*'))\n\ns = '*$$****п***$**д**$**$'\nprint('Звездочки и знаки $ слева и справа удалены:', s.strip('*$'))\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. В строке как минимум 2 буквы Z. Напечатай символы начиная с первой Z по последнюю, включая сами Z. Используй только метод strip",tasktype:"task",id:8,taskuuid: "02009cda-b0b5-48ed-9477-bffb31fd4525",rightcode:"s = input()\nprint(s.strip('W'))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["WWWWWWZWWWWZWWWZ"],defaultoutput:["ZWWWWZWWWZ"],inout: [{inv:["WWWWWWZWWWWZWWWZ"],outv:["ZWWWWZWWWZ"]},{inv:["WZWZWZW"],outv:["ZWZWZ"]}],restrictions: {maxlines:3,forbidden:["for"],forbiddenRe:[],musthave:["strip"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. В строке как минимум 2 буквы Z. Напечатай символы начиная с первой Z по последнюю, не включая сами Z. Используй метод strip и срез",tasktype:"task",id:9,taskuuid: "25fd253a-8fde-461d-8fe9-bb7b70def1a5",rightcode:"s = input()\nline = s.strip('W')\nprint(line[1:-1])\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["WWWWWWZWWWWZWWWZ"],defaultoutput:["WWWWZWWW"],inout: [{inv:["WWWWWWZWWWWZWWWZ"],outv:["WWWWZWWW"]},{inv:["WZWZWZW"],outv:["WZW"]}],restrictions: {maxlines:3,forbidden:["for"],forbiddenRe:[],musthave:["strip"],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "01008026-9929-4402-9324-295d5521aa6e",rightcode:"pass\n",defaultcode:"# Новая тема Сложные условия\n\n# Изучим новую тему на примере решения задач\ns = 'Альфа-Кентавра'\n# Напечатай 'Да' если в строке есть одновременно и буква 'А' и буква 'К'\nn = s.count('А')\nm = s.count('К')\nif n > 0 and m > 0:\n    print('ДА')\n# and объединяет два условия в одно и следит за тем, что оба условия выполнены\n\n# Напечатай Да если в строке есть или буква 'А' или буква 'Ф'\nn = s.count('А')\nm = s.count('Ф')\nif n > 0 or m > 0:\n    print('ДА')\n# or объединяет два условия в одно и следит за тем, что хотя бы одно условие выполнено\n\n# В сложном условии можно писать неограниченное число and и or\n# Напечатай 'Да' если в строке есть или буква 'А' или буква 'Ф' или буква 'М'\nn = s.count('А')\nm = s.count('Ф')\nk = s.count('М')\nif n > 0 or m > 0 or k > 0:\n    print('ДА')\n\n# Можно комбинировать and и or\n# Напечатай Да если в строке есть (буква 'А' или буква 'Ф') и тире 'М'\nn = s.count('А')\nm = s.count('Ф')\nk = s.count('-')\nif (n > 0 or m > 0) and k > 0:\n    print('ДА')\n# Вокруг условия (n > 0 or m > 0) стоят круглые скобки, а всё потому, что если их не поставить Питон сначала проверит выполняется ли условие m > 0 and k > 0\n# Если говорить научным языком, у операции and более высокий приоритет чем у or, как в математике, где у умножения более высокий приоритет, чем у сложения.\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В поле 'Входные данные' содержится строка. Напечатай Да, если в строке есть и символ W и символ Z и символ J. В противном случае напечатай Нет. Используй оператор and",tasktype:"task",id:2,taskuuid: "bb8639d1-7c8c-488b-b9d4-f32004724b94",rightcode:"s = input()\nif s.count('W') > 0 and s.count('Z') > 0 and s.count('J') > 0:\n    print('Да')\nelse:\n    print('Нет')\n",defaultcode:"",forbiddencode:"s=input()\nprint('Да') if s.count('W') > 0 and s.count('Z') > 0 and s.count('J') > 0 else print('Нет')\n",defaultinput:["WWWWWWZWWWWZWWJWZWW"],defaultoutput:["Да"],inout: [{inv:["WWWWWWZWWWWZWWJWZWW"],outv:["Да"]},{inv:["WZWZWZW"],outv:["Нет"]}],restrictions: {maxlines:5,forbidden:["Тернарный оператор", "условный оператор in", "for"],forbiddenRe:["if[^:]*else", "if.* in .*:", "for"],musthave:["and"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В поле 'Входные данные' содержится строка. Напечатай Да, если в строке есть символ W или символ Z, но не оба одновременно. В противном случае напечатай Нет.Используй операторы and и or.",tasktype:"task",id:3,taskuuid: "0a54402f-6d99-4152-b8e9-840d6b2c3b65",rightcode:"s = input()\nif s.count('W') > 0 and s.count('Z') == 0 or s.count('W') == 0 and s.count('Z') > 0:\n    print('Да')\nelse:\n    print('Нет')\n",defaultcode:"",forbiddencode:"s = input()\nprint('Да') if s.count('W') > 0 and s.count('Z') == 0 or s.count('W') == 0 and s.count('Z') > 0 else print('Нет')\n",defaultinput:["WWWWWWWWWWWWJWWW"],defaultoutput:["Да"],inout: [{inv:["WWWWWWWWWWWWJWWW"],outv:["Да"]},{inv:["WZWZWZW"],outv:["Нет"]}],restrictions: {maxlines:5,forbidden:["Тернарный оператор", "условный оператор in", "for"],forbiddenRe:["if[^:]*else", "if.* in .*:", "for"],musthave:["or", "and"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Напечатай 'Да', если среди строк есть имя 'Петр' или имя 'Ваня'. В противном случае напечатай 'Нет'. Используй флаг.",tasktype:"task",id:4,taskuuid: "82090d59-22e2-4303-8b3b-6e3153892121",rightcode:"n = int(input())\nflag = 0\nfor i in range(n):\n    s = input()\n    if s == 'Ваня' or s == 'Петя':\n        flag = 1\nif flag == 1:\n    print('Да')\nelse:\n    print('Нет')\n",defaultcode:"",forbiddencode:"n = int(input())\na=[input() for i in range(n)]\nprint('Да') if ('Ваня' in a) or ('Петя' in a) else print('Нет')\n",defaultinput:["3", "Петр", "Маша", "Ваня"],defaultoutput:["Да"],inout: [{inv:["3", "Петр", "Маша", "Ваня"],outv:["Да"]},{inv:["2", "Женя", "Маша"],outv:["Нет"]}],restrictions: {maxlines:10,forbidden:["списковые включения", "списки", "Тернарный оператор", "условный оператор in"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "if[^:]*else", "if.* in .*:"],musthave:[],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Напечатай 'Да', если среди строк есть оба имени 'Петр' и 'Ваня'. В противном случае напечатай 'Нет'.",tasktype:"task",id:5,taskuuid: "4d248e7f-bfc6-4000-a18d-78c601597932",rightcode:"n = int(input())\nflag1 = 0\nflag2 = 0\nfor i in range(n):\n    s = input()\n    if s == 'Ваня':\n        flag1 = 1\n    if s == 'Петр':\n        flag2 = 1\nif flag1 == 1 and flag2 == 1:\n    print('Да')\nelse:\n    print('Нет')\n",defaultcode:"",forbiddencode:"n = int(input())\na = [input() for i in range(n)]\nprint('Да') if ('Ваня' in a) and ('Петр' in a) else print('Нет')\n",defaultinput:["3", "Петр", "Маша", "Ваня"],defaultoutput:["Да"],inout: [{inv:["3", "Петр", "Маша", "Ваня"],outv:["Да"]},{inv:["2", "Петр", "Маша"],outv:["Нет"]}],restrictions: {maxlines:14,forbidden:["списковые включения", "списки", "Тернарный оператор", "условный оператор in"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "if[^:]*else", "if.* in .*:"],musthave:[],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если число кратно трем и больше 7, то добавь его в сумму. Напечатай получившуюся сумму",tasktype:"task",id:6,taskuuid: "0211b988-aa6b-4f48-af0f-e2a519558a9a",rightcode:"n = int(input())\nsm = 0\nfor i in range(n):\n    s = int(input())\n    if s % 3 == 0 and s > 7:\n        sm = sm + s\nprint(sm)\n",defaultcode:"",forbiddencode:"n = int(input())\na = [int(input()) for i in range(n)]\nprint(sum(s for s in a if s % 3 == 0 and s > 7))\n",defaultinput:["4", "9", "3", "7", "12"],defaultoutput:["21"],inout: [{inv:["4", "9", "3", "7", "12"],outv:["21"]},{inv:["4", "12", "3", "12", "7"],outv:["24"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "Тернарный оператор", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "if[^:]*else", "sum"],musthave:[],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Добавь в сумму следующие числа 1)кратные трем и большие 7, 2)оканчивающиеся на 2, 3) двузначные. Напечатай получившуюся сумму",tasktype:"task",id:7,taskuuid: "2e8db68a-114c-489c-b67e-7af48d0ae782",rightcode:"n = int(input())\nsm = 0\nfor i in range(n):\n    s = int(input())\n    if (s % 3 == 0 and s > 7) or s % 10 == 2 or len(str(s)) == 2:\n        sm = sm + s\nprint(sm)\n",defaultcode:"",forbiddencode:"n = int(input())\na = [int(input()) for i in range(n)]\nprint(sum(s for s in a if (s % 3 == 0 and s > 7) or s % 10 == 2 or len(str(s)) == 2))\n",defaultinput:["5", "9", "2", "7", "12", "10"],defaultoutput:["33"],inout: [{inv:["5", "9", "2", "7", "12", "10"],outv:["33"]},{inv:["6", "2", "9", "7", "24", "10", "11"],outv:["56"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "Тернарный оператор", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "if[^:]*else", "sum"],musthave:["or", "and"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"Изучи программу",tasktype:"guide",id:8,taskuuid: "7a249380-96e0-4bfa-a6b0-b5a3d60b4ea7",rightcode:"pass\n",defaultcode:"# В программировании невероятно часто используется отрицание not\n# Отрицание превращает невыполняющееся условие в выполняющееся и наоборот - превращает выполняющееся условие в невыполняющееся.\na = 18\n\n# Условие выполняется, печатается ДА\nif a > 11:\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Условие не выполняется, печатается НЕТ\nif not a > 11:\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие выполняется, печатается ДА\nif a > 11 and a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие не выполняется, печатается НЕТ. Обрати внимание, что вокруг сложного условия стоят круглые скобки, иначе not применится только к первому условию\nif not (a > 11 and a % 2 == 0):\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие выполняется, печатается ДА\nif a > 100 or a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие не выполняется, печатается НЕТ.\nif a > 11 or not a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Добавь в сумму следующие числа: не кратные трем и не оканчивающиеся на 2 и не двузначные. Используй отрицание not. Напечатай получившуюся сумму",tasktype:"task",id:9,taskuuid: "5cd42932-9b8c-4251-b4fc-59191da3441a",rightcode:"n = int(input())\nsm = 0\nfor i in range(n):\n    s = int(input())\n    if not s % 3 == 0 and not s % 10 == 2 and not len(str(s)) == 2:\n        sm = sm + s\nprint(sm)\n",defaultcode:"",forbiddencode:"n = int(input())\na = [int(input()) for i in range(n)]\nprint(sum(s for s in a if not s % 3 == 0 and not s % 10 == 2 and not len(str(s)) == 2))\n",defaultinput:["5", "9", "2", "7", "12", "5"],defaultoutput:["12"],inout: [{inv:["5", "9", "2", "7", "12", "5"],outv:["12"]},{inv:["6", "2", "9", "7", "24", "10", "4"],outv:["11"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "Тернарный оператор", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "if[^:]*else", "sum"],musthave:["not"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Добавь в сумму все числа, кроме: кратные трем и оканчивающиеся на 2 и двузначные. Используй отрицание not. Напечатай получившуюся сумму",tasktype:"task",id:10,taskuuid: "e122db3c-4c15-4a0c-9f39-010e799b2b00",rightcode:"n = int(input())\nsm = 0\nfor i in range(n):\n    s = int(input())\n    if not (s % 3 == 0 and s % 10 == 2 and len(str(s)) == 2) :\n        sm = sm + s\nprint(sm)\n",defaultcode:"",forbiddencode:"n = int(input())\na = [int(input()) for i in range(n)]\nprint(sum(s for s in a if not (s % 3 == 0 and s % 10 == 2 and len(str(s)) == 2)))\n",defaultinput:["5", "9", "2", "7", "12", "5"],defaultoutput:["23"],inout: [{inv:["5", "9", "2", "7", "12", "5"],outv:["23"]},{inv:["6", "2", "9", "7", "24", "10", "4"],outv:["56"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "Тернарный оператор", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "if[^:]*else", "sum"],musthave:["not"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Напечатай все имена, кроме Петр и Ваня. Используй отрицание not.",tasktype:"task",id:11,taskuuid: "898d6450-7c06-4847-a5a8-bff3ddc911ac",rightcode:"n = int(input())\nfor i in range(n):\n    s = input()\n    if not (s == 'Ваня' or s == 'Петр'):\n        print(s)\n",defaultcode:"",forbiddencode:"n = int(input())\na = [input() for i in range(n)]\n[print(s) for s in a if s not in ['Ваня','Петр']]\n",defaultinput:["3", "Петр", "Маша", "Ваня"],defaultoutput:["Маша"],inout: [{inv:["3", "Петр", "Маша", "Ваня"],outv:["Маша"]},{inv:["2", "Петр", "Мария"],outv:["Мария"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "Тернарный оператор", "условный оператор in"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "if[^:]*else", "if.* in .*:"],musthave:["not"],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "46be8d40-9760-446f-bd29-e40526d9482d",rightcode:"pass\n",defaultcode:"# Предположим в поле 'Входные данные' содержится неопределенное количество строк, то есть мы не знаем их количество.\n# Мы лишь знаем что самая последняя строка равна звездочке *\n# Как считать все строки? Нам поможет новый тип цикла - while.\ns = input()\nwhile s != '*':\n    print(s)\n    s = input()\n# Цикл while выполняется пока выполняется условие, которое идет после while, в нашем примере s != '*'. То есть цикл будет выполняться пока переменная s не равна звездочке.\n",forbiddencode:"pass\n",defaultinput:["Петя", "Ваня", "Саша", "*"],defaultoutput:[],inout: [{inv:["Петя", "Ваня", "Саша", "*"],outv:[]},{inv:["Петя", "Ваня", "Саша", "*"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"Изучи программу",tasktype:"guide",id:2,taskuuid: "cf422246-b44b-4f84-8373-b968ccf838c6",rightcode:"pass\n",defaultcode:"# В цикле while можно использовать сложные условия\ns = input()\nprint('Выполнять цикл пока переменная s не равна звездочке и не равна Саша:')\nwhile s != '*' and s != 'Саша':\n    print(s)\n    s = input()\n\n# Цикл while довольно опасный вид цикла, программа будет выполняться бесконечно, если не выполнилось условия остановки.\n# Если это все таки произошло, просто обнови страницу браузера и программа остановится.\n",forbiddencode:"pass\n",defaultinput:["Петя", "Ваня", "Саша", "*"],defaultoutput:[],inout: [{inv:["Петя", "Ваня", "Саша", "*"],outv:[]},{inv:["Петя", "Ваня", "Саша", "*"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символ @.  Все числа не превышают 100. Найди минимальное число",tasktype:"task",id:3,taskuuid: "57b8706e-30f9-4cf3-b856-680cf4d8ea1f",rightcode:"s = input()\nmn = 100\nwhile s != '@':\n    if int(s) < mn:\n        mn = int(s)\n    s = input()\nprint(mn)\n",defaultcode:"",forbiddencode:"s = input()\na=[]\nwhile s != '@':\n    a.append(int(s))\n    s = input()\nprint(min(a))\n",defaultinput:["12", "5", "17", "8", "@"],defaultoutput:["5"],inout: [{inv:["12", "5", "17", "8", "@"],outv:["5"]},{inv:["99", "100", "100", "100", "@"],outv:["99"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "min"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "min"],musthave:[],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символ @.  Подсчитай количество чисел кратных 7 и не начинающихся на 1",tasktype:"task",id:4,taskuuid: "1ab6db4f-4dce-4ae4-9da2-4a5e165e40a7",rightcode:"s = input()\ncnt = 0\nwhile s != '@':\n    if s[0] != '1' and int(s) % 7 == 0:\n        cnt = cnt + 1\n    s = input()\nprint(cnt)\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '@':\n    if s[0] != '1' and int(s) % 7 == 0:\n        a.append(int(s))\n    s = input()\nprint(len(a))\n",defaultinput:["7", "21", "14", "14", "@"],defaultoutput:["2"],inout: [{inv:["7", "21", "14", "14", "@"],outv:["2"]},{inv:["7", "14", "21", "7", "67", "14", "@"],outv:["3"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "len"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "len"],musthave:[],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символ @. Все числа не превышают 100. Найди максимальное число, не начинающееся на 9",tasktype:"task",id:5,taskuuid: "d0d32354-a517-463f-b45d-871df91df77f",rightcode:"s = input()\nmx = 0\nwhile s != '@':\n    if int(s) > mx and not s[0] == '9':\n        mx = int(s)\n    s = input()\nprint(mx)\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '@':\n    if not s[0] == '9':\n        a.append(int(s))\n    s = input()\nprint(max(a))\n",defaultinput:["12", "5", "99", "8", "@"],defaultoutput:["12"],inout: [{inv:["12", "5", "99", "8", "@"],outv:["12"]},{inv:["12", "5", "99", "88", "@"],outv:["88"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "max"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "max"],musthave:[],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор строк, в последней строке - символ @.  Найди максимальную длину строки, которая не содержит букву Z",tasktype:"task",id:6,taskuuid: "e319c982-5f5e-44c9-af29-55d379f38d7c",rightcode:"s = input()\nmx = 0\nwhile s != '@':\n    if len(s) > mx and s.find('Z') == -1:\n        mx = len(s)\n    s = input()\nprint(mx)\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '@':\n    if 'Z' not in s:\n        a.append(len(s))\n    s = input()\nprint(max(a))\n",defaultinput:["AAW", "AAAAAA", "AAAA", "AAAAAAAAAAZ", "@"],defaultoutput:["6"],inout: [{inv:["AAW", "AAAAAA", "AAAA", "AAAAAAAAAAZ", "@"],outv:["6"]},{inv:["AAW", "AAAAAA", "AWWWWWAAA", "AAAAAAAAAAZ", "@"],outv:["9"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "max", "условный оператор in"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "max", "[\\[(].*for[^:]*in.*[\\])]"],musthave:[],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор строк, в последней строке - символ @.  Напечатай 'Да', если среди строк есть строка начинающаяся на 'Привет' ",tasktype:"task",id:7,taskuuid: "d4031241-5207-4e62-a964-3f11615d7c24",rightcode:"s = input()\nflag = 0\nwhile s != '@':\n    if s[:6] == 'Привет':\n        flag = 1\n    s = input()\nif flag == 1:\n    print('Да')\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '@':\n    a.append(s[:6])\n    s = input()\nif 'Привет' in a:\n    print('Да')\n",defaultinput:["Все хорошо", "Привет, Иван!", "Ну, привет", "@"],defaultoutput:["Да"],inout: [{inv:["Все хорошо", "Привет, Иван!", "Ну, привет", "@"],outv:["Да"]},{inv:["Все хорошо", "Вот! Привет, Иван!", "Ну, привет", "@"],outv:[]}],restrictions: {maxlines:9,forbidden:["списковые включения", "списки", "условный оператор in"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "[\\[(].*for[^:]*in.*[\\])]"],musthave:[],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "f0e19954-4cac-4c3e-894b-bc9a7c4f2a2c",rightcode:"pass\n",defaultcode:"# На данный момент мы знаем следующие способы проверки условий >, <, >=, <=, ==, !=\n# Есть еще один способ - in\n\n# Возьмем произвольный набор символов\ns = 'ABCD'\nif 'A' in s:\n    print('A', 'содержится в строке', s)\nelse:\n    print('A', 'не содержится в строке', s)\n# Условие if 'A' in s читается так - если 'A' содержится в s\n\n# Еще пример:\nif 'AA' in s:\n    print('AА', 'содержится в строке', s)\nelse:\n    print('AA', 'не содержится в строке', s)\n\n# Можно применять сложные условия:\nif 'A' in s and 'B' in s:\n    print('A и B', 'содержатся в строке', s)\nelse:\n    print('A и B', 'вместе не содержатся в строке', s)\n# Отметим, что данный способ удобнее, чем использование методов find и count\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если в числе содержится 0, то добавь его в сумму. Напечатай получившуюся сумму.  Используй  in",tasktype:"task",id:2,taskuuid: "55dd222a-7390-47b1-bf5a-33ab8af7089e",rightcode:"n = int(input())\nsm = 0\nfor i in range(n):\n    s = input()\n    if '0' in s:\n        sm = sm + int(s)\nprint(sm)\n",defaultcode:"",forbiddencode:"n = int(input())\nb=[input() for i in range(n)]\nr=[int(a) for a in b if '0' in a]\nprint(sum(r))\n",defaultinput:["3", "100", "88", "202"],defaultoutput:["302"],inout: [{inv:["3", "100", "88", "202"],outv:["302"]},{inv:["4", "100", "88", "202", "20"],outv:["322"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "sum", "find", "rfind", "count"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "sum", "find", "rfind", "count"],musthave:[" in "],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"В поле 'Входные данные' содержится набор строк, в последней строке - символ @.  Найди максимальную длину строки, которая не содержит букву Z. Используй in.",tasktype:"task",id:3,taskuuid: "8bf01924-9f5d-47e9-b75e-cf44f1d2befc",rightcode:"s = input()\nmx = 0\nwhile s != '@':\n    if len(s) > mx and not 'Z' in s:\n        mx = len(s)\n    s = input()\nprint(mx)\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '@':\n    if not 'Z' in s:\n        a.append(len(s))\n    s = input()\nprint(max(a))\n",defaultinput:["AAW", "AAAAAA", "AAAA", "AAAAAAAAAAZ", "@"],defaultoutput:["6"],inout: [{inv:["AAW", "AAAAAA", "AAAA", "AAAAAAAAAAZ", "@"],outv:["6"]},{inv:["AAW", "AAAAAA", "AWWWWWAAA", "AAAAAAAAAAZ", "@"],outv:["9"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "списки", "sum", "find", "rfind", "count"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "sum", "find", "rfind", "count", "max"],musthave:[" in "],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"В поле 'Входные данные' содержится набор строк, в последней строке - символ @.  Напечатай 'Да', если среди строк есть строка содержащая слово 'Привет'. Используй  in",tasktype:"task",id:4,taskuuid: "3068cb94-b798-4e26-a1b5-7445150af694",rightcode:"s = input()\nflag = 0\nwhile s != '@':\n    if 'Привет' in s:\n        flag = 1\n    s = input()\nif flag == 1:\n    print('Да')\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '@':\n    if 'Привет' in s:\n        a.append(s)\n    s = input()\nif len(a)>0:\n    print('Да')\n",defaultinput:["Все хорошо", "Ну, Привет, Иван!", "Ну, привет", "@"],defaultoutput:["Да"],inout: [{inv:["Все хорошо", "Ну, Привет, Иван!", "Ну, привет", "@"],outv:["Да"]},{inv:["Все хорошо", "Вот! Hi, Иван!", "Ну, hello", "@"],outv:[]}],restrictions: {maxlines:8,forbidden:["списковые включения", "списки", "sum", "find", "rfind", "count"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "find", "rfind", "count", "max"],musthave:[" in "],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"В поле 'Входные данные' содержится строка из повторяющихся букв. Создай новую строку с уникальными буквами и напечатай ее. Используй  in",tasktype:"task",id:5,taskuuid: "fee9009c-7aba-42b1-b512-8287a9725bb2",rightcode:"s = input()\nm = ''\nfor el in s:\n    if el not in m:\n        m = m + el\nprint(m)\n",defaultcode:"",forbiddencode:"s = input()\nb=[]\n[b.append(a) for a in s if a not in b]\nprint(''.join(b))\n",defaultinput:["AAABAABBBBBBCCCCCB"],defaultoutput:["ABC"],inout: [{inv:["AAAAABBBBBBCCCCC"],outv:["ABC"]},{inv:["AAAAADBBBBBBCFCCCC"],outv:["ADBCF"]}],restrictions: {maxlines:6,forbidden:["списковые включения", "списки", "sum", "find", "rfind", "count"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "append", "find", "rfind", "count", "join"],musthave:[" in "],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "0f1957e4-82e2-4967-a15d-63aa388366d3",rightcode:"pass\n",defaultcode:"# На данный момент мы знаем следующие типы данных: целые числа, дробные числа, строки.\n# Изучим новый тип данных - списки.\n\n# Для начала нужно создать новый пустой список a = []\na = []\n\n# Затем его нужно наполнить. Для этого есть специальный метод append\na.append(5)\na.append('Иван')\na.append(0.1)\nprint(a)\n# Напечатанное выглядит вот так [5, 'Иван', 0.1]\n\n# Так что такое список? Список - это тип данных, который позволяет хранить множество значений в одной переменной.\n\n# Как и в строках для получения доступа к элементам используются индексы:\nprint('Первый элемент списка:', a[1])\nprint('Последний элемент списка:', a[-1])\n\n# Напечатаем все значения списка. Это делается аналогично строкам!\n\nprint('Вывод элементов списка способом 1')\nfor el in a:\n    print(el)\n\nprint('Вывод элементов списка способом 2')\n# Функция len работает также как в строках - возвращает длину списка\nL = len(a)\nfor i in range(L):\n    print(a[i])\n\n# Пример. Найдем максимальное значение чисел, которые находятся в поле 'Входные данные'.\n# Сначала добавим все значение в список\na = []\nfor i in range(4):\n    a.append(int(input()))\n# Теперь выполняем поиск так, как мы это делали ранее\nmx = 0\nfor el in a:\n    if el > mx:\n        mx = el\nprint(mx)\n",forbiddencode:"pass\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если в числе содержится 0, то добавь его в список. Напечатай третий элемент списка. Используй оператор in.",tasktype:"task",id:2,taskuuid: "e426404e-7fac-4ea0-a520-84ed0abbc964",rightcode:"n = int(input())\na = []\nfor i in range(n):\n    s = input()\n    if '0' in s:\n        a.append(s)\nprint(a[2])\n",defaultcode:"",forbiddencode:"n = int(input())\na=[input() for i in range(n)]\na = [i for i in a if '0' in i]\nprint(a[2])\n",defaultinput:["4", "100", "880", "5", "202"],defaultoutput:["202"],inout: [{inv:["4", "100", "880", "5", "202"],outv:["202"]},{inv:["5", "100", "880", "5", "203", "500"],outv:["203"]}],restrictions: {maxlines:8,forbidden:["списковые включения", "count", "find", "rfind"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "count", "find", "rfind"],musthave:[" in ", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символы $$$. Добавь все числа в список. Напечатай числа в обратном порядке",tasktype:"task",id:3,taskuuid: "1fde0b05-63fb-4ea3-9b53-f3b71c3c9475",rightcode:"s = input()\na = []\nwhile s != '$$$':\n    a.append(s)\n    s = input()\nfor i in range(len(a), 0, -1):\n    print(a[i - 1])\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '$$$':\n    a.append(s)\n    s = input()\n[print(s) for s in a[::-1]]\n",defaultinput:["100", "880", "5", "202", "$$$"],defaultoutput:["202", "5", "880", "100"],inout: [{inv:["100", "880", "5", "202", "$$$"],outv:["202", "5", "880", "100"]},{inv:["0", "1", "2", "3", "$$$"],outv:["3", "2", "1", "0"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "срезы", "count", "find", "rfind"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "\\[[^\\]\\[]*:[^\\]\\[]*\\]", "count", "find", "rfind"],musthave:["append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее сами числа. Количество чисел нечетное. Напечатай сумму трех чисел в середине списка(число в середине списка, число слева от среднего, число справа от среднего",tasktype:"task",id:4,taskuuid: "27accba6-6614-4dd7-96cc-2b1e9eeaed8d",rightcode:"n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\nmid = len(a) // 2\nprint(a[mid - 1] + a[mid] + a[mid + 1])\n",defaultcode:"",forbiddencode:"n = int(input())\na = [int(input()) for i in range(n)]\nmid = len(a) // 2\nprint(a[mid - 1] + a[mid] + a[mid + 1])\n",defaultinput:["5", "1", "4", "3", "7", "5"],defaultoutput:["14"],inout: [{inv:["5", "1", "4", "3", "7", "5"],outv:["14"]},{inv:["5", "1", "1", "30", "2", "5"],outv:["33"]}],restrictions: {maxlines:7,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Во первой строке поля 'Входные данные' содержится четное количество чисел, далее идут сами числа. Умножь первое число на последнее, второе на предпоследнее и так далее, произведения  сложи и напечатай",tasktype:"task",id:5,taskuuid: "728b97fc-06ba-4520-82b5-ec082b417fa2",rightcode:"n = int(input())\na = []\nsm = 0\nfor i in range(n):\n    a.append(int(input()))\nmid = len(a) // 2\nfor i in range(mid):\n    sm = sm + a[i] * a[-i - 1]\nprint(sm)\n",defaultcode:"",forbiddencode:"n = int(input())\na=[int(input()) for i in range(n)]\nmid = len(a) // 2\nb= [a[i] * a[-i - 1] for i in range(mid)]\nprint(sum(b))\n",defaultinput:["4", "1", "2", "3", "4"],defaultoutput:["10"],inout: [{inv:["4", "1", "2", "3", "4"],outv:["10"]},{inv:["4", "0", "1", "2", "3"],outv:["2"]}],restrictions: {maxlines:10,forbidden:["списковые включения", "sum"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "sum"],musthave:["append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Изучи программу",tasktype:"guide",id:6,taskuuid: "10635769-b2b9-4e5d-b17b-258df14f91e9",rightcode:"pass\n",defaultcode:"a = []\nfor i in range(4):\n    a.append(int(input()))\n\n# Как и в строках для получения доступа к элементам также используются срезы:\nprint('Срез с 1 по -1 элемент списка:', a[1:-1])\nprint('Срез c начала до конца с шагом -1:', a[::-1])\n\n# Срез можно сохранить в другую переменную и использовать в дальнейшем\nb = a[2::2]\n\n# Настала пора изучить одни из самых полезных функций, которые экономят много времени при программировании\n# Максимальное число в списке\nmx = max(a)\nprint('Максимальный элемент списка:', mx)\n\n# Минимальное число в списке\nprint('Минимальный элемент списка:', min(a))\n\n# Сумма чисел в списке\nprint('Сумма элементов списка:', sum(a))\n",forbiddencode:"pass\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символы $$$. Добавь все числа в список. Найди минимальное число и напечатай. Используй функцию min",tasktype:"task",id:7,taskuuid: "77a1440b-a1b1-46a8-addb-9b9e83652ddc",rightcode:"s = input()\na = []\nwhile s != '$$$':\n    a.append(int(s))\n    s = input()\nprint(min(a))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["100", "880", "5", "202", "$$$"],defaultoutput:["5"],inout: [{inv:["100", "880", "5", "202", "$$$"],outv:["5"]},{inv:["0", "1", "2", "3", "$$$"],outv:["0"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["min", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символы $$$. Добавь все числа кратные 2 в список. Найди сумму полученных чисел и напечатай. Используй функцию sum",tasktype:"task",id:8,taskuuid: "9067760d-2a87-40fa-8822-ae1f03f2fff4",rightcode:"s = input()\na = []\nwhile s != '$$$':\n    n = int(s)\n    if n % 2 == 0:\n        a.append(n)\n    s = input()\nprint(sum(a))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["100", "881", "5", "20", "$$$"],defaultoutput:["120"],inout: [{inv:["100", "881", "5", "20", "$$$"],outv:["120"]},{inv:["0", "1", "2", "3", "$$$"],outv:["2"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["sum", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Найди длину самой длинной строки. Используй функцию max",tasktype:"task",id:9,taskuuid: "f3b7fcd8-03fd-4e13-98d3-3193d3e1bfdf",rightcode:"n = int(input())\na = []\nfor i in range(n):\n    a.append(len(input()))\nprint(max(a))\n",defaultcode:"",forbiddencode:"n = int(input())\na = [len(input()) for i in range(n)]\nprint(max(a))\n",defaultinput:["4", "Сколько", "будет", "дважды два", "дважды два - четыре"],defaultoutput:["19"],inout: [{inv:["4", "Сколько", "будет", "дважды два", "дважды два - четыре"],outv:["19"]},{inv:["5", "AA", "AAA", "AAAAA", "AA", "A"],outv:["5"]}],restrictions: {maxlines:6,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["max", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В поле 'Входные данные' содержится некоторое четное количество чисел, в последней строке  - символы $$$. Возьми все числа из второй половины и найди минимальное среди них. Используй срезы и функцию min",tasktype:"task",id:10,taskuuid: "012d7081-07ff-4ef5-b719-545ae4330024",rightcode:"s = input()\na = []\nwhile s != '$$$':\n    a.append(int(s))\n    s = input()\nmid = len(a) // 2\nb = a[mid:]\nprint(min(b))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["100", "2", "5", "20", "$$$"],defaultoutput:["5"],inout: [{inv:["100", "2", "5", "20", "$$$"],outv:["5"]},{inv:["0", "1", "2", "3", "$$$"],outv:["2"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["min"],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "ced65383-057e-4926-a04d-9a6d425f5e2e",rightcode:"pass\n",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками, но у списков есть одно важное преимущество - списки можно редактировать.\n\ns = 'Привет'\n# Следующий код выдаст ошибку, поэтому мы его закомментировали. Строки нельзя изменять!\n# s[0]='п'\n\n# А вот списки можно менять:\ns = ['П', 'р', 'и', 'в', 'е', 'т']\ns[0] = 'п'\nprint('Заглавная буква П заменена на строчную п:', s)\n\n# Рассмотрим следующую задачу. Есть две переменные, поменяем их значения местами, в других языках программирования для этого потребуется третья переменная:\na = 5\nb = 10\nprint('Обмен значениями способ 1:', a, b)\nc = a\na = b\nb = c\nprint('Обмен значениями способ 1:', a, b)\n\n# В питоне есть способ проще!\na = 5\nb = 10\nprint('Обмен значениями способ 2:', a, b)\na, b = b, a\nprint('Обмен значениями способ 2:', a, b)\n\n# Поменяем местами первый и последний элемент списка.\ns = ['П', 'р', 'и', 'в', 'е', 'т']\ns[0], s[-1] = s[-1], s[0]\nprint('Поменяли первый и последний элемент списка местами: ', s)\n\n",forbiddencode:"pass\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные' содержится некоторое количество чисел, в последней строке символ @. Если количество чисел четное, то замени последнее число на 999, результат сложи и напечатай",tasktype:"task",id:2,taskuuid: "e261000f-a12e-4896-b153-b416a180e678",rightcode:"s = input()\na = []\nwhile s != '@':\n    a.append(int(s))\n    s = input()\nif len(a) % 2 == 0:\n    a[-1] = 999\nprint(sum(a))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["100", "880", "5", "202", "@"],defaultoutput:["1984"],inout: [{inv:["100", "880", "5", "202", "@"],outv:["1984"]},{inv:["5", "100", "880", "@"],outv:["985"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["[", "]", "sum"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные'  содержится некоторое количество чисел, в последней строке символ @. Если если среди чисел есть число 999, то замени первое число на последнее, напечатай первое число списка",tasktype:"task",id:3,taskuuid: "77dbd1e0-be04-46ce-b75f-a32278065a32",rightcode:"s = input()\na = []\nflag = 0\nwhile s != '@':\n    a.append(s)\n    if s == '999':\n        flag = 1\n    s = input()\nif flag == 1:\n    a[0], a[-1] = a[-1], a[0]\nprint(a[0])\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '@':\n    a.append(s)\n    s = input()\nif '999' in a:\n    a[0], a[-1] = a[-1], a[0]\nprint(a[0])\n",defaultinput:["100", "880", "999", "202", "@"],defaultoutput:["202"],inout: [{inv:["100", "880", "999", "202", "@"],outv:["202"]},{inv:["5", "100", "880", "@"],outv:["5"]}],restrictions: {maxlines:12,forbidden:["условный оператор in"],forbiddenRe:["if.* in .*:"],musthave:["append", "[", "]"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Изучи программу",tasktype:"guide",id:4,taskuuid: "c007b7e1-ab23-4210-bf6c-aa9d431481e5",rightcode:"pass\n",defaultcode:"# Изучим новую возможность строк\n\n# Пусть даны некоторые числа разделенные тире\na = '17-6-87-66'\n\n# Эту строку можно разделить на части и поместить в список. Для этого используется метод split. В круглых скобках указывается разделитель\nb = a.split('-')\nprint('Деление строки по символу - :', b)\n\n# Если значения разделены пробелом, то в круглых скобках вообще можно ничего не указывать\na = 'Иван Петр Дарья'\nprint('Деление строки по пробелам:', a.split())\n\n# Рассмотрим задачу. Даны числа, разделенные пробелом, найдем их сумму\na = '1 2 3 4 5'\nb = a.split()\n\n# Такой код выдаст ошибку, так как split создает список из строк, поэтому мы его закомментировали\n# print(sum(b))\n\n# Нужно как-то превратить каждую строку в число. Один из способов таков:\nfor i in range(len(b)):\n    b[i] = int(b[i])  # Заменим очередное значение списка на число\nprint('Сумма чисел:', sum(b))\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные' содержится строка с числами, разделенными пробелами. Напечатай минимальное число в списке",tasktype:"task",id:5,taskuuid: "97ca26b0-4c1b-4568-8da2-9d9ebf8c198f",rightcode:"s = input()\nb = s.split()\nfor i in range(len(b)):\n    b[i] = int(b[i])\nprint(min(b))\n",defaultcode:"",forbiddencode:"s = input()\nb = s.split()\nprint(min(map(int,b)))\n",defaultinput:["100 88 99 20"],defaultoutput:["20"],inout: [{inv:["100 88 99 20"],outv:["20"]},{inv:["5 100 880"],outv:["5"]}],restrictions: {maxlines:5,forbidden:["списковые включения", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]map"],musthave:["split", "[", "min"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные' содержится строка с числами, разделенными звездочками. Раздели каждое число целочисленно на 10, найди сумму. Используй методы split и sum",tasktype:"task",id:6,taskuuid: "a255f0e9-23e4-41d3-9f6c-75a25f895a7b",rightcode:"s = input()\nb = s.split('*')\nfor i in range(len(b)):\n    b[i] = int(b[i]) // 10\nprint(sum(b))\n",defaultcode:"",forbiddencode:"s = input()\nb = map(int,s.split('*'))\nprint(sum(a//10 for a in  b))\n",defaultinput:["10*88*99*20"],defaultoutput:["20"],inout: [{inv:["10*88*99*20"],outv:["20"]},{inv:["5*100*880"],outv:["98"]}],restrictions: {maxlines:5,forbidden:["списковые включения", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]map"],musthave:["split", "[", "sum"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные' содержится строка c городами, разделенными пробелами. Напечатай разницу между максимальной и минимальной длиной названия города.",tasktype:"task",id:7,taskuuid: "b57042b3-dc00-470c-b859-a12e4a40ef70",rightcode:"s = input()\nb = s.split()\nfor i in range(len(b)):\n    b[i] = len(b[i])\nprint(max(b) - min(b))\n",defaultcode:"",forbiddencode:"b = input().split()\ns=[len(i) for i in b]\nprint(max(s) - min(s))\n",defaultinput:["Париж Рим Лондон Ливерпуль"],defaultoutput:["6"],inout: [{inv:["Париж Рим Лондон Ливерпуль"],outv:["6"]},{inv:["Рим Милан"],outv:["2"]}],restrictions: {maxlines:6,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["split", "[", "max", "min"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные' содержится строка c городами, разделенными пробелами. Исключи города начинающиеся на 'М' из списка. Сложи все города получившегося списка и напечатай",tasktype:"task",id:8,taskuuid: "1ee87de7-1b75-4e66-ae2e-b3135793baf4",rightcode:"s = input()\nb = s.split()\ns = ''\nfor i in range(len(b)):\n    a = b[i]\n    if a[0] != 'М':\n        s = s + b[i]\nprint(s)\n",defaultcode:"",forbiddencode:"b = input().split()\ns=''.join([a for a in b if a[0] != 'М'])\nprint(s)\n",defaultinput:["Париж Рим Лондон Москва Ливерпуль Милан"],defaultoutput:["ПарижРимЛондонЛиверпуль"],inout: [{inv:["Париж Рим Лондон Москва Ливерпуль Милан"],outv:["ПарижРимЛондонЛиверпуль"]},{inv:["Рим Милан"],outv:["Рим"]}],restrictions: {maxlines:8,forbidden:["списковые включения", "join"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "join"],musthave:["split", "["],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные' содержится строка c числами, разделенными пробелами. Добавь в новый список числа меньшие 10. Напечатай минимальное число получившегося списка",tasktype:"task",id:9,taskuuid: "690313eb-fc2c-4f45-bcb8-6cd00a5f3514",rightcode:"s = input()\nb = s.split()\nr = []\nfor el in b:\n    if int(el) >= 10:\n        r.append(int(el))\nprint(min(r))\n",defaultcode:"",forbiddencode:"b = input().split()\nprint(min(int(a) for a in b if int(a) >= 10))\n",defaultinput:["5 6 2 15 60"],defaultoutput:["15"],inout: [{inv:["5 6 2 15 60"],outv:["15"]},{inv:["5 6 2 15 14"],outv:["14"]}],restrictions: {maxlines:7,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["split", "["],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные' содержится строка c подстроками, разделенными пробелами. Возьми подстроки содержащие две подряд буквы LL. Сложи все подстроки получившегося списка и напечатай",tasktype:"task",id:10,taskuuid: "00b970f2-2d00-4eec-bfb8-27df9d330c01",rightcode:"s = input()\nb = s.split()\ns = ''\nfor el in b:\n    if 'LL' in el:\n        s = s + el\nprint(s)\n",defaultcode:"",forbiddencode:"b = input().split()\nprint(''.join(el for el in b if 'LL' in el))\n",defaultinput:["MMLLLMM KKLKKK HHLHHL LLMM"],defaultoutput:["MMLLLMMLLMM"],inout: [{inv:["MMLLLMM KKLKKK HHLHHL LLMM"],outv:["MMLLLMMLLMM"]},{inv:["MMLL LLMM"],outv:["MMLLLLMM"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "join"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "join"],musthave:["split"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"В поле 'Входные данные' содержится строка c числами, разделенными пробелами. К каждому числу добавь предыдущее, напечатай минимальное число получившегося списка. Используй функцию min",tasktype:"task",id:11,taskuuid: "783d78cf-5e01-47ff-b456-595793aae6d3",rightcode:"s = input()\nb = s.split()\na=[]\nfor i in range(1, len(b)):\n    a.append(int(b[i]) + int(b[i - 1]))\nprint(min(a))\n",defaultcode:"",forbiddencode:"b=list(map(int,input().split()))\nprint(min([b[i] + b[i - 1] for i in range(1,len(b))]))\n",defaultinput:["5 -6 2 -15 60"],defaultoutput:["-13"],inout: [{inv:["5 -6 2 -15 60"],outv:["-13"]},{inv:["-5 6 2 -16 14"],outv:["-14"]}],restrictions: {maxlines:6,forbidden:["списковые включения", "join", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "join", "map"],musthave:["split", "["],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "0a5eb99b-4209-4e5d-8fcf-bb16b48e35d6",rightcode:"pass\n",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками...хм... где-то мы уже об этом говорили.\n\n# Оператор in используется аналогично\ns = ['П', 'р', 'и', 'в', 'е', 'т']\nif 'р' in s:\n    print('Элемент', 'р', 'есть в списке')\n\n# count тоже работает\nprint('Количество элементов П в списке:', s.count('П'))\n\n# Существует полезный метод join, который объединяет элементы списка в строку.\n# Он применим к спискам, которые содержат только строки.\n# Метод выглядит довольно необычно, постарайся запомнить, он пригодится нам много раз.\nb = '-'.join(s)\nprint('Превратили список в строку:', b)\nb = ''.join(s)\nprint('Превратили список в строку:', b)\n\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"В поле 'Входные данные' содержится некоторое количество чисел, в последней строке символ @. Напечатай только уникальные числа. Используй in и списки",tasktype:"task",id:2,taskuuid: "f96ea9f8-7e05-40a8-ab48-3180d00a003b",rightcode:"s = input()\na = []\nwhile s != '@':\n    if s not in a:\n        print(s)\n    a.append(s)\n    s = input()\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["100", "5", "5", "100", "@"],defaultoutput:["100", "5"],inout: [{inv:["100", "5", "5", "100", "@"],outv:["100", "5"]},{inv:["5", "800", "5", "@"],outv:["5", "800"]}],restrictions: {maxlines:7,forbidden:[],forbiddenRe:[],musthave:["[", "]", " in "],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"В поле 'Входные данные' содержится строка с числами. Сложи уникальные числа. Используй функцию sum",tasktype:"task",id:3,taskuuid: "d6929922-7f07-4542-b22c-aaf0b75a91b0",rightcode:"s = input()\nb = s.split()\na = []\nfor el in b:\n    if int(el) not in a:\n        a.append(int(el))\nprint(sum(a))\n",defaultcode:"",forbiddencode:"print(sum(set(map(int, input().split()))))\n",defaultinput:["100 5 5 100"],defaultoutput:["105"],inout: [{inv:["100 5 5 100"],outv:["105"]},{inv:["5 800 5"],outv:["805"]}],restrictions: {maxlines:7,forbidden:["set", "списковые включения", "map"],forbiddenRe:["set", "списковые включения", "[\\[(].*for[^:]*in.*[\\])]", "map"],musthave:[" in ", "sum"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"В поле 'Входные данные' содержится строка с числами. Подсчитай количество чисел равных 1. Используй count",tasktype:"task",id:4,taskuuid: "5700b048-1183-4ac4-9170-24cfbf84c1dc",rightcode:"s = input()\na = s.split()\nprint(a.count('1'))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["1 0 0 1 11 1 0"],defaultoutput:["3"],inout: [{inv:["1 0 0 1 11 1 0"],outv:["3"]},{inv:["11 1 1"],outv:["2"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["count"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"В поле 'Входные данные' содержится строка с разными числами. Подсчитай количество чисел не равных [1,2,3,4]. Используй in",tasktype:"task",id:5,taskuuid: "ebec8b98-6ac0-4a3a-824b-280ed2d1c07c",rightcode:"s = input()\na = s.split()\nb=[]\nfor el in a:\n    if el not in ['1','2','3','4']:\n        b.append(el)\nprint(len(b))\n",defaultcode:"",forbiddencode:"s = input()\na = s.split()\nprint(len([el for el in a if el not in ['1', '2', '3', '4']]))\n",defaultinput:["1 2 0 1 11 1 0"],defaultoutput:["3"],inout: [{inv:["1 2 0 1 11 1 0"],outv:["3"]},{inv:["11 1 1 2 3 4"],outv:["1"]}],restrictions: {maxlines:8,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:[" in "],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"В поле 'Входные данные' содержится строка с именами. Для каждого имени найди количество раз, которое оно встречается.Используй count",tasktype:"task",id:6,taskuuid: "82ad87b8-1242-45ec-8e3b-e90fb470f8d6",rightcode:"s = input()\na = s.split()\nfor el in a:\n    print(el, a.count(el))\n",defaultcode:"",forbiddencode:"s = input()\na = s.split()\n[print(el,a.count(el)) for el in a]\n",defaultinput:["Иван Иван Мария Дарья Роман Иван Мария"],defaultoutput:["Иван 3", "Иван 3", "Мария 2", "Дарья 1", "Роман 1", "Иван 3", "Мария 2"],inout: [{inv:["Иван Иван Мария Дарья Роман Иван Мария"],outv:["Иван 3", "Иван 3", "Мария 2", "Дарья 1", "Роман 1", "Иван 3", "Мария 2"]},{inv:["Иван Петр Мария Дарья Роман Иван"],outv:["Иван 2", "Петр 1", "Мария 1", "Дарья 1", "Роман 1", "Иван 2"]}],restrictions: {maxlines:4,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["count"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"В поле 'Входные данные' содержится строка с именами. Сформируй список с уникальными именами. Для каждого имени найди количество раз, которое оно встречается. Используй count",tasktype:"task",id:7,taskuuid: "894ca6cc-0525-44e5-a402-111adb06e840",rightcode:"s = input()\na = s.split()\nb = []\nfor el in a:\n    if el not in b:\n        b.append(el)\nfor el in b:\n    print(el, a.count(el))\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["Иван Иван Мария Дарья Роман Иван Мария"],defaultoutput:["Иван 3", "Мария 2", "Дарья 1", "Роман 1"],inout: [{inv:["Иван Иван Мария Дарья Роман Иван Мария"],outv:["Иван 3", "Мария 2", "Дарья 1", "Роман 1"]},{inv:["Иван Петр Мария Дарья Роман Иван"],outv:["Иван 2", "Петр 1", "Мария 1", "Дарья 1", "Роман 1"]}],restrictions: {maxlines:9,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["count"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"В поле 'Входные данные' содержится строка с числами. Найди уникальные числа, большие 10. Результат выведи в виде одной строки через тире. Используй метод join",tasktype:"task",id:8,taskuuid: "85df4b71-120d-44ea-b128-d86f3667d9f7",rightcode:"s = input()\nb = s.split()\na = []\nfor el in b:\n    if el not in a and int(el) > 10:\n        a.append(el)\nv = '-'.join(a)\nprint(v)\n",defaultcode:"",forbiddencode:"pass\n",defaultinput:["100 5 5 100 200 800"],defaultoutput:["100-200-800"],inout: [{inv:["100 5 5 100 200 800"],outv:["100-200-800"]},{inv:["5 800 5"],outv:["800"]}],restrictions: {maxlines:8,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["join"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"В поле 'Входные данные' содержится строка с числами. Оставь числа кратные 2. Объедини полученные числа в 1 строку c помощью join. Получится длинное число. Умножь его на 2 и напечатай",tasktype:"task",id:9,taskuuid: "e8b1fd29-6d40-43ce-9e3c-55fb77065557",rightcode:"s = input()\nb = s.split()\na = []\nfor el in b:\n    if int(el) % 2 == 0:\n        a.append(el)\nv = ''.join(a)\nprint(int(v) * 2)\n",defaultcode:"",forbiddencode:"s = input()\nb = s.split()\na=[el for el in b if int(el) % 2 == 0]\nprint(int(''.join(a)) * 2)\n",defaultinput:["2 2 2 3 3 3"],defaultoutput:["444"],inout: [{inv:["2 2 2 3 3 3"],outv:["444"]},{inv:["4 4 5"],outv:["88"]}],restrictions: {maxlines:9,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["join"],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "018ff636-2054-427a-9eaa-976aecc91f44",rightcode:"pass\n",defaultcode:"# Новая возможность списков - это сортировка.\n\n# Метод sorted возвращает список отсортированный по возрастанию. Мы будем применять его только к спискам чисел.\na = [1, 1, 2, 3, 4, 30, 20, 2, 3, 4]\nb = sorted(a)\nprint(b)\n\n# Для получения отсортированного по убыванию списка развернем его с помощью среза:\nb = b[::-1]\nprint(b)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"В поле 'Входные данные' содержится некоторое количество чисел, в последней строке символ @. Напечатай все числа по возрастанию",tasktype:"task",id:2,taskuuid: "5551c643-313f-4597-9d62-c8630a7c3212",rightcode:"s = input()\na = []\nwhile s != '@':\n    a.append(int(s))\n    s = input()\na = sorted(a)\nfor el in a:\n    print(el // 10)\n",defaultcode:"",forbiddencode:"s = input()\na = []\nwhile s != '@':\n    a.append(int(s))\n    s = input()\n[print(el // 10) for el in sorted(a)]\n",defaultinput:["100", "50", "50", "100", "@"],defaultoutput:["5", "5", "10", "10"],inout: [{inv:["100", "50", "50", "100", "@"],outv:["5", "5", "10", "10"]},{inv:["50", "800", "50", "@"],outv:["5", "5", "80"]}],restrictions: {maxlines:9,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["sorted"],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"В поле 'Входные данные' содержится некоторое количество чисел. Возьми только числа, которые повторяются. Отсортируй получившийся список и распечатай.",tasktype:"task",id:3,taskuuid: "9a450a9e-3633-41f9-8f6c-f21790390a32",rightcode:"s = input().split()\na = []\nfor el in s:\n    if s.count(el) > 1 and int(el) not in a:\n        a.append(int(el))\na = sorted(a)\nfor el in a:\n    print(el)\n",defaultcode:"",forbiddencode:"s = input().split()\n[print(el) for el in sorted(set(int(el) for el in s if s.count(el) > 1))]\n",defaultinput:["100 9 5 5 100 1 8"],defaultoutput:["5", "100"],inout: [{inv:["100 9 5 5 100 1 8"],outv:["5", "100"]},{inv:["5 80 80 5 100 100"],outv:["5", "80", "100"]}],restrictions: {maxlines:8,forbidden:["списковые включения", "set", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "set", "map"],musthave:["sorted"],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"В поле 'Входные данные' содержится число. Добавь все цифры числа в список, отсортируй список по убыванию. Объедини все цифры отсортированного списка в число, напечатай это число",tasktype:"task",id:4,taskuuid: "a664646c-16b7-4c06-a92e-8bb8bc065e3e",rightcode:"s = input()\na = []\nfor el in s:\n    a.append(int(el))\na = sorted(a)\na = a[::-1]\nfor i in range(len(a)):\n    a[i] = str(a[i])\nprint(''.join(a))\n",defaultcode:"",forbiddencode:"s = list(input())\na = sorted(map(int,s))[::-1]\nprint(''.join(map(str,a)))\n",defaultinput:["10095510018"],defaultoutput:["98551110000"],inout: [{inv:["10095510018"],outv:["98551110000"]},{inv:["231412423"],outv:["443322211"]}],restrictions: {maxlines:10,forbidden:["списковые включения", "list", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "list", "map"],musthave:[],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее сами числа. Количество чисел всегда четное. Добавь все цифры числа в список, отсортируй получившийся список по возрастанию, возьми каждый второй элемент получившегося списка. Напечатай получившийся список. Используй срезы.",tasktype:"task",id:5,taskuuid: "05c71fbb-84b6-417f-a6ee-1bf2d905dd7b",rightcode:"n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\na = sorted(a)\na = a[1::2]\nfor el in a:\n    print(el)\n",defaultcode:"",forbiddencode:"n = int(input())\n[print(el) for el in sorted([int(input()) for i in range(n)])[1::2]]\n",defaultinput:["4", "100", "880", "5", "202"],defaultoutput:["100", "880"],inout: [{inv:["4", "100", "880", "5", "202"],outv:["100", "880"]},{inv:["6", "100", "880", "5", "203", "500", "200"],outv:["100", "203", "880"]}],restrictions: {maxlines:8,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["sorted"],musthaveRe:["\\[[^\\]\\[]*:[^\\]\\[]*\\]"],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В поле 'Входные данные' содержится некоторое количество чисел. Напечатай числа парами 1 и 2, 2 и 3, 3 и 4 и так далее",tasktype:"task",id:1,taskuuid: "6836903b-ad90-4eee-b3de-9c919dcae9d7",rightcode:"s = input().split()\na = []\nfor i in range(len(s) - 1):\n    print(s[i], s[i + 1])\n",defaultcode:"",forbiddencode:"s = input().split()\na = []\n[print(s[i], s[i + 1]) for i in range(len(s) - 1)]\n",defaultinput:["100 9 5 5 100 1 8"],defaultoutput:["100 9", "9 5", "5 5", "5 100", "100 1", "1 8"],inout: [{inv:["100 9 5 5 100 1 8"],outv:["100 9", "9 5", "5 5", "5 100", "100 1", "1 8"]},{inv:["5 80 80 5"],outv:["5 80", "80 80", "80 5"]}],restrictions: {maxlines:4,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:[],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В поле 'Входные данные' содержится некоторое количество чисел. Возьми пары чисел 1 и 2, 2 и 3, 3 и 4 и так далее. Подсчитай количество пар, в которых оба числа нечетные",tasktype:"task",id:2,taskuuid: "e94527a3-8f6c-44e5-b3b3-eb11b1d1ae02",rightcode:"s = input().split()\nfor i in range(len(s)):\n    s[i] = int(s[i])\ncnt = 0\nfor i in range(len(s) - 1):\n    if s[i] % 2 != 0 and s[i + 1] % 2 != 0:\n        cnt += 1\nprint(cnt)\n",defaultcode:"",forbiddencode:"s = list(map(int, input().split()))\nprint(len([i for i in range(len(s) - 1) if s[i] % 2 != 0 and s[i + 1] % 2 != 0]))\n",defaultinput:["100 9 5 5 100 1 8"],defaultoutput:["2"],inout: [{inv:["100 9 5 5 100 1 8"],outv:["2"]},{inv:["5 81 80 5"],outv:["1"]}],restrictions: {maxlines:8,forbidden:["списковые включения", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "map"],musthave:[],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В поле 'Входные данные' содержится некоторое количество чисел. Возьми тройки чисел 1,2,3, 2,3,4, 3,4,5 и так далее. Найди сумму троек, в которых хотя бы одно число имеет 0",tasktype:"task",id:3,taskuuid: "477f64af-e1c0-48fc-909e-f7dec999febd",rightcode:"s = input().split()\nsm = 0\nfor i in range(len(s) - 2):\n    if '0' in s[i] or '0' in s[i + 1] or '0' in s[i + 2]:\n        sm = sm + int(s[i]) + int(s[i + 1]) + int(s[i + 2])\nprint(sm)\n",defaultcode:"",forbiddencode:"s = input().split()\na = [int(s[i]) + int(s[i + 1]) + int(s[i + 2]) for i in range(len(s) - 2) if\n     '0' in s[i] or '0' in s[i + 1] or '0' in s[i + 2]]\nprint(sum(a))\n",defaultinput:["10 9 5 5 10 1 8"],defaultoutput:["79"],inout: [{inv:["10 9 5 5 10 1 8"],outv:["79"]},{inv:["5 10 20 5"],outv:["70"]}],restrictions: {maxlines:7,forbidden:["списковые включения", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "map"],musthave:[],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В первой строке поля 'Входные данные' количество строк, затем идут сами строки. Подсчитай количество букв А в каждой строке. Сумму напечатай.",tasktype:"task",id:4,taskuuid: "c3c98eae-aa3c-40e1-99d4-fc3ab3b90bf3",rightcode:"n = int(input())\nsm = 0\nfor i in range(n):\n    a = input()\n    sm = sm + a.count('A')\nprint(sm)\n",defaultcode:"",forbiddencode:"n = int(input())\nprint(sum([input().count('A') for i in range(n)]))\n",defaultinput:["4", "AAA", "BAAA", "AAAB", "ABAA"],defaultoutput:["12"],inout: [{inv:["4", "AAA", "BAAA", "AAAB", "ABAA"],outv:["12"]},{inv:["5", "AAA", "BAAA", "AAAAB", "ABAA", "A"],outv:["14"]}],restrictions: {maxlines:6,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:[],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В первой строке количество пар чисел, далее - сами пары. Сложи числа попарно. Результат напечатай. Используй split",tasktype:"task",id:5,taskuuid: "a7f559e8-40f8-4732-b307-1b3d70ceed9a",rightcode:"n = int(input())\nfor i in range(n):\n    a = input().split()\n    print(int(a[0]) + int(a[1]))\n",defaultcode:"",forbiddencode:"n = int(input())\n[print(sum(map(int,input().split()))) for i in range(n)]\n",defaultinput:["3", "1 3", "2 4", "3 4"],defaultoutput:["4", "6", "7"],inout: [{inv:["3", "1 3", "2 4", "3 4"],outv:["4", "6", "7"]},{inv:["4", "1 3", "2 5", "3 6", "9 10"],outv:["4", "7", "9", "19"]}],restrictions: {maxlines:5,forbidden:["списковые включения", "map"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]", "map"],musthave:["split"],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В первой строке количество наборов чисел, далее - сами числа. Найди количество чисел в каждой строке",tasktype:"task",id:6,taskuuid: "126241f4-4739-4b42-a286-855132f4d56c",rightcode:"n = int(input())\nfor i in range(n):\n    a = input().split()\n    print(len(a))\n",defaultcode:"",forbiddencode:"n = int(input())\n[print(len(input().split())) for i in range(n)]\n",defaultinput:["3", "1 3 4 7 8 8 ", "2 4 1", "3 4 18 8 8"],defaultoutput:["6", "3", "5"],inout: [{inv:["3", "1 3 4 7 8 8 ", "2 4 1", "3 4 18 8 8"],outv:["6", "3", "5"]},{inv:["4", "1 3 2 9 9 9 9", " 9 10 2 5", "5", "6"],outv:["7", "4", "1", "1"]}],restrictions: {maxlines:4,forbidden:["списковые включения"],forbiddenRe:["[\\[(].*for[^:]*in.*[\\])]"],musthave:["split"],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:1,taskuuid: "c35e0d39-cd67-4bd8-b037-02cc27de6a51",rightcode:"pass\n",defaultcode:"# Первая команда или по-другому функция, которую мы изучим - это print.\n# Функция print выводит данные в поле 'Выходные данные'\nprint('Я знаю команду print')\n\n# Нажми кнопку 'Выполнить' и ты увидишь результат работы программы в поле 'Выходные данные'.\n# Проведи эксперименты - удали некоторые части строки 'Я знаю команду print' или кода и посмотри, будет ли выполняться код и что он будет выводить\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:2,taskuuid: "2838d4b1-6167-474e-bbeb-770daafd66ce",rightcode:"pass\n",defaultcode:"# Ты конечно заметил, что и в прошлой программе, и в этой - перед некоторыми строками стоит решетка - #.\n# Такие строки называются 'Комментариями' и не учитываются при выполнении программы.\n# Любую строку кода можно исключить из выполнения программы, если поставить перед ней #.\n# Это называется по другому - Закомментировать код.\n\n# Данная программа выводит четыре строки, а нужно одну. Закомментируй любые 3 строки программы и выполни программу\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\n",forbiddencode:"pass\ne\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:3,taskuuid: "88f83736-f578-4396-a178-79e35fea3857",rightcode:"pass\n",defaultcode:"# Команда print может печатать несколько значений, они указываются через запятую\n# Напечатанные значения будут разделены одним пробелом\n\n# Проведи эксперимент, добавь несколько новых значений через запятую\nprint('1', '2', '3')\n",forbiddencode:"pass\ne\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:4,taskuuid: "e2416b4d-cee3-45c3-a5d7-290fa01ccb43",rightcode:"pass\n",defaultcode:"# Пробел - это тоже символ и учитывается при проверке заданий!\n\n# Этот код печатает 4 пробела между цифрами и еще 4 пробела в конце\nprint('1   ', '   2   ', '   3', '   ')\n\n# Пробелы невидимы в поле 'Выходные данные', из-за этого можно допустить ошибку при выполнении заданий. Чтобы увидеть пробелы, нужно выделить весь текст в поле 'Выходные данные'.\n# Проведи эксперимент - выдели весь текст в окне 'Выходные данные' и ты увидишь пробелы\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Изучи программу",tasktype:"guide",id:5,taskuuid: "0781ebbe-e784-45df-8768-49464b8e3d93",rightcode:"pass\n",defaultcode:"# Научимся использовать переменные.\n\n# Посмотри на этот код:\nprint('Этот код не использует переменные')\nprint('Привет, Иван!')\nprint('Привет, Иван!')\n\n# Теперь представь, что мы хотим вместо имени Иван напечатать Ваня.\n# Придется в двух местах менять код. Проще сделать так:\nprint('Этот код использует переменные')\na = 'Привет, Иван!'\nprint(a)\nprint(a)\n\n# a - это переменная. Её название можно изменить.\n",forbiddencode:"pass\ne\nnputlist, outputlist, maxlines, forbidden, forbiddenRe, musthave, musthaveRe, text, id, tasktype, chpts, gc)\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Изучи программу",tasktype:"guide",id:6,taskuuid: "34b38071-7b59-4182-89d5-bc8abff70369",rightcode:"pass\n",defaultcode:"# Предположим мы имеем такой код:\ninduct = 'Привет'\nname = 'Ваня'\nprint(induct, ',', name)\n\n# Он печатает 'Привет , Ваня'. Как убрать лишний пробел перед запятой?\n\n# Вот так, просто сложим переменную и запятую\nprint(induct + ',', name)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:["f-строки"],forbiddenRe:["f[\"']"],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Изучи программу",tasktype:"guide",id:7,taskuuid: "c7c7e8d3-dd13-4748-a06c-b78ba9e326b7",rightcode:"pass\n",defaultcode:"# Обрати внимание, что под текстом задачи есть поле 'Входные данные'. Программа может брать данные из этого поля и делать с ними что-либо.\n\n# Функция input() считывает из поля 'Входные данные' одну строку текста. После этого мы помещаем ее в переменную d и печатаем\nd = input()\nprint(d)\n",forbiddencode:"pass\n",defaultinput:["Сейчас мы загрузим эту строку в программу"],defaultoutput:[],inout: [{inv:["Сейчас мы загрузим эту строку в программу"],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Изучи программу",tasktype:"guide",id:8,taskuuid: "8fdb3735-6287-4998-83a2-2c8c7cf1a33a",rightcode:"pass\n",defaultcode:"# Что делать если нужно считать 2 строки из поля 'Входные данные'?\n# Для считывания второй строки вызови команду input второй раз:\na = input()\nprint('Это первая строка:', a)\nb = input()\nprint('Это вторая строка:', b)\n",forbiddencode:"pass\n",defaultinput:["Всем привет!", "Меня зовут Иван"],defaultoutput:[],inout: [{inv:["Всем привет!", "Меня зовут Иван"],outv:[]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:9,taskuuid: "859eca5b-c7e1-4092-a20c-199465ab3824",rightcode:"pass\n",defaultcode:"# В этой главе мы научимся работать с числами.\n\n# Сначала напечатаем несколько чисел\nprint(1, 2, 3, 4)\n\n# Чем числа отличаются от строк? Они пишутся без кавычек.\n\n# Мы можем печатать одновременно и строки и числа. Вот так:\nprint(1, 2, 3, 4, '1', '2', '-это  числа')\n\n# Обрати внимание, в поле 'Выходные данные' невозможно понять что мы напечатали - число или строку, ведь кавычки исчезают при печати.\n\n# Если мы складываем числа, то выводится их сумма, если мы складываем строки, то они объединяются\nprint('Результат сложения чисел:', 1 + 4)\nprint('Результат сложения строк:', '1' + '4')\nprint('1 + 5 =', 1 + 5)\n\n# К числу нельзя прибавить строку, питон выдаст ошибку.\n\n# Раскомментируй строку ниже и попробуй выполнить программу - будет ошибка:\n# print(1+'1')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:10,taskuuid: "7bac10b2-fab4-4767-a704-be0387b05b10",rightcode:"pass\n",defaultcode:"# В поле 'Входные данные' ты видишь число 5, давай введем его в программу и вычтем из него 2\na = input()\nprint(a - 2)\n\n# Возникла ошибка! А все потому, что всё, что содержитсяв поле 'Входные данные' является строками, а из строки нельзя вычесть число.\n\n# Что же делать?\n\n# Новая команда int, которую мы изучим позволяет превратить строку в число.\n# (Закомментируй или удали предыдущий код, чтобы ошибка не возникала.)\na = input()\nb = int(a)\nprint(b - 2)\n\n# Теперь все получилось!\n\n# Можно сократить код, написав так:\na = int(input())\nprint(a - 2)\n\n# В программировании говорят - Мы обернули функцию input в функцию int\n\n# Можно еще короче:\nprint(int(input()) - 2)\n",forbiddencode:"pass\n",defaultinput:["5", "6", "7"],defaultoutput:[],inout: [{inv:["5", "6", "7"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:11,taskuuid: "f272d096-27c4-416b-b9a2-b263e203bffd",rightcode:"pass\n",defaultcode:"# Что если необходимо найти разность между двумя числами, которые находятся в поле 'Входные данные' и напечатать результат в виде 'Разность:3'\n# Перед тире нет пробела!\n\n# Данный код выдаст ошибку, а всё потому, что к строке нельзя прибавить число\na = int(input())\nb = int(input())\nd = a - b\nprint('Разность:' + d)\n\n# Нам поможет новая команда str! Она превращает число в строку!\n# (Закомментируй или удали предыдущую строку кода, чтобы ошибка не возникала)\nc = str(d)\nprint('Разность:' + c)\n\n# Можно записать короче:\nprint('Сокращаем код')\nc = str(a - b)\nprint('Разность:' + c)\n\n# Еще короче:\nprint('Еще сокращаем код')\nprint('Разность:' + str(a - b))\n",forbiddencode:"pass\n",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "3"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Изучи программу",tasktype:"guide",id:12,taskuuid: "9dc60ec4-9624-41e2-82a2-554edad1b01d",rightcode:"pass\n",defaultcode:"# В этой главе мы узнаем новые математические команды:\n# *  - умножение\n# /  - деление\n# ** - возведение в степень\n\na = int(input())\nb = int(input())\nprint('Произведение', str(a) + '*' + str(b) + ' = ' + str(a * b))\nprint('Частное', str(a) + '/' + str(b) + ' = ' + str(a / b))\nprint(str(a) + ' в степени ' + str(b) + ' = ' + str(a ** b))\n\n# Как и в обычной математике можно использовать скобки:\nprint('(5 - 2) * 2 =', (a - b) * b)\n",forbiddencode:"pass\n",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "2"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Изучи программу",tasktype:"guide",id:13,taskuuid: "8c42cab8-1583-43f5-8d5a-d3797ee0feaa",rightcode:"pass\n",defaultcode:"# Две новых операции которые мы пройдем:\n# % - остаток от деления\n# // - целочисленное деление (деление нацело)\n\n# Вот как работают операции на конкретных примерах:\n# 5 // 5 = 1     5 % 5 = 0\n# 6 // 5 = 1     6 % 5 = 1\n# 7 // 5 = 1     7 % 5 = 2\n# 8 // 5 = 1     8 % 5 = 3\n# 9 // 5 = 1     9 % 5 = 4\n# 10// 5 = 2     10% 5 = 0\n# 11// 5 = 2     11% 5 = 1\n\n# Поэкспериментируй с данными операциями самостоятельно\nprint(10 // 3)\nprint(10 % 3)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Изучи программу",tasktype:"guide",id:14,taskuuid: "81d414fc-2c52-468b-ad77-a8d87e4191ed",rightcode:"pass\n",defaultcode:"# Что если некоторую строку нужно повторить несколько раз🦕?\nprint('Победа!' + 'Победа!' + 'Победа!' + 'Победа!')\n# Не очень удобно, особенно, если что-то нужно повторить раз 100!\n\n# Лучше сделать вот так:\nprint('Победа!' * 4)\n\n# Получается, в Питоне можно умножить строку на число и она повторится!\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Изучи программу",tasktype:"guide",id:15,taskuuid: "bb932726-7f3e-483f-a24a-ebc7722ae233",rightcode:"pass\n",defaultcode:"# Новая функция, которую мы узнаем - это функция len. Функция позволяет вычислить длину строки.\ns = 'Сколько в этом предложении букв? Функция len позволит подсчитать их'\nprint('В предложении:', len(s), 'букв')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:16,taskuuid: "a395194c-9c43-424a-bc0e-8fe1b10d9297",rightcode:"pass\n",defaultcode:"# Дана переменная N:\nN = 10\n\n# Взглянем на следующие строки кода:\nif N == 10:\n    print('N равно 10')\n# Запусти код. Программа напечатает 'N равно 10'\n\n# Теперь измени N на другое число и запусти заново. Программа ничего не напечатает.\n\n# if - это условный оператор, если выполняется условие N==10, то выполняется код после двоеточия\n\n# Обрати внимание на следующие особенности:\n# 1) После условия всегда стоит двоеточие\n# 2) Перед командой print стоит отступ\n# 3) Вместо одного = стоит два ==. В чём разница?\n# =  - для того чтобы поместить значение в переменную,\n# == - для сравнения значений.\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:17,taskuuid: "e712de5c-9fe8-47ec-8756-029ee61b4d37",rightcode:"pass\n",defaultcode:"# Дана переменная N:\nN = 10\n\n# Взглянем на следующие строки кода:\nif N == 10:\n    print('N равно 10')\n\n# В случае если N не равно 10, программа ничего не выводит, это не очень хорошо.\n\n# В случае если условие не выполняется мы будем выводить 'N не равно 10'\n\n# Это делается так:\nprint('Результат работы кода с else')\nif N == 10:\n    print('N равно 10')\nelse:\n    print('N не равно 10')\n# строчки после else выполняются, если не выполнилось условие после if\n\n# Еще пример кода:\nif N % 2 == 0:\n    print('N четное, то есть делится на 2 без остатка')\nelse:\n    print('N нечетное, то есть не делится на 2 без остатка')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:5,forbidden:["Тернарный оператор"],forbiddenRe:["if[^:]*else"],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:18,taskuuid: "03587559-7d61-4e41-8715-8be15981a19e",rightcode:"pass\n",defaultcode:"# Помимо равенства ==, в условии можно использовать знаки неравенства:\n# >  больше\n# >= больше или равно\n# <  меньше\n# <= меньше или равно\n# != не равно\n\nN = 100\nif N > 100:\n    print('больше 100')\nelse:\n    print('меньше либо равно 100')\n\nif N != 100:\n    print('не равно 100')\nelse:\n    print('равно 100')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"Изучи программу",tasktype:"guide",id:19,taskuuid: "fc83c9da-e465-4db4-b4f7-555bb0240428",rightcode:"pass\n",defaultcode:"# Научимся извлекать цифры из числа.\n\n# Возьмем число 783. Как извлечь все цифры числа?\n\n# Начнем с последней цифры. Последняя цифра - это остаток от деления числа на 10\nN = 783\nprint('Последняя цифра:', N % 10)\n\n# Первая цифра числа-это целочисленное деление на 100\nprint('Первая цифра', N // 100)\n\n# Осталось извлечь цифру в середине. Это можно сделать двумя способами:\n\n# Способ 1.\n# Как уже стало понятно мы можем извлечь первую и последнюю цифру числа.\n# Разделим число нацело на 10, это позволит отбросить последнюю цифру числа и поместим результат в переменную М\nM = N // 10\nprint('Промежуточное число', M)\n# Теперь легко получим последнюю цифру\nprint('Средняя цифра', M % 10)\n\n# Способ 2.\n# Найдем остаток от деления числа на 100\nprint('Второй способ')\nM = N % 100\nprint('Промежуточное число', M)\n\n# А затем разделим нацело на 10\nprint('Средняя цифра', M // 10)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"Изучи программу",tasktype:"guide",id:20,taskuuid: "642a94ff-4a9c-48b5-8d36-2d352e918adc",rightcode:"pass\n",defaultcode:"# Представим, что у нас есть следующий код:\nprint('Ура!')\nprint('Ура!')\nprint('Ура!')\n\n# Как его можно упростить? Используем циклы!\nfor i in range(3):\n    print('Ура!')\n\n# Данный код называется циклом.\n\n# Обрати внимание на следующие детали:\n# 1) Как и в условии if после строки с for стоит двоеточие.\n# 2) Все строки после строки с for, имеющие отступ, будут повторяться.\n# 3) Количество повторений указано в круглых скобках (3).\n# 4) Что такое i? Это счетчик цикла, пока мы не будем его использовать.\n# 5) Все что идет после строк с отступом не будет повторяться.\n\n# Остальное нужно просто пока запомнить\n\n# Приведем пример другой программы\nprint('На первый-второй рассчитайся')\nfor i in range(4):\n    print('Первый')\n    print('Второй')\nprint('Молодцы!')  # этот код не будет повторяться, так как нет отступа слева\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"Изучи программу",tasktype:"guide",id:21,taskuuid: "311bd0f4-d6fe-4214-b682-6e8c264d9b36",rightcode:"pass\n",defaultcode:"# В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа.\n# Найдем сумму этих чисел.\n\n# Создадим переменную sm, в ней будем копить сумму\nsm = 0\n# Возьмем код для считывания чисел\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    # Каждый раз когда мы считываем очередное число будем добавлять его к сумме\n    sm = sm + r\n# После завершения цикла напечатаем сумму\nprint('Сумма чисел: ', sm)\n\n",forbiddencode:"pass\n",defaultinput:["3", "2", "3", "4"],defaultoutput:[],inout: [{inv:["3", "2", "3", "4"],outv:[]},{inv:["2", "1", "2"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"Изучи программу",tasktype:"guide",id:22,taskuuid: "c498a99a-e1f3-4f46-aec3-547b0e44e538",rightcode:"pass\n",defaultcode:"# В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки.\n\n# Сложим все строки в одну строку.\n\n# Создадим переменную line, в которой будем накапливать все строки\nline = ''\nN = int(input())\nfor i in range(N):\n    r = input()\n    # Каждый раз когда мы считываем очередную строку будем добавлять ее к переменной line\n    line = line + str(r) + '!'\n# После завершения цикла напечатаем итоговую строку\nprint('Строка:', line)\n",forbiddencode:"pass\n",defaultinput:["3", "Быстрей", "Выше", "Сильней"],defaultoutput:[],inout: [{inv:["3", "Быстрей", "Выше", "Сильней"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"Изучи программу",tasktype:"guide",id:23,taskuuid: "90c933ec-4f97-4dca-a272-a9e09d5a8553",rightcode:"pass\n",defaultcode:"# Рассмотрим следующую задачу.\n\n# В первой строке поля 'Входные данные' содержится количество строк - 6. Далее идут сами строки. Сложим первую строку со второй, третью - с четвертой, пятую - с шестой.\n\n# Какое количество повторений цикла нам потребуется?\n\n# Правильный ответ - 3. То есть - половина от количества строк - 6//2\nN = int(input())\nfor i in range(N // 2):\n    one = input()\n    two = input()\n    print(one + two)\n\n# Обрати внимание, что нам потребовался оператор целочисленного деления //, обычное деление / не подойдет\n",forbiddencode:"pass\n",defaultinput:["6", "город-", "герой", "море по ", "колено", "крибли крабли", "бумс"],defaultoutput:[],inout: [{inv:["6", "город-", "герой", "море по ", "колено", "крибли крабли", "бумс"],outv:[]},{inv:["6", "Ф", "Ф", "Ф", "Ф", "Ф", "Ф"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"Изучи программу",tasktype:"guide",id:24,taskuuid: "4c7e3063-a573-4754-bf31-0468b5781c4a",rightcode:"pass\n",defaultcode:"# Рассмотрим следующую задачу.\n\n# В первой строке поля 'Входные данные' содержится количество чисел - 5. Далее идут сами числа.\n# Требуется найти разность между вторым и первым числом, третьим и вторым, четвертым и третьим, и так далее.\n\n# Сколько повторений цикла нам потребуется?\n\n# Правильный ответ - 4. То есть - на 1 меньше, чем количество чисел.\n\n# Также возникает вторая проблема: нужно где-то хранить предыдущее значение.\n\n# Изучи способ решения данной проблемы\nN = int(input())\nprev = int(input())  # Запоминаем первое число\nfor i in range(N - 1):  # Цикл на 1 меньше, чем количество чисел\n    curr = int(input())  # Считываем следующее число\n    print(curr, '-', prev, '=', curr - prev)  # Вычитаем из следующего числа предыдущее число\n    prev = curr  # Обновляем предыдущее число\n",forbiddencode:"pass\n",defaultinput:["5", "1", "2", "3", "5", "10"],defaultoutput:[],inout: [{inv:["5", "1", "2", "3", "5", "10"],outv:[]},{inv:["2", "2", "20"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"Изучи программу",tasktype:"guide",id:25,taskuuid: "c4bca955-2bf8-41cb-9af4-cabfeb670ed1",rightcode:"pass\n",defaultcode:"# Вернемся в структуре цикла:\n# for i in range(3):\n#     print('Ура')\n\n# Настала пока изучить счетчик цикла i. На самом деле i - это обычная переменная, которая может принимать разные числовые значения на каждом повторении цикла.\n\n# Проиллюстрируем работу счетчика на конкретном примере\nfor counter in range(3):\n    print(counter)\n# Напечатаются значения 0, 1, 2. Получается, нумерация начинается с нуля и заканчивается на единицу меньше, чем указано в скобках range(3)!\n\n# Что если необходимо начать нумерацию с 1 или другого числа? Прибавим к счетчику столько сколько нужно:\nprint('Нумерация c единицы')\nfor counter in range(3):\n    print(counter + 1)\n\n# Ну и напоследок - нумерация в обратную сторону:\nprint('Нумерация в обратную сторону')\nfor counter in range(3):\n    print(3 - counter)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"Изучи программу",tasktype:"guide",id:26,taskuuid: "e6834a8a-c773-4d8d-b3de-7eeddc76f801",rightcode:"pass\n",defaultcode:"# Научимся писать предыдущие программы другим способом.\n\n# 1) Если в скобках указать два числа, например, 1 и 5, то счетчик будет принимать значения от 1 до 4\n# Да, да, да ... это не опечатка 🤔, эту важную деталь ❗️нужно обязательно запомнить\nfor i in range(1, 5):\n    print(i)\n\n# 2) Если в скобках указать три числа, например, 1 и 10 и 2, то счетчик будет принимать значения 1,3,5,7,9\n# Получается третье число - это шаг\nprint('Числа с шагом 2')\nfor i in range(1, 10, 2):\n    print(i)\n\n# 3) Ну, и, напоследок, нумерация в обратную сторону. Если указать два числа 5 и 1, ничего работать не будет. Нужно дополнительно указать шаг со знаком минус:\nprint('Нумерация в обратную сторону')\nfor i in range(5, 1, -1):\n    print(i)\n# ❗️В этом примере диапазон от 5 до 2, последнее число опять не берется, имей это ввиду при решении задач.\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"Изучи программу",tasktype:"guide",id:27,taskuuid: "c2fec89b-da7c-4683-b831-31a5751609de",rightcode:"pass\n",defaultcode:"# Взглянем на структуру цикла более опытными глазами.\n\n# В данном примере i - это переменная, которая принимает значения из диапазона range. Range в переводе с английского Диапазон. Как мы уже знаем диапазон в Питоне можно задавать одним числом (от нуля до указанного числа), двумя числами(первое и последнее число), и тремя числами(первое, последнее, шаг)\nprint('Диапазон чисел')\nfor i in range(3):\n    print(i)\n\n# Вместо диапазона чисел можно использовать набор символов. В этом случае в переменную цикла i будут по очереди попадать все символы строки\nprint('Диапазон символов')\nfor i in 'ABCDEF1234':\n    print(i)\n\nprint('Еще пример')\ncity = input()\nfor i in city:\n    print(i)\n",forbiddencode:"pass\n",defaultinput:["LONDON"],defaultoutput:[],inout: [{inv:["LONDON"],outv:[]},{inv:["LONDON"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:28,taskuuid: "6ba0727f-112e-4c61-b184-e8e69c3f7175",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся искать минимальные, максимальные и средние значения.\n\n# Предположим, нам надо найти максимальное среди шести чисел 1 8 17 8 18 3, которые находятся в поле 'Входные данные'.\n# Введем переменную mx, в которую поместим значение заведомо меньшее любого из чисел, среди которых осуществляется поиск.\n\nmx = 0  # Меньше нуля нет ни одного числа\nfor i in range(6):  # Будем перебирать все числа\n    a = int(input())\n    if a > mx:  # Если очередное число больше переменной mx, то поместим это значение в переменную mx\n        mx = a\nprint(mx)  # Готово! Максимальное число найдено!\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:29,taskuuid: "88bb33c8-e46c-493e-b678-4836756cf5b7",rightcode:"pass\n",defaultcode:"# Предположим нам надо найти минимальное число среди шести чисел 1 8 17 8 18 3, которые находятся в поле 'Входные данные'.\n\n# Введем переменную mn, в которую поместим число заведомо большее любого из чисел, среди которых  осуществляется поиск\nmn = 100  # Больше 100 точно ничего нет среди чисел\nfor i in range(6):  # Будем перебирать все числа\n    a = int(input())\n    if a < mn:  # Если очередное число меньше переменной mn, то поместим это значение в переменную mn\n        mn = a\nprint(mn)\nprint('dummycode')  # Готово! Минимальное число найдено\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:30,taskuuid: "3ee95094-6a29-4dc4-ba06-f56477b8935d",rightcode:"pass\n",defaultcode:"# Предположим нам надо найти среднее значение среди шести чисел 1 8 17 8 18 3, которые находятся в поле 'Входные данные'.\n\n# Здесь все просто, разделим сумму на количество\nsm = 0\nfor i in range(6):\n    a = int(input())\n    sm = sm + a\nprint(sm / 6)\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:31,taskuuid: "ba5ef8dd-fedd-4ad3-a7b2-6cdf507727f8",rightcode:"pass\n",defaultcode:"# Усложним задачу, найдем среднее значение чисел, которые больше 3.\n\nsm = 0\ncnt = 0  # Введем дополнительную переменную 'cnt' для подсчета таких чисел\nfor i in range(6):\n    a = int(input())\n    if a > 3:\n        sm = sm + a\n        cnt = cnt + 1\nprint(sm / cnt)  # Раздели сумму на подсчитанное количество\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:32,taskuuid: "c5aa28b7-4878-4a2c-94e6-aad54fc90624",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся выполнять поиск числа или строки среди набора значений.\n\n# Предположим нам надо понять есть ли число 8 среди шести уникальных чисел 1 8 17 18 3, которые находятся в поле 'Входные данные'.\nfor i in range(5):  # Будем перебирать все числа\n    a = input()\n    if a == '8':  # если очередное равно 8, то напечатаем результат поиска\n        print('Число 8 найдено')\nprint('dummycode')\n# Обрати внимание, что нам не нужно переводить строку в число, чтобы найти число 8\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "18", "3"],outv:[]},{inv:["1", "8", "17", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:33,taskuuid: "231314a6-f375-48ed-af49-1cfbae6ef71d",rightcode:"pass\n",defaultcode:"# Усложним задачу, выполним поиск числа 10, которого нет в списке, программа должна вывести 'Число 10 не найдено'.\n\n# Задача решается с помощью дополнительной переменной, которую иногда называют флагом. Флагом её называют потому, что поиск с её помощью похож на флаги: есть всего 2 варианта, флаг или поднят, или опущен. В целом это обычная переменная, которая может иметь любое название.\n\nflag = 0  # Флаг опущен\nfor i in range(6):\n    a = input()\n    if a == '10':  # Eсли очередное число равно 10, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n        flag = 1  # Поднимаем флаг\nif flag == 0:  # Если после выполнения цикла переменная все еще равна 0(флаг опущен), это значит, что среди чисел не нашлось 10\n    print('Число 10 не найдено')\nif flag == 1:\n    print('Число 10 найдено')\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:34,taskuuid: "c0734a4d-d2e0-4a3a-a031-266d1cb33f4b",rightcode:"pass\n",defaultcode:"# Выполним поиск числа 8, которое повторяется в списке много раз, программа должна вывести 'Число 8 найдено'\n# Обычным способом это сделать не получится -  программа напечатает строку 'Число 8 найдено' много раз. Задача решается двумя способами:\n\n# Решение с помощью флага\nflag = 0\nfor i in range(6):\n    a = int(\n        input())  # если очередное число равно 8, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n    if a == 8:\n        flag = 1\nif flag == 1:  # Если после выполнения цикла флаг равен 1, это значит, что среди чисел есть число 8\n    print('Число 8 найдено')\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "8", "8"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "8", "8"],outv:[]},{inv:["1", "8", "17", "8", "8", "8"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:35,taskuuid: "fd5866be-2918-4ddc-8fd8-c1c5a03e686e",rightcode:"pass\n",defaultcode:"# Другой способ - это использование новой команды, которая называется break. Команда break позволяет прервать выполнение цикла.\n\n# Попробуй выполнить программу с использованием команды break и без неё\nfor i in range(6):\n    a = int(input())\n    if a == 8:\n        print('Число 8 найдено')\n        break\n",forbiddencode:"pass\n",defaultinput:["1", "8", "17", "8", "8", "8"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "8", "8"],outv:[]},{inv:["1", "8", "17", "8", "8", "8"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"Изучи программу",tasktype:"guide",id:36,taskuuid: "79b1ecd2-bef3-4599-8ae2-be1f29161cb7",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся использовать индексы строк.\n\n# Пусть мы имеем строку\ns = 'Программирование'\n\n# В Питоне есть возможность извлечь из строки отдельный символ.\n# Для этого нужно указать в квадратных скобках номер символа\nsym = s[2]\nprint('Третий символ строки:', sym)\n# Напечатается третий символ, так как нумерация в питоне идет с нуля 0,1,2\n\n# Также в Питоне существует обратная нумерация, она начинается с -1\nsym = s[-1]\nprint('Последний символ строки:', sym)\nsym = s[-2]\nprint('Предпоследний символ строки:', sym)\n\n# Код, который выдаст ошибку, так как указан номер символа, который не существует:\n# print(s[100])\n# print(s[-100])\n\n# Код, который выдаст ошибку, так как строки нельзя изменять:\n# s[1]='A'\n\n# Раскомментируй некоторые строки кода и убедись в этом\nprint('dummycode')\n\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"Изучи программу",tasktype:"guide",id:37,taskuuid: "39a7b535-18aa-43d5-b572-4f4857232bcb",rightcode:"pass\n",defaultcode:"# Мы уже знаем, что для перебора символов в строке можно использовать такой цикл:\ns = 'Кодер'\nfor a in s:\n    print(a)\n\n# Существует второй способ перебора символов - через индексы:\nprint('Перебор через индексы')\nL = len(s)  # Берем длину строки\nfor i in range(L):  # Указываем её в круглых скобках\n    print(s[i])\n\n# Продемонстрируем преимущества данного способа\nprint('Вывод каждого второго символа')\nL = len(s)\nfor i in range(1, L, 2):\n    print(s[i])\n\nprint('Вывод символов парами 0 и 1, 1 и 2 и так далее')\nL = len(s)\nfor i in range(L - 1):\n    print(s[i], s[i + 1])\n# Обрати внимание, что мы используем L-1 повторений цикла в данном примере\n# Убери -1 и увидишь что получится\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"Изучи программу",tasktype:"guide",id:38,taskuuid: "0516745b-c851-42af-949a-c89196fb72e6",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся использовать срезы 🍰 строк.\n\n# Срезы очень похожи на индексы, но позволяют вырезать из строки более одного символа.\ns = 'параллелепипед'\nprint(s)\n# Срез с 1-го по 5-ый символ. Обрати внимание как и в циклах нужно указать число на 1 больше - 6\n# Напомним также, что нумерация идет с нуля\na = s[1:6]\nprint('Срез с 1-го по 5-ый символ:', a)\nprint('Срез с 3-го символа до конца строки:', s[3:])\nprint('Срез с начала строки до 6-го символа:', s[:7])\nprint('Срез с 3-го символа с начала строки до 4 символа, считая с конца строки:', s[3:-4])\nprint('Срез с 3-го символа(считая с конца строки) до конца строки:', s[-3:])\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"Изучи программу",tasktype:"guide",id:39,taskuuid: "dfbd624d-8138-4a6e-9624-c6e2dd0b30cb",rightcode:"pass\n",defaultcode:"# В срезах можно использовать третье число - шаг.\n\ns = 'параллелепипед'\nprint(s)\n# Срез с 1-го по 5-ый символ c шагом 2, то есть питон вырежет 1, 3 и 5 символы\na = s[1:6:2]\nprint('Срез с 1-го по 5-ый символ c шагом 2:', a)\n# Срез с начала до конца с шагом 3, то есть питон вырежет символы 0, 3, 6 и так далее\nprint('Срез с начала до конца c шагом 3:', s[::3])\n# Есть еще вот такая хитрая штука. Выполни программу и посмотри на результат, ты будешь часто использовать такой фокус\nprint('Срез с начала до конца с шагом -1:', s[::-1])\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"Изучи программу",tasktype:"guide",id:40,taskuuid: "8f3131d1-f36a-40dc-84b8-a51ae793d394",rightcode:"pass\n",defaultcode:"# В данной главе мы научимся использовать методы строк.\n\n# Методы - это особые функции, которые пишутся через точку и применяются к тому объекту для которого вызываются.\n# Сложновато звучит, но на примерах станет понятно\n\n# Метод count\ns = 'параллелепипед'\n# Метод count считает количество подстрок в строке. Подстрока - это просто набор символов.\nn = s.count('п')\nprint('Количество букв п в строке', s, 'равно', n)\ns = 'AABBAABB'\nn = s.count('AA')\nprint('Количество подстрок АА в строке', s, 'равно', n)\n\n# Метод replace\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\n# Метод replace заменяет в строке одну подстроку на другую\nprint('Заменили всех червяков на жуков:')\ns = s.replace('Червяк', 'Жук')\nprint(s)\n# Важно! Если написать просто вот так s.replace('Червяк', 'Жук'), замена не будет произведена\n# Нужно именно вот так: s=s.replace('Червяк', 'Жук')\n\n# Можно указать сколько замен нужно сделать\nprint('Заменили одного червяка на жука:')\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук', 1)\nprint(s)\n\nprint('Заменили двух червяков на двух жуков:')\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук', 2)\nprint(s)\n\n# Можно сделать несколько замен одновременно\nprint('Заменили всех червяков на жуков, а комаров - на мух:')\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук').replace('Комар', 'Муха')\nprint(s)\n\n# А еще метод replace можно использовать для удаления символов\ns = '000000011111001010101111'\ns = s.replace('0', '')\nprint(s)\n\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"Изучи программу",tasktype:"guide",id:41,taskuuid: "e841b146-7646-431c-b6ad-7b0ae2e7b256",rightcode:"pass\n",defaultcode:"# Изучим еще несколько полезных методов строк\n\n# Метод find\ns = 'ПАРАЛЛЕЛЕПИПЕД'\n# Метод find находит подстроку в строке и возвращает её индекс\n# Если искать слева направо буква П найдется на 0 месте, поэтому find вернет 0\nn = s.find('П')\nprint('Индекс буквы П если искать слева направо:', n)\n\n# Если икать слева направо буква Л найдется на 5 месте, поэтому find вернет 5\nprint('Индекс буквы Л, если искать слева направо:', s.find('П'))\n\n# Если искать слева направо символы ЛЕП найдутся начиная с 7 индекса, поэтому find вернет 7\nprint('Индекс подстроки ЛЕП, если искать слева направо:', s.find('ЛЕП'))\n\n# А вот сочетания символов ЛЕПА нет в строке поэтому find вернет -1\nprint('Подстроки ЛЕПА нет в слове', s.find('ЛЕПА'))\n\n# Существует также метод rfind, которые делает тоже самое что и find, но поиск осуществляет справа налево\n# Cравни:\nn = s.find('П')\nm = s.rfind('П')\nprint('Индекс буквы П, если искать слева направо:', n)\nprint('Индекс буквы П, если искать справа налево:', m)\n\nn = s.find('ЛЕП')\nm = s.rfind('ЛЕП')\nprint('Индекс подстроки ЛЕП, если искать слева направо:', n)\nprint('Индекс подстроки ЛЕП, если искать справа налево:', m)\nprint('dummycode')\n\n# Как узнать есть ли символ в строке? Теперь у нас есть 2 быстрых способа:\nif s.count('З') == 0:\n    print('Символа З нет в строке')\nif s.find('З') == -1:\n    print('Символа З нет в строке')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"Изучи программу",tasktype:"guide",id:42,taskuuid: "aa5001b3-8988-44f1-864c-1913ed7b1c73",rightcode:"pass\n",defaultcode:"# Метод strip удаляет пробелы в начале и в конце строки:\ns = '      п    д     '\nn = s.strip()\nprint('Пробелы слева и справа удалены:', n)\n\n# Если в скобках указать какие-либо символы, он будет удалять их в начале и в конце строки:\ns = '*****п*****д****'\nprint('Звездочки слева и справа удалены:', s.strip('*'))\n\ns = '*$$****п***$**д**$**$'\nprint('Звездочки и знаки $ слева и справа удалены:', s.strip('*$'))\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"Изучи программу",tasktype:"guide",id:43,taskuuid: "01008026-9929-4402-9324-295d5521aa6e",rightcode:"pass\n",defaultcode:"# Новая тема Сложные условия\n\n# Изучим новую тему на примере решения задач\ns = 'Альфа-Кентавра'\n# Напечатай 'Да' если в строке есть одновременно и буква 'А' и буква 'К'\nn = s.count('А')\nm = s.count('К')\nif n > 0 and m > 0:\n    print('ДА')\n# and объединяет два условия в одно и следит за тем, что оба условия выполнены\n\n# Напечатай Да если в строке есть или буква 'А' или буква 'Ф'\nn = s.count('А')\nm = s.count('Ф')\nif n > 0 or m > 0:\n    print('ДА')\n# or объединяет два условия в одно и следит за тем, что хотя бы одно условие выполнено\n\n# В сложном условии можно писать неограниченное число and и or\n# Напечатай 'Да' если в строке есть или буква 'А' или буква 'Ф' или буква 'М'\nn = s.count('А')\nm = s.count('Ф')\nk = s.count('М')\nif n > 0 or m > 0 or k > 0:\n    print('ДА')\n\n# Можно комбинировать and и or\n# Напечатай Да если в строке есть (буква 'А' или буква 'Ф') и тире 'М'\nn = s.count('А')\nm = s.count('Ф')\nk = s.count('-')\nif (n > 0 or m > 0) and k > 0:\n    print('ДА')\n# Вокруг условия (n > 0 or m > 0) стоят круглые скобки, а всё потому, что если их не поставить Питон сначала проверит выполняется ли условие m > 0 and k > 0\n# Если говорить научным языком, у операции and более высокий приоритет чем у or, как в математике, где у умножения более высокий приоритет, чем у сложения.\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"Изучи программу",tasktype:"guide",id:44,taskuuid: "7a249380-96e0-4bfa-a6b0-b5a3d60b4ea7",rightcode:"pass\n",defaultcode:"# В программировании невероятно часто используется отрицание not\n# Отрицание превращает невыполняющееся условие в выполняющееся и наоборот - превращает выполняющееся условие в невыполняющееся.\na = 18\n\n# Условие выполняется, печатается ДА\nif a > 11:\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Условие не выполняется, печатается НЕТ\nif not a > 11:\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие выполняется, печатается ДА\nif a > 11 and a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие не выполняется, печатается НЕТ. Обрати внимание, что вокруг сложного условия стоят круглые скобки, иначе not применится только к первому условию\nif not (a > 11 and a % 2 == 0):\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие выполняется, печатается ДА\nif a > 100 or a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие не выполняется, печатается НЕТ.\nif a > 11 or not a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"Изучи программу",tasktype:"guide",id:45,taskuuid: "46be8d40-9760-446f-bd29-e40526d9482d",rightcode:"pass\n",defaultcode:"# Предположим в поле 'Входные данные' содержится неопределенное количество строк, то есть мы не знаем их количество.\n# Мы лишь знаем что самая последняя строка равна звездочке *\n# Как считать все строки? Нам поможет новый тип цикла - while.\ns = input()\nwhile s != '*':\n    print(s)\n    s = input()\n# Цикл while выполняется пока выполняется условие, которое идет после while, в нашем примере s != '*'. То есть цикл будет выполняться пока переменная s не равна звездочке.\n",forbiddencode:"pass\n",defaultinput:["Петя", "Ваня", "Саша", "*"],defaultoutput:[],inout: [{inv:["Петя", "Ваня", "Саша", "*"],outv:[]},{inv:["Петя", "Ваня", "Саша", "*"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"Изучи программу",tasktype:"guide",id:46,taskuuid: "cf422246-b44b-4f84-8373-b968ccf838c6",rightcode:"pass\n",defaultcode:"# В цикле while можно использовать сложные условия\ns = input()\nprint('Выполнять цикл пока переменная s не равна звездочке и не равна Саша:')\nwhile s != '*' and s != 'Саша':\n    print(s)\n    s = input()\n\n# Цикл while довольно опасный вид цикла, программа будет выполняться бесконечно, если не выполнилось условия остановки.\n# Если это все таки произошло, просто обнови страницу браузера и программа остановится.\n",forbiddencode:"pass\n",defaultinput:["Петя", "Ваня", "Саша", "*"],defaultoutput:[],inout: [{inv:["Петя", "Ваня", "Саша", "*"],outv:[]},{inv:["Петя", "Ваня", "Саша", "*"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"Изучи программу",tasktype:"guide",id:47,taskuuid: "f0e19954-4cac-4c3e-894b-bc9a7c4f2a2c",rightcode:"pass\n",defaultcode:"# На данный момент мы знаем следующие способы проверки условий >, <, >=, <=, ==, !=\n# Есть еще один способ - in\n\n# Возьмем произвольный набор символов\ns = 'ABCD'\nif 'A' in s:\n    print('A', 'содержится в строке', s)\nelse:\n    print('A', 'не содержится в строке', s)\n# Условие if 'A' in s читается так - если 'A' содержится в s\n\n# Еще пример:\nif 'AA' in s:\n    print('AА', 'содержится в строке', s)\nelse:\n    print('AA', 'не содержится в строке', s)\n\n# Можно применять сложные условия:\nif 'A' in s and 'B' in s:\n    print('A и B', 'содержатся в строке', s)\nelse:\n    print('A и B', 'вместе не содержатся в строке', s)\n# Отметим, что данный способ удобнее, чем использование методов find и count\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Изучи программу",tasktype:"guide",id:48,taskuuid: "0f1957e4-82e2-4967-a15d-63aa388366d3",rightcode:"pass\n",defaultcode:"# На данный момент мы знаем следующие типы данных: целые числа, дробные числа, строки.\n# Изучим новый тип данных - списки.\n\n# Для начала нужно создать новый пустой список a = []\na = []\n\n# Затем его нужно наполнить. Для этого есть специальный метод append\na.append(5)\na.append('Иван')\na.append(0.1)\nprint(a)\n# Напечатанное выглядит вот так [5, 'Иван', 0.1]\n\n# Так что такое список? Список - это тип данных, который позволяет хранить множество значений в одной переменной.\n\n# Как и в строках для получения доступа к элементам используются индексы:\nprint('Первый элемент списка:', a[1])\nprint('Последний элемент списка:', a[-1])\n\n# Напечатаем все значения списка. Это делается аналогично строкам!\n\nprint('Вывод элементов списка способом 1')\nfor el in a:\n    print(el)\n\nprint('Вывод элементов списка способом 2')\n# Функция len работает также как в строках - возвращает длину списка\nL = len(a)\nfor i in range(L):\n    print(a[i])\n\n# Пример. Найдем максимальное значение чисел, которые находятся в поле 'Входные данные'.\n# Сначала добавим все значение в список\na = []\nfor i in range(4):\n    a.append(int(input()))\n# Теперь выполняем поиск так, как мы это делали ранее\nmx = 0\nfor el in a:\n    if el > mx:\n        mx = el\nprint(mx)\n",forbiddencode:"pass\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Изучи программу",tasktype:"guide",id:49,taskuuid: "10635769-b2b9-4e5d-b17b-258df14f91e9",rightcode:"pass\n",defaultcode:"a = []\nfor i in range(4):\n    a.append(int(input()))\n\n# Как и в строках для получения доступа к элементам также используются срезы:\nprint('Срез с 1 по -1 элемент списка:', a[1:-1])\nprint('Срез c начала до конца с шагом -1:', a[::-1])\n\n# Срез можно сохранить в другую переменную и использовать в дальнейшем\nb = a[2::2]\n\n# Настала пора изучить одни из самых полезных функций, которые экономят много времени при программировании\n# Максимальное число в списке\nmx = max(a)\nprint('Максимальный элемент списка:', mx)\n\n# Минимальное число в списке\nprint('Минимальный элемент списка:', min(a))\n\n# Сумма чисел в списке\nprint('Сумма элементов списка:', sum(a))\n",forbiddencode:"pass\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Изучи программу",tasktype:"guide",id:50,taskuuid: "ced65383-057e-4926-a04d-9a6d425f5e2e",rightcode:"pass\n",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками, но у списков есть одно важное преимущество - списки можно редактировать.\n\ns = 'Привет'\n# Следующий код выдаст ошибку, поэтому мы его закомментировали. Строки нельзя изменять!\n# s[0]='п'\n\n# А вот списки можно менять:\ns = ['П', 'р', 'и', 'в', 'е', 'т']\ns[0] = 'п'\nprint('Заглавная буква П заменена на строчную п:', s)\n\n# Рассмотрим следующую задачу. Есть две переменные, поменяем их значения местами, в других языках программирования для этого потребуется третья переменная:\na = 5\nb = 10\nprint('Обмен значениями способ 1:', a, b)\nc = a\na = b\nb = c\nprint('Обмен значениями способ 1:', a, b)\n\n# В питоне есть способ проще!\na = 5\nb = 10\nprint('Обмен значениями способ 2:', a, b)\na, b = b, a\nprint('Обмен значениями способ 2:', a, b)\n\n# Поменяем местами первый и последний элемент списка.\ns = ['П', 'р', 'и', 'в', 'е', 'т']\ns[0], s[-1] = s[-1], s[0]\nprint('Поменяли первый и последний элемент списка местами: ', s)\n\n",forbiddencode:"pass\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Изучи программу",tasktype:"guide",id:51,taskuuid: "c007b7e1-ab23-4210-bf6c-aa9d431481e5",rightcode:"pass\n",defaultcode:"# Изучим новую возможность строк\n\n# Пусть даны некоторые числа разделенные тире\na = '17-6-87-66'\n\n# Эту строку можно разделить на части и поместить в список. Для этого используется метод split. В круглых скобках указывается разделитель\nb = a.split('-')\nprint('Деление строки по символу - :', b)\n\n# Если значения разделены пробелом, то в круглых скобках вообще можно ничего не указывать\na = 'Иван Петр Дарья'\nprint('Деление строки по пробелам:', a.split())\n\n# Рассмотрим задачу. Даны числа, разделенные пробелом, найдем их сумму\na = '1 2 3 4 5'\nb = a.split()\n\n# Такой код выдаст ошибку, так как split создает список из строк, поэтому мы его закомментировали\n# print(sum(b))\n\n# Нужно как-то превратить каждую строку в число. Один из способов таков:\nfor i in range(len(b)):\n    b[i] = int(b[i])  # Заменим очередное значение списка на число\nprint('Сумма чисел:', sum(b))\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Изучи программу",tasktype:"guide",id:52,taskuuid: "0a5eb99b-4209-4e5d-8fcf-bb16b48e35d6",rightcode:"pass\n",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками...хм... где-то мы уже об этом говорили.\n\n# Оператор in используется аналогично\ns = ['П', 'р', 'и', 'в', 'е', 'т']\nif 'р' in s:\n    print('Элемент', 'р', 'есть в списке')\n\n# count тоже работает\nprint('Количество элементов П в списке:', s.count('П'))\n\n# Существует полезный метод join, который объединяет элементы списка в строку.\n# Он применим к спискам, которые содержат только строки.\n# Метод выглядит довольно необычно, постарайся запомнить, он пригодится нам много раз.\nb = '-'.join(s)\nprint('Превратили список в строку:', b)\nb = ''.join(s)\nprint('Превратили список в строку:', b)\n\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"Изучи программу",tasktype:"guide",id:53,taskuuid: "018ff636-2054-427a-9eaa-976aecc91f44",rightcode:"pass\n",defaultcode:"# Новая возможность списков - это сортировка.\n\n# Метод sorted возвращает список отсортированный по возрастанию. Мы будем применять его только к спискам чисел.\na = [1, 1, 2, 3, 4, 30, 20, 2, 3, 4]\nb = sorted(a)\nprint(b)\n\n# Для получения отсортированного по убыванию списка развернем его с помощью среза:\nb = b[::-1]\nprint(b)\n",forbiddencode:"pass\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}}]