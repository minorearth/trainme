export const testsall = [{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Первая команда или по-другому функция, которую мы изучим - это print.\n# Функция print выводит данные в поле Выходные данные\nprint('Я знаю команду print')\n\n# Нажми кнопку 'Выполнить' и ты увидишь результат работы программы в поле Выходные данные.\n# Проведи эксперименты - удали некоторые части строки 'Я знаю команду print' или кода и посмотри, будет ли выполняться код и что он будет выводить\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Исправь программу так, чтобы она выводила строчку 'Я знаю команду print'",tasktype:"task",id:2,rightcode:"# Нужно просто убрать частицу 'не' из предложения вместе с пробелом\nprint('Я знаю команду print')",defaultcode:"print('Я не знаю команду print')\n# После исправления программы проверь все ли ты сделал правильно и нажми кнопку 'Выполнить'\n# Если данные в поле 'Выходные данные' равны данным в поле 'Ожидаемый результат', то нажми кнопку 'Проверить'",defaultinput:[],defaultoutput:["Я знаю команду print"],inout: [{inv:[],outv:["Я знаю команду print"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print"],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:3,rightcode:"pass",defaultcode:"# Ты конечно заметил, что и в прошлой программе, и в этой - перед некоторыми строками стоит решетка - #.\n# Такие строки называются 'Комментариями' и не учитываются при выполнении программы.\n# Любую строку кода можно исключить из выполнения программы, если поставить перед ней #.\n# Это называется по другому - Закомментировать код.\n\n# Данная программа выводит четыре строки, а нужно одну. Закомментируй любые 3 строки программы и выполни программу\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Раскомментируй код и исправь программу так, чтобы она выводила строчку 'Я нашел ошибку'",tasktype:"task",id:4,rightcode:"# Нужно просто добавить одинарную кавычку ' после слова 'ошибку'\nprint('Я нашел ошибку')",defaultcode:"# print('Я нашел ошибку)",defaultinput:[],defaultoutput:["Я нашел ошибку"],inout: [{inv:[],outv:["Я нашел ошибку"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print"],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:5,rightcode:"pass",defaultcode:"# Команда print может печатать несколько значений, они указываются через запятую\n# Напечатанные значения будут разделены одним пробелом\n\n# Проведи эксперимент, добавь несколько новых значений через запятую\nprint('1', '2', '3')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print"],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Измени программу, чтобы она печатала 1 2 3 4 5",tasktype:"task",id:6,rightcode:"print('1', '2', '3', '4', '5')",defaultcode:"print('1', '2', '3')",defaultinput:[],defaultoutput:["1 2 3 4 5"],inout: [{inv:[],outv:["1 2 3 4 5"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print"],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:7,rightcode:"pass",defaultcode:"# Пробел - это тоже символ и учитывается при проверке заданий!\n\n# Этот код печатает 4 пробела между цифрами и еще 4 пробела в конце\nprint('1   ', '   2   ', '   3', '   ')\n\n# Пробелы невидимы в поле 'Выходные данные', из-за этого можно допустить ошибку при выполнении заданий. Чтобы увидеть пробелы, нужно выделить весь текст в поле 'Выходные данные'.\n# Проведи эксперимент - выдели весь текст в окне 'Выходные данные' и ты увидишь пробелы",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"4680f00b-b586-413c-890a-9669b4b7b1c3",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Напиши программу, чтобы она печатала '1  2  3'.  Между цифрами должно быть по 2 пробела",tasktype:"task",id:8,rightcode:"print('1 ', '2 ', '3')",defaultcode:"",defaultinput:[],defaultoutput:["1  2  3"],inout: [{inv:[],outv:["1  2  3"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print"],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Научимся использовать переменные.\n\n# Посмотри на этот код:\nprint('Этот код не использует переменные')\nprint('Привет, Иван!')\nprint('Привет, Иван!')\n\n# Теперь представь, что мы хотим вместо имени Иван напечатать Ваня.\n# Придется в двух местах менять код. Проще сделать так:\nprint('Этот код использует переменные')\na = 'Привет, Иван!'\nprint(a)\nprint(a)\n\n# a - это переменная. Её название можно изменить.",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Измени  название переменной с 'a' на 'name' и измени программу так, чтобы она печатала две одинаковые строки 'Привет, Ваня!'",tasktype:"task",id:2,rightcode:"name = 'Привет, Ваня!'\nprint(name)\nprint(name)",defaultcode:"a = 'Привет, Иван!'\nprint(a)",defaultinput:[],defaultoutput:["Привет, Ваня!", "Привет, Ваня!"],inout: [{inv:[],outv:["Привет, Ваня!", "Привет, Ваня!"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "name"],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"1) Измени программу, чтобы она печатала 2 строчки\n'Привет, Ваня!'\n'Пока, Иван!'.\n\n2) Имена должны храниться в двух переменных: name1, name2",tasktype:"task",id:3,rightcode:"name1 = 'Ваня'\nname2 = 'Иван'\nprint('Привет,', name1)\nprint('Пока,', name2)",defaultcode:"print('Привет, Ваня')\nprint('Пока, Иван')",defaultinput:[],defaultoutput:["Привет, Ваня", "Пока, Иван"],inout: [{inv:[],outv:["Привет, Ваня", "Пока, Иван"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["name1", "name2"],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"1) Измени программу так, чтобы она печатала 2 строчки \n\n'Привет, Ваня!'\n\n'Пока, Иван!'.\n\n2) Имена должны храниться в двух переменных name1, name2. Слова 'Привет' и 'Пока' также должны храниться в двух переменных greet1 и greet2",tasktype:"task",id:4,rightcode:"greet1 = 'Привет,'\ngreet2 = 'Пока,'\nname1 = 'Ваня'\nname2 = 'Иван'\nprint(greet1, name1)\nprint(greet2, name2)",defaultcode:"print('Привет, Ваня')\nprint('Пока, Иван')",defaultinput:[],defaultoutput:["Привет, Ваня", "Пока, Иван"],inout: [{inv:[],outv:["Привет, Ваня", "Пока, Иван"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["name1", "name2", "greet1", "greet2"],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Изучи программу",tasktype:"guide",id:5,rightcode:"pass",defaultcode:"# Предположим мы имеем такой код:\ninduct = 'Привет'\nname = 'Ваня'\nprint(induct, ',', name)\n\n# Он печатает 'Привет , Ваня'. Как убрать лишний пробел перед запятой?\n\n# Вот так, просто сложим переменную и запятую\nprint(induct + ',', name)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Напиши программу, чтобы она печатала 'Привет, Ваня!'(с восклицательным знаком) \nИмя должно храниться в переменной name. Слово 'Привет' также должно храниться в переменной 'greet1' и 'greet2'",tasktype:"task",id:6,rightcode:"induct = 'Привет'\nname = 'Ваня'\nprint(induct + ',', name + '!')",defaultcode:"",defaultinput:[],defaultoutput:["Привет, Ваня!"],inout: [{inv:[],outv:["Привет, Ваня!"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["name", "induct"],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Обрати внимание, что под текстом задачи есть поле 'Входные данные'. Программа может брать данные из этого поля и делать с ними что-либо.\n\n# Функция input() считывает из поля 'Входные данные' одну строку текста. После этого мы помещаем ее в переменную d и печатаем\nd = input()\nprint(d)",defaultinput:["Сейчас мы загрузим эту строку в программу"],defaultoutput:[],inout: [{inv:["Сейчас мы загрузим эту строку в программу"],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Измени программу, чтобы она добавила дефисы слева и справа от строки, вот так:\n'-Сейчас мы загрузим эти данные в программу-'",tasktype:"task",id:2,rightcode:"d = input()\nprint('-' + d + '-')",defaultcode:"d = input()\nprint(d)",defaultinput:["Сейчас мы загрузим эти данные в программу"],defaultoutput:["-Сейчас мы загрузим эти данные в программу-"],inout: [{inv:["Проверка"],outv:["-Проверка-"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "+", "-"],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"В поле 'Входные данные' содержится слово 'Победа'. Напиши программу, которая печатает три раза подряд слово:\n Победа! Победа! Победа! \n\nМежду словами нужен пробел.",tasktype:"task",id:3,rightcode:"a = input()\nprint(a, a, a)",defaultcode:"# Напиши программу с помощью функции input()",defaultinput:["Победа!"],defaultoutput:["Победа! Победа! Победа!"],inout: [{inv:["Проверка"],outv:["Проверка Проверка Проверка"]}],restrictions: {maxlines:2,forbidden:[],forbiddenRe:[],musthave:["print", "input"],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Изучи программу",tasktype:"guide",id:4,rightcode:"pass",defaultcode:"# Что делать если нужно считать 2 строки из поля 'Входные данные'?\n# Для считывания второй строки вызови команду input второй раз:\na = input()\nprint('Это первая строка:', a)\nb = input()\nprint('Это вторая строка:', b)",defaultinput:["Всем привет!", "Меня зовут", "Иван"],defaultoutput:[],inout: [{inv:["Всем привет!", "Меня зовут", "Иван"],outv:[]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Измени программу так, чтобы она считывала третью строку из поля 'Входные данные' и выводила ее вместе с двумя другими, как показано в поле 'Ожидаемый результат'",tasktype:"task",id:5,rightcode:"a = input()\nprint(a)\nb = input()\nprint(b)\nc = input()\nprint(c)",defaultcode:"a = input()\nprint(a)\nb = input()\nprint(b)",defaultinput:["Всем привет!", "Меня зовут", "Иван"],defaultoutput:["Всем привет!", "Меня зовут", "Иван"],inout: [{inv:["Всем привет!", "Меня зовут", "Ваня"],outv:["Всем привет!", "Меня зовут", "Ваня"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input"],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Считай 2 строки из поля 'Входные данные'. Сложи их вместе без пробелов и напечатай в виде одной строки, как показано в поле 'Ожидаемый результат'",tasktype:"task",id:6,rightcode:"a = input()\nb = input()\nprint(a + b)",defaultcode:"",defaultinput:["Всем при", "вет! Меня зовут Иван"],defaultoutput:["Всем привет! Меня зовут Иван"],inout: [{inv:["Всем по", "ка! Меня зовут Ива"],outv:["Всем пока! Меня зовут Ива"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input"],musthaveRe:[],}},{chapterid:"53945ea5-7a89-44eb-b43f-03de6bef8390",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Считай 2 строки из поля 'Входные данные'. Добавь к каждой строке восклицательный знак без пробела и напечатай их",tasktype:"task",id:7,rightcode:"a = input()\nb = input()\nprint(a, b + '!')  # Еще можно вот так - print(a+' '+b+'!')",defaultcode:"",defaultinput:["Всем привет!", "Меня зовут Иван"],defaultoutput:["Всем привет! Меня зовут Иван!"],inout: [{inv:["Всем привет!", "Меня зовут Иван"],outv:["Всем привет! Меня зовут Иван!"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input"],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# В этой главе мы научимся работать с числами.\n\n# Сначала напечатаем несколько чисел\nprint(1, 2, 3, 4)\n\n# Чем числа отличаются от строк? Они пишутся без кавычек.\n\n# Мы можем печатать одновременно и строки и числа. Вот так:\nprint(1, 2, 3, 4, '1', '2', '-это  числа')\n\n# Обрати внимание, в поле 'Выходные данные' невозможно понять что мы напечатали - число или строку, ведь кавычки исчезают при печати.\n\n# Если мы складываем числа, то выводится их сумма, если мы складываем строки, то они объединяются\nprint('Результат сложения чисел:', 1 + 4)\nprint('Результат сложения строк:', '1' + '4')\nprint('1 + 5 =', 1 + 5)\n\n# К числу нельзя прибавить строку, питон выдаст ошибку.\n\n# Раскомментируй строку ниже и попробуй выполнить программу - будет ошибка:\n# print(1+'1')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Исправь программу, чтобы она печатала '3 + 5 = 8'. Сумма должна вычисляться с помощью знака + ",tasktype:"task",id:2,rightcode:"print('3 + 5 =', 3 + 5)",defaultcode:"print('1 + 5 =', 1 + 5)",defaultinput:[],defaultoutput:["3 + 5 = 8"],inout: [{inv:[],outv:["3 + 5 = 8"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "+", ","],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:3,rightcode:"pass",defaultcode:"# В поле 'Входные данные' ты видишь число 5, давай введем его в программу и вычтем из него 2\na = input()\nprint(a - 2)\n# Возникла ошибка! А все потому, что всё, что содержитсяв поле 'Входные данные' является строками, а из строки нельзя вычесть число.\n\n# Что же делать?\n\n# Новая команда int(), которую мы изучим позволяет превратить строку в число.\n# (Закомментируй или удали предыдущий код, чтобы ошибка не возникала.)\na = input()\nb = int(a)\nprint(b - 2)\n\n# Теперь все получилось!\n\n# Можно сократить код, написав так:\na = int(input())\nprint(a - 2)\n\n# В программировании говорят - Мы обернули функцию input в функцию int\n\n# Можно еще короче:\nprint(int(input()) - 2)",defaultinput:["5", "6", "7"],defaultoutput:[],inout: [{inv:["5", "6", "7"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Измени программу так, чтобы она выводила строку '5 - 2 = 3'. Число 3 должно вычисляться с использованием знака минус '-'. Значения 5 и 2 должны браться из поля 'Входные данные'",tasktype:"task",id:4,rightcode:"a = int(input())\nprint('5 - 2 =', a - 2)",defaultcode:"print(5 - 2)",defaultinput:["5"],defaultoutput:["5 - 2 = 3"],inout: [{inv:["6"],outv:["5 - 2 = 4"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "-", ","],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Напиши программу, которая считывает два числа из поля 'Входные данные' и складывает их. Сумму нужно напечатать.",tasktype:"task",id:5,rightcode:"a = int(input())\nb = int(input())\nprint(a + b)",defaultcode:"",defaultinput:["5", "2"],defaultoutput:["7"],inout: [{inv:["5", "3"],outv:["8"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "+"],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Напиши программу, которая считывает два числа из поля Входные данные и находит их разность. Разность нужно напечатать. Программа должна состоять из одной строчки кода",tasktype:"task",id:6,rightcode:"print(int(input()) - int(input()))",defaultcode:"",defaultinput:["5", "2"],defaultoutput:["3"],inout: [{inv:["5", "3"],outv:["2"]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print", "input", "-"],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Напиши программу, которая считывает два числа из поля 'Входные данные', вычитает из первого второе. Разность нужно напечатать, как показано в поле 'Ожидаемый результат'",tasktype:"task",id:7,rightcode:"a = int(input())\nb = int(input())\nprint('Разность:', a - b)",defaultcode:"",defaultinput:["5", "2"],defaultoutput:["Разность: 3"],inout: [{inv:["5", "3"],outv:["Разность: 2"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "-"],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:8,rightcode:"pass",defaultcode:"# В предыдущей задаче в строке 'Разность: 5' стоит пробел после двоеточия, так как при печати мы использовали запятую.\n# Что если не требуется печатать пробел? '+' - не сработает, так как к строке нельзя прибавить число\n\n# Данный код выдаст ошибку:\na = int(input())\nb = int(input())\nd = a - b\nprint('Разность:' + d)\n\n# Нам поможет команда str! Она превращает число в строку!\n# (Закомментируй или удали предыдущую строку кода, чтобы ошибка не возникала)\nc = str(d)\nprint('Разность:' + c)\n\n# Можно записать короче:\nc = str(a - b)\nprint('Разность:' + c)\n\n# Еще короче:\nprint('Разность:' + str(a - b))",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "3"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Напиши программу, которая считывает два числа 5 и 2 из поля 'Входные данные', вычитает из первого второе. Разность нужно напечатать. Пробелов быть не должно! Все числа для формирования строки нужно брать из переменных",tasktype:"task",id:9,rightcode:"a = int(input())\nb = int(input())\nprint(str(a) + '-' + str(b) + '=' + str(a - b))",defaultcode:"",defaultinput:["5", "2"],defaultoutput:["5-2=3"],inout: [{inv:["5", "3"],outv:["5-3=2"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "str", "-"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# В этой главе мы узнаем новые математические команды:\n# *  - умножение\n# /  - деление\n# ** - возведение в степень\n\na = int(input())\nb = int(input())\nprint('Произведение', str(a) + '*' + str(b) + '=' + str(a * b))\nprint('Частное', str(a) + '/' + str(b) + '=' + str(a / b))\nprint(str(a) + ' в степени ' + str(b) + '=' + str(a / b))\n\n# Как и в обычной математике можно использовать скобки:\nprint('(5 - 2) * 2 =', (a - b) * b)",defaultinput:["5", "2", "2"],defaultoutput:[],inout: [{inv:["5", "3", "2"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"В поле 'Входные данные' содержится 3 числа. Измени программу так, чтобы она печатала 'Произведение 5*2*2=20'. Все числа для формирования строки нужно брать из переменных.",tasktype:"task",id:2,rightcode:"a = int(input())\nb = int(input())\nc = int(input())\nprint('Произведение', str(a) + '*' + str(b) + '*' + str(c) + '=' + str(a * b * c))",defaultcode:"print('Произведение', str(a) + '*' + str(b) + '=' + str(a * b))",defaultinput:["5", "2", "2"],defaultoutput:["Произведение 5*2*2=20"],inout: [{inv:["5", "3", "2"],outv:["Произведение 5*3*2=30"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "str", "*"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Напиши программу, которая печатает строку '(5-2)*3=9' Все числа для формирования строки нужно брать из переменных. Используй скобки ( )",tasktype:"task",id:3,rightcode:"a = int(input())\nb = int(input())\nc = int(input())\nprint('(' + str(a) + '-' + str(b) + ')*' + str(c) + '=' + str((a - b) * c))",defaultcode:"",defaultinput:["5", "2", "3"],defaultoutput:["(5-2)*3=9"],inout: [{inv:["5", "3", "2"],outv:["(5-3)*2=4"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "str", "*", ")", "("],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"В поле 'Входные данные' содержится 4 числа. Вычти из первого - второе, а из третьего - четвертое. Результаты перемножь и напечатай. Используй скобки",tasktype:"task",id:4,rightcode:"a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\nprint((a - b) * (c - d))",defaultcode:"",defaultinput:["5", "2", "3", "1"],defaultoutput:["6"],inout: [{inv:["5", "3", "2", "1"],outv:["2"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "(", ")", "*", "-"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Изучи программу",tasktype:"guide",id:5,rightcode:"pass",defaultcode:"# Две новых операции которые мы пройдем:\n# % - остаток от деления\n# // - целочисленное деление (деление нацело)\n\n# Вот как работают операции на конкретных примерах:\n# 5 // 5 = 1     5 % 5 = 0\n# 6 // 5 = 1     6 % 5 = 1\n# 7 // 5 = 1     7 % 5 = 2\n# 8 // 5 = 1     8 % 5 = 3\n# 9 // 5 = 1     9 % 5 = 4\n# 10// 5 = 2     10% 5 = 0\n# 11// 5 = 2     11% 5 = 1\n\n# Поэкспериментируй с данными операциями самостоятельно\nprint(10 // 3)\nprint(10 % 3)",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "3"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"В поле 'Входные данные' содержится 2 числа. Раздели первое на второе нацело // и найди остаток % от деления первого на второе. Результат напечатай в виде двух строк.",tasktype:"task",id:6,rightcode:"a = int(input())\nb = int(input())\nprint(a // b)\nprint(a % b)",defaultcode:"",defaultinput:["5", "2"],defaultoutput:["2", "1"],inout: [{inv:["5", "3"],outv:["1", "2"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "//", "%"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Возраст Вани 640 дней. Вычисли сколько полных лет Ване и сколько дней прошло с его последнего дня рождения. Считаем что в году всегда 365 дней. Количество дней содержитсяв поле 'Входные данные'. Используй  операции % и //. Ответ напечатай в виде двух строк",tasktype:"task",id:7,rightcode:"a = int(input())\nprint(a // 365)\nprint(a % 365)",defaultcode:"",defaultinput:["640"],defaultoutput:["1", "275"],inout: [{inv:["1590"],outv:["4", "130"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "//", "%"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Возраст Маши 1590 дней. Вычисли сколько дней осталось до дня рождения Маши. Считаем что в году всегда 365 дней. Количество дней содержится в поле 'Входные данные'. Ответ напечатай",tasktype:"task",id:8,rightcode:"a = int(input())\nprint(365 - a % 365)",defaultcode:"",defaultinput:["1590"],defaultoutput:["235"],inout: [{inv:["640"],outv:["90"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "%"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Длина палки 240 см. Рассчитай сколько миллиметров палки нужно отпилить, чтобы получить ровно 2 метра. Длину палки считай из поля 'Входные данные', результат напечатай",tasktype:"task",id:9,rightcode:"a = int(input())\nprint(a % 100 * 10)",defaultcode:"",defaultinput:["240"],defaultoutput:["400"],inout: [{inv:["630"],outv:["300"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "%"],musthaveRe:[],}},{chapterid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"В поле 'Входные данные' содержится длина ребра куба. Найди объем куба. Используй возведение в степень",tasktype:"task",id:10,rightcode:"a = int(input())\nprint(a ** 3)",defaultcode:"",defaultinput:["10"],defaultoutput:["1000"],inout: [{inv:["3"],outv:["27"]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "**"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Что если некоторую строку нужно повторить несколько раз🦕?\nprint('Победа!' + 'Победа!' + 'Победа!' + 'Победа!')\n# Не очень удобно, особенно, если что-то нужно повторить раз 100!\n\n# Лучше сделать вот так:\nprint('Победа!' * 4)\n\n# Получается, в Питоне можно умножить строку на число и она повторится!",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Считай строку из поля 'Входные данные'. Повтори ее 3 раза. Используй умножение строки на число.",tasktype:"task",id:2,rightcode:"a = input()\nprint(a * 3)",defaultcode:"",defaultinput:["Победа!"],defaultoutput:["Победа!Победа!Победа!"],inout: [{inv:["Проверка"],outv:["ПроверкаПроверкаПроверка"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "*"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Считай строку из поля 'Входные данные'. Добавь к ней восклицательный знак и пробел. Повтори получившуюся строку 3 раза",tasktype:"task",id:3,rightcode:"a = input()\nb = a + '! '\nprint(b * 3)",defaultcode:"",defaultinput:["Победа"],defaultoutput:["Победа! Победа! Победа! "],inout: [{inv:["Проверка"],outv:["Проверка! Проверка! Проверка! "]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "*"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Изучи программу",tasktype:"guide",id:4,rightcode:"pass",defaultcode:"# Новая функция, которую мы узнаем - это функция len. Функция позволяет вычислить длину строки.\ns = 'Сколько в этом предложении букв? Функция len позволит подсчитать их'\nprint('В предложении:', len(s), 'букв')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Подсчитай сколько полных десятков букв в первой строке поля 'Входные данные'. Используй целочисленное деление.",tasktype:"task",id:5,rightcode:"a = input()\nprint(len(a) // 10)",defaultcode:"",defaultinput:["В  этом предложении  много  букв, функция len позволит подсчитать их"],defaultoutput:["6"],inout: [{inv:["123456789123"],outv:["1"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "len", "//"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"В поле 'Входные данные' содержится 1 слово. Повтори слово столько раз сколько в нем букв. Результат напечатай",tasktype:"task",id:6,rightcode:"a = input()\nprint(a * len(a))",defaultcode:"",defaultinput:["Мир"],defaultoutput:["МирМирМир"],inout: [{inv:["По"],outv:["ПоПо"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "len"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"В поле 'Входные данные' содержится 1 слово. Вычисли остаток от деления длины слова на 5, пусть остаток равен N. Повтори слово N раз.",tasktype:"task",id:7,rightcode:"a = input()\nprint(a * (len(a) % 5))",defaultcode:"",defaultinput:["Мир"],defaultoutput:["МирМирМир"],inout: [{inv:["ПоПоПо"],outv:["ПоПоПо"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "len", "%"],musthaveRe:[],}},{chapterid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"В поле 'Входные данные' содержится 1 число. Возведи число в квадрат и подсчитай количество знаков в получившемся числе",tasktype:"task",id:8,rightcode:"a = int(input())\nb = str(a ** 2)\nprint(len(b))",defaultcode:"",defaultinput:["10"],defaultoutput:["3"],inout: [{inv:["100"],outv:["5"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "len", "str", "int", "**"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"Нарисуй квадрат 3 на 3, состоящий из знаков $. Для этого нужно напечатать 3 строки. Используй умножение строки на число",tasktype:"task",id:1,rightcode:"print('$' * 3)\nprint('$' * 3)\nprint('$' * 3)",defaultcode:"",defaultinput:[""],defaultoutput:["$$$", "$$$", "$$$"],inout: [{inv:[""],outv:["$$$", "$$$", "$$$"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "*"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"Нарисуй квадрат 4 на 4, состоящий из букв V. Внутри квадрат должен быть заполнен буквами X. Используй умножение строки на число",tasktype:"task",id:2,rightcode:"print('V' * 4)\nprint('VXXV')\nprint('VXXV')\nprint('V' * 4)",defaultcode:"",defaultinput:[""],defaultoutput:["VVVV", "VXXV", "VXXV", "VVVV"],inout: [{inv:[""],outv:["VVVV", "VXXV", "VXXV", "VVVV"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "*"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"Канистра наполнена соком, в поле 'Входные данные' содержится объем канистры в литрах. В одну банку🫙 помещается 4 литра сока. Сколько полных банок можно наполнить из канистры? Сколько останется? Выведи эти два значения в виде двух строк, дополни значения текстом как показано в поле Ожидаемый результат",tasktype:"task",id:3,rightcode:"a = int(input())\nprint('Будет заполнено', a // 4, 'банки')\nprint('Останется', a % 4, 'литра')",defaultcode:"",defaultinput:["14"],defaultoutput:["Будет заполнено 3 банки", "Останется 2 литра"],inout: [{inv:["21"],outv:["Будет заполнено 5 банки", "Останется 1 литра"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "%", "//", "int"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"На 1 страницу  помещается M символов. Сколько полных строк текста можно поместить на страницу? Число M содержится в первой строке поля 'Входные данные'. Во второй строке поля 'Входные данные' содержится строка текста. Обрати внимание на отсутствие пробела после двоеточия",tasktype:"task",id:4,rightcode:"a = int(input())\nb = input()\nprint('Поместится:' + str(a // len(b)), 'строк')",defaultcode:"",defaultinput:["150", "Мы на верном пути!"],defaultoutput:["Поместится:8 строк"],inout: [{inv:["150", "Проверка!"],outv:["Поместится:16 строк"]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "str", "//", "int", "len"],musthaveRe:[],}},{chapterid:"384a3025-c78d-4f65-8b15-88e56500ee11",chapterparentid:"384a3025-c78d-4f65-8b15-88e56500ee11",task:"В поле 'Входные данные' содержится 1 число. Возведи число в квадрат. Результат распечатай.",tasktype:"task",id:5,rightcode:"a = int(input())\nprint(a * a)",defaultcode:"",defaultinput:["3"],defaultoutput:["9"],inout: [{inv:["4"],outv:["16"]}],restrictions: {maxlines:3,forbidden:["**"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Дана переменная N:\nN = 10\n\n# Взглянем на следующую строку кода:\nif N == 10:\n    print('N равно 10')\n# Запусти код. Программа напечатает 'N равно 10'\n\n# Теперь измени N на другое число и запусти заново. Программа ничего не напечатает.\n\n# if - это условный оператор, если выполняется условие N==10, то выполняется код после двоеточия\n\n# Обрати внимание на следующие особенности:\n# 1) После условия всегда стоит двоеточие\n# 2) Перед командой print стоит отступ\n# 3) Вместо одного = стоит два ==. В чём разница?\n# =  - для того чтобы поместить значение в переменную,\n# == - для сравнения значений.",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Измени программу так, чтобы значение переменной N бралось из поля 'Входные данные'",tasktype:"task",id:2,rightcode:"N = int(input())\nif N == 10:\n    print('N равно 10')",defaultcode:"if N == 10:\n    print('N равно 10')",defaultinput:["10"],defaultoutput:["N равно 10"],inout: [{inv:["10"],outv:["N равно 10"]},{inv:["15"],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "if"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится строка текста. Напиши программу, которая выводит остаток от деления длины строки на 5, если длина строки равна 36",tasktype:"task",id:3,rightcode:"line = input()\nln = len(line)\nif ln == 36:\n    print(ln % 5)",defaultcode:"",defaultinput:["Питон - лучший язык программирования"],defaultoutput:["1"],inout: [{inv:["Питон - лучший язык программированияя"],outv:[]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "if", "len"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:4,rightcode:"pass",defaultcode:"# Дана переменная N:\nN = 10\n\n# Взглянем на следующую строку кода:\nif N == 10:\n    print('N равно 10')\n\n# В случае если N не равно 10, программа ничего не выводит, это не очень хорошо.\n# В случае если условие не выполняется мы будем выводить 'N не равно 10'\n\n# Это делается так:\nif N == 10:\n    print('N равно 10')\nelse:\n    print('N не равно 10')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:5,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится число. Измени программу так: если число делится без остатка на 5, то напечатай 'число делится на 5', в противном случае - 'число не делится на 5'.",tasktype:"task",id:5,rightcode:"N = int(input())\nif N % 5 == 0:\n    print('число делится на 5')\nelse:\n    print('число не делится на 5')",defaultcode:"if N == 10:\n    print('N равно 10')\nelse:\n    print('N не равно 10')",defaultinput:["10"],defaultoutput:["число делится на 5"],inout: [{inv:["11"],outv:["число не делится на 5"]},{inv:["15"],outv:["число делится на 5"]}],restrictions: {maxlines:5,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "if", "%", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 2 числа. Если первое делится на второе без остатка, то напечатай 'делится', в противном случае напечатай - 'не делится'",tasktype:"task",id:6,rightcode:"N = int(input())\nM = int(input())\nif N % M == 0:\n    print('делится')\nelse:\n    print('не делится')",defaultcode:"",defaultinput:["10", "2"],defaultoutput:["делится"],inout: [{inv:["11", "2"],outv:["не делится"]},{inv:["15", "3"],outv:["делится"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "if", "%", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 1 число. Это может быть двузначное или трехзначное число. Определи какое это число и напечатай одно из двух слов 'двузначное' или 'трехзначное'",tasktype:"task",id:7,rightcode:"N = input()\nif len(N) == 2:\n    print('двузначное')\nelse:\n    print('трехзначное')",defaultcode:"",defaultinput:["10"],defaultoutput:["двузначное"],inout: [{inv:["111"],outv:["трехзначное"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "len", "if", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 2 строки. Напечатай 'равны' если строки одинаковые(равны), в противном случае напечатай 'не равны'",tasktype:"task",id:8,rightcode:"line1 = input()\nline2 = input()\nif line1 == line2:\n    print('равны')\nelse:\n    print('не равны')",defaultcode:"",defaultinput:["Python", "Python"],defaultoutput:["равны"],inout: [{inv:["111", "111"],outv:["равны"]},{inv:["111b", "111"],outv:["не равны"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "if", "==", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:9,rightcode:"pass",defaultcode:"# Помимо равенства == в условии можно использовать знаки неравенства:\n# >  больше\n# >= больше или равно\n# <  меньше\n# <= меньше или равно\n# != не равно\n\nN = 100\nif N > 100:\n    print('больше 100')\nelse:\n    print('меньше либо равно 100')\nif N != 100:\n    print('не равно 100')\nelse:\n    print('равно 100')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 2 числа. Если первое число больше второго напечатай 'A>B' в противном случае напечатай 'A<=B'",tasktype:"task",id:10,rightcode:"N = int(input())\nM = int(input())\nif N > M:\n    print('A>B')\nelse:\n    print('A<=B')",defaultcode:"",defaultinput:["5", "2"],defaultoutput:["A>B"],inout: [{inv:["2", "11"],outv:["A<=B"]},{inv:["15", "3"],outv:["A>B"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "if", "else"],musthaveRe:[],}},{chapterid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"В поле 'Входные данные' содержится 2 строки. Если длина первой строки равна длине второй напечатай 'строки одинаковой длины', в противном случае напечатай 'строки разной длины'.  Используй знак неравенства !=",tasktype:"task",id:11,rightcode:"N = len(input())\nM = len(input())\nif N != M:\n    print('строки разной длины')\nelse:\n    print('строки одинаковой длины')",defaultcode:"",defaultinput:["Иван", "Петр"],defaultoutput:["строки одинаковой длины"],inout: [{inv:["Иван", "Петр"],outv:["строки одинаковой длины"]},{inv:["Диван", "Маяк"],outv:["строки разной длины"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "len", "if", "else", "!="],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Научимся извлекать цифры из числа.\n# Возьмем число 783, как извлечь все цифры числа?\n\n# Начнем с последней цифры. Последняя цифра - это остаток от деления числа на 10\nN = 783\nprint('Последняя цифра:', N % 10)\n\n# Первая цифра числа-это целочисленное деление на 100\nprint('Первая цифра', N // 100)\n\n# Осталось извлечь цифру в середине. Это можно сделать двумя способами:\n\n# Способ 1.\n# Как уже стало понятно мы можем извлечь первую и последнюю цифру числа.\n# Разделим число нацело на 10, это позволит отбросить последнюю цифру числа и поместим результат в переменную М\nM = N // 10\nprint('Промежуточное число', M)\n# Теперь легко получим последнюю цифру\nprint('Средняя цифра', M % 10)\n\n# Способ 2.\n# Найдем остаток от деления числа на 100\nM = N % 100\nprint('Промежуточное число', M)\n\n# А затем разделим нацело на 10\nprint('Средняя цифра', M // 10)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится число из четырех цифр. Напечатай все цифры числа по очереди от последней до первой",tasktype:"task",id:2,rightcode:"N = int(input())\nprint(N % 10)\nM = N // 10\nprint(M % 10)\nM = M // 10\nprint(M % 10)\nM = M // 10\nprint(M % 10)",defaultcode:"",defaultinput:["1234"],defaultoutput:["4", "3", "2", "1"],inout: [{inv:["1234"],outv:["4", "3", "2", "1"]},{inv:["6598"],outv:["8", "9", "5", "6"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "%", "//"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится число. Если две последние цифры числа равны 12 напечатай 'Оканчивается на 12', в противном  случае напечатай Не оканчивается на 12",tasktype:"task",id:3,rightcode:"N = int(input())\nM = N % 100\nif M == 12:\n    print('Оканчивается на 12')\nelse:\n    print('Не оканчивается на 12')",defaultcode:"",defaultinput:["112"],defaultoutput:["Оканчивается на 12"],inout: [{inv:["112"],outv:["Оканчивается на 12"]},{inv:["1122114"],outv:["Не оканчивается на 12"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "if", "%", "else"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится двухзначное число, запиши его наоборот. Используй функцию str.",tasktype:"task",id:4,rightcode:"N = int(input())\nA = N % 10\nB = N // 10\nprint(str(A) + str(B))",defaultcode:"",defaultinput:["12"],defaultoutput:["21"],inout: [{inv:["12"],outv:["21"]},{inv:["18"],outv:["81"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "%", "//", "str"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится количество нулей. Напечатай число по следующему шаблону '1'+указанное количество нулей",tasktype:"task",id:5,rightcode:"N = int(input())\nA = '1' + '0' * N\nprint(A)",defaultcode:"",defaultinput:["3"],defaultoutput:["1000"],inout: [{inv:["3"],outv:["1000"]},{inv:["4"],outv:["10000"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "*"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится двузначное число. Пусть первая цифра А, а вторая B. Возведи А в степень B",tasktype:"task",id:6,rightcode:"N = int(input())\nB = N % 10\nA = N // 10\nprint(A ** B)",defaultcode:"",defaultinput:["32"],defaultoutput:["9"],inout: [{inv:["32"],outv:["9"]},{inv:["43"],outv:["64"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "**", "%", "//"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится количество нулей. Сформируй число по следующему шаблону '1'+указанное количество нулей. Умножь полученное число на 5",tasktype:"task",id:7,rightcode:"N = int(input())\nA = '1' + '0' * N\nB = int(A) * 5\nprint(B)",defaultcode:"",defaultinput:["3"],defaultoutput:["5000"],inout: [{inv:["3"],outv:["5000"]},{inv:["4"],outv:["50000"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "*"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится число с неизвестным числом цифр, напечатай его первую цифру",tasktype:"task",id:8,rightcode:"N = input()\nA = '1' + '0' * (len(N) - 1)\nB = int(A)\nprint(int(N) // B)",defaultcode:"",defaultinput:["3231"],defaultoutput:["3"],inout: [{inv:["3231"],outv:["3"]},{inv:["434234"],outv:["4"]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "*", "//"],musthaveRe:[],}},{chapterid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"В поле 'Входные данные' содержится трехзначное число. Если сумма цифр числа больше 12, напечатай 'Больше 12', в противном случае напечатай прозведение первой и последней цифры",tasktype:"task",id:9,rightcode:"N = int(input())\nM1 = N % 10\nM2 = N // 10 % 10\nM3 = N // 100\nsumm = M1 + M2 + M3\nif summ > 12:\n    print('Больше 12')\nelse:\n    print(M1 * M3)",defaultcode:"",defaultinput:["384"],defaultoutput:["Больше 12"],inout: [{inv:["384"],outv:["Больше 12"]},{inv:["234"],outv:["8"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "if", "*", "//"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Представим, что у нас есть следующий код:\nprint('Ура!')\nprint('Ура!')\nprint('Ура!')\n\n# Как его можно упростить? Используем циклы!\nfor i in range(3):\n    print('Ура')\n\n# Данный код называется циклом.\n\n# Обрати внимание на следующие детали:\n# 1) Как и в условии стоит двоеточие\n# 2) Все строки после строки с for, имеющие отступ, будут повторяться\n# 3) Количество повторений указано в круглых скобках (3)\n# 4) Что такое i? Это счетчик цикла, пока мы не будем его использовать\n# 5) Все что идет после строк с отступом не будет повторяться.\n\n# Остальное нужно просто пока запомнить\n\n# Приведем пример другой программы\nprint('На первый-второй рассчитайся')\nfor i in range(4):\n    print('Первый')\n    print('Второй')\nprint('Молодцы!')  # этот код не будет повторяться, так как нет отступа слева",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"Измени программу так, чтобы она напечатала столько слов Ура, сколько указано в поле 'Входные данные'.\nПодсказка: вместо числа 3 нужно добавить значение переменной, в которую нужно поместить значение входной строки. Не забудь превратить строку в число",tasktype:"task",id:2,rightcode:"N = int(input())\nfor i in range(N):\n    print('Ура')",defaultcode:"for i in range(3):\n    print('Ура')",defaultinput:["4"],defaultoutput:["Ура", "Ура", "Ура", "Ура"],inout: [{inv:["4"],outv:["Ура", "Ура", "Ура", "Ура"]},{inv:["3"],outv:["Ура", "Ура", "Ура"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["print", "for", "int", "input"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится 2 строки, повтори их 3 раза",tasktype:"task",id:3,rightcode:"A = input()\nB = input()\nfor i in range(N):\n    print(A)\n    print(B)",defaultcode:"",defaultinput:["Черный", "Белый"],defaultoutput:["Черный", "Белый", "Черный", "Белый", "Черный", "Белый"],inout: [{inv:["Черный", "Белый"],outv:["Черный", "Белый", "Черный", "Белый", "Черный", "Белый"]},{inv:["Черный1", "Белый1"],outv:["Черный1", "Белый1", "Черный1", "Белый1", "Черный1", "Белый1"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится 2 строки, повтори их 3 раза через тире",tasktype:"task",id:4,rightcode:"A = input()\nB = input()\nfor i in range(N):\n    print(A + '-' + B)",defaultcode:"",defaultinput:["Красно", "синий"],defaultoutput:["Красно-синий", "Красно-синий", "Красно-синий"],inout: [{inv:["Красно", "синий"],outv:["Красно-синий", "Красно-синий", "Красно-синий"]},{inv:["Сине", "желтый"],outv:["Сине-желтый", "Сине-желтый", "Сине-желтый"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится строка и число M, напечатай строку M раз",tasktype:"task",id:5,rightcode:"A = input()\nN = int(input())\nfor i in range(N):\n    print(A)",defaultcode:"",defaultinput:["Цикл for", "4"],defaultoutput:["Цикл for", "Цикл for", "Цикл for", "Цикл for"],inout: [{inv:["Цикл for", "4"],outv:["Цикл for", "Цикл for", "Цикл for", "Цикл for"]},{inv:["if", "2"],outv:["if", "if"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится символ и число М, повтори строку M раз по горизонтали и вертикали - получится квадрат. Используй умножение строки на число",tasktype:"task",id:6,rightcode:"A = input()\nN = int(input())\nfor i in range(N):\n    print(A * N)",defaultcode:"",defaultinput:["@", "3"],defaultoutput:["@@@", "@@@", "@@@"],inout: [{inv:["@", "3"],outv:["@@@", "@@@", "@@@"]},{inv:["&", "2"],outv:["&&", "&&"]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "*", "int"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится строка. Напечатай эту строку столько раз сколько символов в строке",tasktype:"task",id:7,rightcode:"A = input()\nN = len(A)\nfor i in range(N):\n    print(A)",defaultcode:"",defaultinput:["Ура"],defaultoutput:["Ура", "Ура", "Ура"],inout: [{inv:["Ура"],outv:["Ура", "Ура", "Ура"]},{inv:["Ау"],outv:["Ау", "Ау"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "len"],musthaveRe:[],}},{chapterid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"В поле 'Входные данные' содержится число. Найди остаток от деления этого числа на 8. Назовем остаток буквой М.Напечатай эту число М раз",tasktype:"task",id:8,rightcode:"A = input()\nN = int(A) % 8\nfor i in range(N):\n    print(A)",defaultcode:"",defaultinput:["18"],defaultoutput:["18", "18"],inout: [{inv:["18"],outv:["18", "18"]},{inv:["17"],outv:["17"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "%"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"содержится количество чисел, далее идут сами числа. Считай все числа и просто напечатай их",tasktype:"task",id:1,rightcode:"N = int(input())\nfor i in range(N):\n    r = input()\n    print(r)",defaultcode:"",defaultinput:["3", "123", "5", "33"],defaultoutput:["123", "5", "33"],inout: [{inv:["3", "123", "5", "33"],outv:["123", "5", "33"]},{inv:["2", "123", "5"],outv:["123", "5"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Считай все числа, возведи каждое число в 3 степень.  Результат напечатай. Используй оператор возведения в степень",tasktype:"task",id:2,rightcode:"N = int(input())\nfor i in range(N):\n    r = int(input())\n    print(r ** 3)",defaultcode:"",defaultinput:["3", "2", "3", "4"],defaultoutput:["8", "27", "64"],inout: [{inv:["3", "2", "3", "4"],outv:["8", "27", "64"]},{inv:["2", "1", "2"],outv:["1", "8"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"Изучи программу",tasktype:"guide",id:3,rightcode:"pass",defaultcode:"# В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа.\n# Найдем сумму этих чисел.\n\n# Создадим переменную summ\nsumm = 0\n# Возьмем код для считывания чисел\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    # Каждый раз когда мы считываем очередное число будем добавлять его к сумме\n    summ = summ + r\n# После завершения цикла напечатаем сумму\nprint('Сумма чисел: ', summ)\n",defaultinput:["3", "2", "3", "4"],defaultoutput:[],inout: [{inv:["3", "2", "3", "4"],outv:[]},{inv:["2", "1", "2"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"Изучи программу",tasktype:"guide",id:4,rightcode:"pass",defaultcode:"# В поле 'Входные данные' некоторое количество строк. В первой строке количество строк, в остальных строках сами строки.\n\n# Сложим все строки в одну строку.\n\n# Создадим переменную line\nline = ''\nN = int(input())\nfor i in range(N):\n    r = input()\n    # Каждый раз когда мы считываем очередную строку будем добавлять ее к переменной line\n    line = line + str(r) + '!'\n# После завершения цикла напечатаем итоговую строку\nprint('Строка:', line)",defaultinput:["3", "Быстрей", "Выше", "Сильней"],defaultoutput:[],inout: [{inv:["3", "Быстрей", "Выше", "Сильней"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Считай все числа, возведи каждое число в квадрат. Сложи все квадраты чисел. Используй оператор возведения в степень",tasktype:"task",id:5,rightcode:"summ = 0\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    summ = summ + r ** 2\nprint(summ)",defaultcode:"",defaultinput:["3", "2", "1", "2"],defaultoutput:["9"],inout: [{inv:["3", "2", "1", "2"],outv:["9"]},{inv:["2", "1", "3"],outv:["10"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "**"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Все числа трёхзначные. Считай все числа, сложи первые цифры каждого числа. Результат напечатай",tasktype:"task",id:6,rightcode:"summ = 0\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    summ = summ + r // 100\nprint(summ)",defaultcode:"",defaultinput:["3", "200", "111", "234"],defaultoutput:["5"],inout: [{inv:["3", "200", "111", "234"],outv:["5"]},{inv:["2", "324", "199"],outv:["4"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "//"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Найди сумму длин всех строк",tasktype:"task",id:7,rightcode:"summ = 0\nN = int(input())\nfor i in range(N):\n    r = input()\n    summ = summ + len(r)\nprint(summ)",defaultcode:"",defaultinput:["3", "Быстрей", "Выше", "Сильней"],defaultoutput:["18"],inout: [{inv:["3", "Быстрей", "Выше", "Сильней"],outv:["18"]},{inv:["2", "ФФ", "Ф"],outv:["3"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "len"],musthaveRe:[],}},{chapterid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Подсчитай количество чисел, которые больше 7",tasktype:"task",id:8,rightcode:"summ = 0\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    if r > 7:\n        summ = summ + 1\nprint(summ)",defaultcode:"",defaultinput:["3", "3", "9", "10"],defaultoutput:["2"],inout: [{inv:["3", "3", "9", "10"],outv:["2"]},{inv:["4", "3", "9", "10", "11"],outv:["3"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "+", ">"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Рассмотрим следующую задачу.\n\n# В первой строке Входных данных содержится количество строк - 6. Далее идут сами строки. Сложим первую строку со второй, третью - с четвертой, пятую - с шестой.\n\n# Какое количество повторений цикла нам потребуется?\n\n# Правильный ответ - 3. То есть - половина от количества строк - 6//2\nN = int(input())\nfor i in range(N // 2):\n    one = input()\n    two = input()\n    print(one + two)\n\n# Обрати внимание, что нам потребовался оператор целочисленного деления //, обычное деление / не подойдет",defaultinput:["6", "город-", "герой", "море по ", "колено", "крибли крабли", "бумс"],defaultoutput:[],inout: [{inv:["6", "город-", "герой", "море по ", "колено", "крибли крабли", "бумс"],outv:[]},{inv:["6", "Ф", "Ф", "Ф", "Ф", "Ф", "Ф"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Количество чисел всегда чётное. Сложи первое число со вторым, третье - с четвертым, и так далее. Суммы напечатай.",tasktype:"task",id:2,rightcode:"N = int(input())\nfor i in range(N // 2):\n    one = int(input())\n    two = int(input())\n    print(one + two)",defaultcode:"",defaultinput:["6", "1", "2", "4", "5", "9", "10"],defaultoutput:["3", "9", "19"],inout: [{inv:["6", "1", "2", "4", "5", "9", "10"],outv:["3", "9", "19"]},{inv:["4", "2", "2", "4", "4"],outv:["4", "8"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "//"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Количество чисел всегда делится без остатка на 3. Умножь первое число на второе и третье, четвертое - на пятое и шестое, и так далее. Произведения напечатай.",tasktype:"task",id:3,rightcode:"N = int(input())\nfor i in range(N // 3):\n    one = int(input())\n    two = int(input())\n    three = int(input())\n    print(one * two * three)",defaultcode:"",defaultinput:["6", "1", "2", "4", "5", "9", "10"],defaultoutput:["8", "450"],inout: [{inv:["6", "1", "2", "4", "5", "9", "10"],outv:["8", "450"]},{inv:["3", "2", "2", "4"],outv:["16"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "//"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Количество чисел всегда чётное. Напечатай большее из первого и второго  числа, большее из третьего и четвертого и так далее. Используй условный оператор",tasktype:"task",id:4,rightcode:"N = int(input())\nfor i in range(N // 2):\n    one = int(input())\n    two = int(input())\n    if one > two:\n        print(one)\n    else:\n        print(two)",defaultcode:"",defaultinput:["6", "1", "20", "50", "2", "9", "100"],defaultoutput:["20", "50", "100"],inout: [{inv:["6", "1", "20", "4", "50", "9", "100"],outv:["20", "50", "100"]},{inv:["2", "2", "20"],outv:["20"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "//"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"Изучи программу",tasktype:"guide",id:5,rightcode:"pass",defaultcode:"# Рассмотрим следующую задачу.\n\n# В первой строке Входных данных содержится количество чисел - 5. Далее идут сами числа.\n# Требуется найти разность между вторым и первым числом, третьим и вторым, четвертым и третьим, и так далее.\n\n# Сколько  повторений цикла нам потребуется?\n\n# Правильный ответ - 4. То есть - на 1 меньше, чем количество чисел.\n\n# Также возникает вторая проблема: нужно где-то хранить предыдущее значение.\n\n# Изучи способ решения данной проблемы\nN = int(input())\nprev = int(input())  # Запоминаем первое число\nfor i in range(N - 1):\n    curr = int(input())  # Считываем следующее\n    print(curr - prev)  # Вычитаем из следующего предыдущее\n    prev = curr  # Обновляем предыдущее",defaultinput:["5", "1", "2", "3", "5", "10"],defaultoutput:[],inout: [{inv:["5", "1", "2", "3", "5", "10"],outv:[]},{inv:["2", "2", "20"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Требуется найти разность между вторым и первым числом, третьим и вторым, четвертым и третьим, и так далее. Все разности нужно сложить и напечатать итоговую сумму",tasktype:"task",id:6,rightcode:"N = int(input())\nprev = int(input())\nsumm = 0\nfor i in range(N - 1):\n    curr = int(input())\n    summ = summ + curr - prev\n    prev = curr\nprint(summ)",defaultcode:"",defaultinput:["4", "1", "3", "7", "9"],defaultoutput:["8"],inout: [{inv:["4", "1", "3", "7", "9"],outv:["8"]},{inv:["2", "2", "20"],outv:["18"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "-"],musthaveRe:[],}},{chapterid:"a85d7711-f7f6-4411-9fb7-153fe8357787",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если одно из чисел меньше предыдущего, то напечатай его",tasktype:"task",id:7,rightcode:"N = int(input())\nprev = int(input())\nfor i in range(N - 1):\n    curr = int(input())\n    if curr < prev:\n        print(curr)\n    prev = curr",defaultcode:"",defaultinput:["4", "1", "3", "2", "1"],defaultoutput:["2", "1"],inout: [{inv:["4", "1", "3", "2", "1"],outv:["2", "1"]},{inv:["3", "1", "0", "1"],outv:["0"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "-"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Вернемся в структуре цикла\n# for i in range(3):\n#     print('Ура')\n# Настала пока изучить счетчик цикла i. На самом деле это обычная переменная, которая может принимать разные числовые значения на каждом повторении цикла\n# Проиллюстрируем работу счетчика на конкретном примере\nfor counter in range(3):\n    print(counter)\n# Напечатаются значения 0, 1, 2. Получается нумерация начинается с нуля и заканчивается на единицу меньше\n# чем указано в скобках range(3)!\n# Что есть необходимо начать нумерацию с 1 или другого числа? Прибавим к счетчику столько сколько нужно\nfor counter in range(3):\n    print(counter + 1)\n# Ну и напоследок нумерация в обратную сторону:\nfor counter in range(3):\n    print(3 - counter)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Добавь к каждой строке ее номер начиная с единицы",tasktype:"task",id:2,rightcode:"N = int(input())\nfor num in range(N):\n    line = input()\n    print(num + 1, line)",defaultcode:"",defaultinput:["2", "Иванов", "Петров"],defaultoutput:["1 Иванов", "2 Петров"],inout: [{inv:["2", "Иванов", "Петров"],outv:["1 Иванов", "2 Петров"]},{inv:["3", "Иванов", "Петров", "Сидоров"],outv:["1 Иванов", "2 Петров", "3 Сидоров"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки.Добавь к каждой строке ее номер если считать снизу вверх. Пробелов между номером и точкой быть не должно",tasktype:"task",id:3,rightcode:"N = int(input())\nfor ids in range(N):\n    line = input()\n    print(str(N - ids) + '. ' + line)",defaultcode:"",defaultinput:["3", "Иванов", "Петров", "Сидоров"],defaultoutput:["3. Иванов", "2. Петров", "1. Сидоров"],inout: [{inv:["3", "Иванов", "Петров", "Сидоров"],outv:["3. Иванов", "2. Петров", "1. Сидоров"]},{inv:["2", "Иванов", "Петров"],outv:["2. Иванов", "1. Петров"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Напечатай число, если оно совпадает с номером строчки, на которой оно содержится",tasktype:"task",id:4,rightcode:"N = int(input())\nfor i in range(1, N + 1):\n    M = input()\n    if str(i) == M:\n        print(M)",defaultcode:"",defaultinput:["4", "30", "2", "40", "4"],defaultoutput:["2", "4"],inout: [{inv:["4", "30", "2", "40", "4"],outv:["2", "4"]},{inv:["3", "30", "20", "3"],outv:["3"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"Изучи программу",tasktype:"guide",id:5,rightcode:"pass",defaultcode:"# Вернемся в структуре цикла\n# for i in range(3):\n#     print(i)\n# Научимся делать предыдущие вещи другим способом\n\n# 1) Если в скобках указать два числа, например, 1 и 5, то счетчик будет принимать значения от 1 до 4\n# Да, да, да ... это не опечатка 🤔, эту важную деталь ❗️нужно обязательно запомнить\nfor i in range(1, 5):\n    print(i)\n# 2) Если в скобках указать три числа, например, 1 и 10 и 2, то счетчик будет принимать значения 1,3,5,7,9\n# Получается третье число - это шаг\nfor i in range(1, 10, 2):\n    print(i)\n\n# 3) Ну, и, напоследок, нумерация в обратную сторону. Если указать два числа 5 и 1, ничего работать не\n# будет. Нужно дополнительно указать шаг:\nfor i in range(5, 1, -1):\n    print(i)\n# ❗️В этом примере диапазон от 5 до 2, последнее число опять не берется, имей это ввиду при решении задач",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В поле 'Входные данные' содержится число N. Напечатай все числа от 1 до N c шагом 3. Не забывай, что второе число в диапазоне должно быть на 1 больше",tasktype:"task",id:6,rightcode:"N = int(input())\nfor i in range(1, N + 1, 3):\n    print(i)",defaultcode:"",defaultinput:["16"],defaultoutput:["1", "4", "7", "10", "13", "16"],inout: [{inv:["16"],outv:["1", "4", "7", "10", "13", "16"]},{inv:["13"],outv:["1", "4", "7", "10", "13"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В поле 'Входные данные' содержится число N. Напечатай все числа от 1 до N c шагом 3. Не забывай, что второе число в диапазоне должно быть на 1 больше",tasktype:"task",id:7,rightcode:"N = int(input())\nfor i in range(1, N + 1, 3):\n    print(i)",defaultcode:"",defaultinput:["16"],defaultoutput:["1", "4", "7", "10", "13", "16"],inout: [{inv:["16"],outv:["1", "4", "7", "10", "13", "16"]},{inv:["13"],outv:["1", "4", "7", "10", "13"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В поле 'Входные данные' содержится 2 числа N и M. Напечатай все числа от N до 1 c шагом M. Не забывай, что второе число в диапазоне должно быть на 1 меньше",tasktype:"task",id:8,rightcode:"N = int(input())\nM = int(input())\nfor i in range(N, 0, -M):\n    print(i)",defaultcode:"",defaultinput:["16", "3"],defaultoutput:["16", "13", "10", "7", "4", "1"],inout: [{inv:["16", "3"],outv:["16", "13", "10", "7", "4", "1"]},{inv:["11", "2"],outv:["11", "9", "7", "5", "3", "1"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"В поле 'Входные данные' содержится число N.  Напечатай все числа от 1 до N c шагом 3. Напротив каждого числа укажи четное оно или нет",tasktype:"task",id:9,rightcode:"N = int(input())\nfor i in range(1, N + 1, 3):\n    if i % 2 == 0:\n        print(str(i) + '-четное')\n    else:\n        print(str(i) + '-нечетное')",defaultcode:"",defaultinput:["16"],defaultoutput:["1-нечетное", "4-четное", "7-нечетное", "10-четное", "13-нечетное", "16-четное"],inout: [{inv:["16"],outv:["1-нечетное", "4-четное", "7-нечетное", "10-четное", "13-нечетное", "16-четное"]},{inv:["10"],outv:["1-нечетное", "4-четное", "7-нечетное", "10-четное"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Взглянем на структуру цикла более опытными глазами\n# В данном примере i - это переменная, которая принимает значения из диапазона range. Range в переводе с английского Диапазон.\n# Как мы уже знаем диапазон в Питоне можно задавать одним числом (от нуля до указанного числа), двумя числами(первое и последнее число), и тремя числами(первое, последнее, шаг)\nfor i in range(3):\n    print(i)\n# Вместо диапазона чисел можно использовать набор символов. В этом случае в переменную цикла будут по очереди попадать все символы строки\nfor i in 'ABCDEF1234':\n    print(i)\n# Другой пример\ncity = input()\nfor i in city:\n    print(i)",defaultinput:["LONDON"],defaultoutput:[],inout: [{inv:["LONDON"],outv:[]},{inv:["LONDON"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка. Подсчитай количество букв Е в этой строке",tasktype:"task",id:2,rightcode:"word = input()\nlet = 0\nfor letter in word:\n    if letter == 'Е':\n        let = let + 1\nprint(let)",defaultcode:"",defaultinput:["ДЛИННОШЕЕЕ"],defaultoutput:["3"],inout: [{inv:["ДЛИННОШЕЕЕ"],outv:["3"]},{inv:["ЕЕЕЕЕЕ"],outv:["6"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка из двух букв A и B. Подсчитай количество букв A и B в этой строке",tasktype:"task",id:3,rightcode:"word = input()\nletA = 0\nletB = 0\nfor letter in word:\n    if letter == 'A':\n        letA = letA + 1\n    if letter == 'B':\n        letB = letB + 1\nprint('A:' + str(letA))\nprint('B:' + str(letB))",defaultcode:"",defaultinput:["AAABBBAAABA"],defaultoutput:["A:7", "B:4"],inout: [{inv:["AAABBBAAABA"],outv:["A:7", "B:4"]},{inv:["AB"],outv:["A:1", "B:1"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка из цифр. Сложи все цифры в строке",tasktype:"task",id:4,rightcode:"line = input()\nsumm = 0\nfor digit in line:\n    summ = summ + int(digit)\nprint(summ)",defaultcode:"",defaultinput:["12223"],defaultoutput:["10"],inout: [{inv:["12223"],outv:["10"]},{inv:["89"],outv:["17"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка из цифр. Добавь после каждой буквы символ +",tasktype:"task",id:5,rightcode:"line = input()\nextra = ''\nfor digit in line:\n    extra = extra + digit + '+'\nprint(extra)",defaultcode:"",defaultinput:["12223"],defaultoutput:["1+2+2+2+3+"],inout: [{inv:["12223"],outv:["1+2+2+2+3+"]},{inv:["89"],outv:["8+9+"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"В поле 'Входные данные' содержится строка из цифр и знаков +. Удали + из строки",tasktype:"task",id:6,rightcode:"line = input()\nextra = ''\nfor digit in line:\n    if digit != '+':\n        extra = extra + digit\nprint(extra)",defaultcode:"",defaultinput:["1+2+2+2+3"],defaultoutput:["12223"],inout: [{inv:["1+2+2+2+3"],outv:["12223"]},{inv:["8+9"],outv:["89"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int"],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' в первой строке содержится набор цифр. Во второй строке - произвольное число. Перемножь все цифры в первой строке, найди остаток от деления полученного произведения на число во второй строке",tasktype:"task",id:1,rightcode:"line = input()\nsecond = int(input())\nmult = 1\nfor digit in line:\n    mult = mult * int(digit)\nprint(mult % second)",defaultcode:"",defaultinput:["1234", "3"],defaultoutput:["0"],inout: [{inv:["1234", "3"],outv:["0"]},{inv:["1235", "4"],outv:["2"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' содержится набор символов. Подсчитай на каком месте стоит буква A",tasktype:"task",id:2,rightcode:"line = input()\ncnt = 0\nfor digit in line:\n    cnt = cnt + 1\n    if digit == 'A':\n        print(cnt)",defaultcode:"",defaultinput:["BBBAB"],defaultoutput:["4"],inout: [{inv:["BBBAB"],outv:["4"]},{inv:["BBBBBA"],outv:["6"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные'  содержится набор символов. Замени пятую букву на звездочку *",tasktype:"task",id:3,rightcode:"symbols = input()\ncnt = 0\nline = ''\nfor digit in symbols:\n    cnt = cnt + 1\n    if cnt == 5:\n        line = line + '*'\n    else:\n        line = line + digit\nprint(line)",defaultcode:"",defaultinput:["BBBABG"],defaultoutput:["BBBA*G"],inout: [{inv:["BBBABG"],outv:["BBBA*G"]},{inv:["DDBBVA"],outv:["DDBB*A"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "in"],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' содержится набор символов. Удали все символы начиная с указанного во второй строке",tasktype:"task",id:4,rightcode:"symbols = input()\npos = int(input())\ncnt = 0\nline = ''\nfor sym in symbols:\n    cnt = cnt + 1\n    if cnt <= pos:\n        line = line + sym\nprint(line)",defaultcode:"",defaultinput:["BBBABG", "3"],defaultoutput:["BBB"],inout: [{inv:["BBBABG", "3"],outv:["BBB"]},{inv:["DD", "2"],outv:["DD"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "in"],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' содержится набор символов. Удали все символы  с 3 по 6",tasktype:"task",id:5,rightcode:"symbols = input()\ncnt = 0\nline = ''\nfor sym in symbols:\n    cnt = cnt + 1\n    if cnt < 3:\n        line = line + sym\n    if cnt > 6:\n        line = line + sym\nprint(line)",defaultcode:"",defaultinput:["BBBABGDDSA"],defaultoutput:["BBDDSA"],inout: [{inv:["BBBABGDDSA"],outv:["BBDDSA"]},{inv:["QWERTYUI"],outv:["QWUI"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "in"],musthaveRe:[],}},{chapterid:"13f09976-e71c-45a3-9025-af01fd508f08",chapterparentid:"13f09976-e71c-45a3-9025-af01fd508f08",task:"В поле 'Входные данные' содержится набор символов. Замени все символы  с 7 по 13 на слово Best",tasktype:"task",id:6,rightcode:"symbols = input()\ncnt = 0\nline1 = ''\nline2 = ''\nfor sym in symbols:\n    cnt = cnt + 1\n    if cnt < 7:\n        line1 = line1 + sym\n    if cnt > 13:\n        line2 = line2 + sym\nprint(line1 + 'Best' + line2)",defaultcode:"",defaultinput:["PythonReplaceCode"],defaultoutput:["PythonBestCode"],inout: [{inv:["PythonReplaceCode"],outv:["PythonBestCode"]},{inv:["QWERTYUIOPASDFGHJKL"],outv:["QWERTYBestFGHJKL"]}],restrictions: {maxlines:12,forbidden:["replace"],forbiddenRe:[],musthave:["print", "for", "input", "in"],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# В данной главе мы научимся искать минимальные, максимальные и средние значения\n# Предположим нам надо найти максимальное среди шести чисел 1 8 17 8 18 3, которые находятся во Входных данных\n# Введем переменную maxx, в которую поместим значение заведомо меньшее любого из чисел, среди которых  осуществляется поиск\nmaxx = 0\n# Будем перебирать все числа\nfor i in range(6):\n    # если очередное число больше переменной maxx, то поместим это значение в переменную maxx\n    a = int(input())\n    if a > maxx:\n        maxx = a\nprint(maxx)",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"В поле 'Входные данные' содержится набор цифр. Найди максимальную цифру",tasktype:"task",id:2,rightcode:"line = input()\nmaxx = 0\nfor digit in line:\n    if int(digit) > maxx:\n        maxx = int(digit)\nprint(maxx)",defaultcode:"",defaultinput:["12534"],defaultoutput:["5"],inout: [{inv:["12534"],outv:["5"]},{inv:["123"],outv:["3"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"содержится количество строк, далее идут сами строки. Найди длину самой длинной строки\nПодсказка: используй переменную для сохранения самой длинной строки",tasktype:"task",id:3,rightcode:"n = int(input())\nmaxx = 0\nmaxxlen = ''\nfor i in range(n):\n    line = input()\n    if len(line) > maxx:\n        maxx = len(line)\n        maxxlen = line\nprint(maxxlen)",defaultcode:"",defaultinput:["3", "Москва", "Рим", "Сан-Франциско"],defaultoutput:["Сан-Франциско"],inout: [{inv:["3", "Москва", "Рим", "Сан-Франциско"],outv:["Сан-Франциско"]},{inv:["3", "Москва", "Рим", "Клин"],outv:["Москва"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"содержится количество чисел, далее идут сами числа. Все числа отрицательные. Самое маленькое число  которое может встретиться это -1000. Найди максимальное число",tasktype:"task",id:4,rightcode:"n = int(input())\nmaxx = -1001\nfor i in range(n):\n    number = int(input())\n    if number > maxx:\n        maxx = number\nprint(maxx)",defaultcode:"",defaultinput:["3", "-1", "-2", "-5"],defaultoutput:["-1"],inout: [{inv:["3", "-1", "-2", "-5"],outv:["-1"]},{inv:["4", "-1000", "-1000", "-999", "-1000"],outv:["-999"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:5,rightcode:"pass",defaultcode:"# Предположим нам надо найти минимальное число среди шести чисел 1 8 17 8 18 3, которые находятся в поле 'Входные данные'.\n# Введем переменную minn, в которую поместим число заведомо большее любого из чисел, среди которых  осуществляется поиск\nminn = 0\n# Будем перебирать все числа\nfor i in range(6):\n    # если очередное число меньше переменной minn, то поместим это значение в переменную minn\n    a = int(input())\n    if a < minn:\n        minn = a\nprint(minn)",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Все числа положительные. Самое большое число  которое может встретиться это 1000. Найди минимальное число",tasktype:"task",id:6,rightcode:"n = int(input())\nminn = 1001\nfor i in range(n):\n    number = int(input())\n    if number < minn:\n        minn = number\nprint(minn)",defaultcode:"",defaultinput:["3", "1", "20", "10"],defaultoutput:["1"],inout: [{inv:["3", "1", "20", "10"],outv:["1"]},{inv:["4", "1000", "1000", "999", "1000"],outv:["999"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:7,rightcode:"pass",defaultcode:"# Предположим нам надо найти среднее значение среди шести чисел 1 8 17 8 18 3, которые находятся во Входных данных\n# Здесь все просто, разделим сумму на количество\nsumm = 0\nfor i in range(6):\n    a = int(input())\n    summ = summ + a\nprint(summ / 6)\n# Усложним задачу, найдем среднее значение чисел, которые больше 3\n# Введем дополнительную переменную для подсчета таких чисел\nsumm = 0\ncnt = 0\nfor i in range(6):\n    a = int(input())\n    if a > 3:\n        summ = summ + a\n        cnt = cnt + 1\nprint(summ / cnt)",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"df8a2127-4d9b-4f36-9423-35f75f649189",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"В поле 'Входные данные' в первой строке содержится набор цифр. Найди среднее значение всех цифр не равных 8 ",tasktype:"task",id:8,rightcode:"line = input()\nsumm = 0\ncnt = 0\nfor digit in line:\n    if digit != '8':\n        summ = summ + int(digit)\n        cnt = cnt + 1\nprint(summ / cnt)",defaultcode:"",defaultinput:["88848882"],defaultoutput:["3.0"],inout: [{inv:["88848882"],outv:["3.0"]},{inv:["888488823"],outv:["3.0"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# В данной главе мы научимся выполнять поиск сред значений.\n# Предположим нам надо понять есть ли число 8 среди шести уникальных чисел 1 8 17 8 18 3, которые находятся во Входных данных.\n# Будем перебирать все числа\nfor i in range(6):\n    # если очередное равно 8, то напечатаем результат поиска\n    a = int(input())\n    if a == 8:\n        print('Число 8 найдено')",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:2,rightcode:"pass",defaultcode:"# Усложним задачу, выполним поиск числа 10, которого нет в списке, программа должна вывести 'Число 10 не найдено'\n# Задача решается с помощью дополнительной переменной, которую иногда называют флагом\nflag = 0\nfor i in range(6):\n    a = int(input())\n    # если очередное число равно 10, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n    if a == 10:\n        flag = 1\n# Если после выполнения цикла переменная все еще равна 0(флаг опущен), это значит, что среди чисел не нашлось 10\nif flag == 0:\n    print('Число 10 не найдено')",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:3,rightcode:"pass",defaultcode:"# Выполним поиск числа 8, которое повторяется в списке много раз, программа должна вывести 'Число 8 найдено'\n# Задача решается двумя способами\n\n# Решение с помощью флага\nflag = 0\nfor i in range(6):\n    a = int(input())\n    # если очередное число равно 8, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n    if a == 8:\n        flag = 1\n# Если после выполнения цикла переменная равна 1, это значит, что среди чисел есть число 8\nif flag == 0:\n    print('Число 8 найдено')",defaultinput:["1", "8", "17", "8", "8", "8"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "8", "8"],outv:[]},{inv:["1", "8", "17", "8", "8", "8"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:4,rightcode:"pass",defaultcode:"# Другой способ-это использование новой команды, которая называется break\n# команда break позволяет прервать выполнение цикла\n# попробуй выполнить программу с использованием команды break и без неё\nfor i in range(6):\n    a = int(input())\n    # если очередное число равно 8, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n    if a == 8:\n        print('Число 8 найдено')\n        break",defaultinput:["1", "8", "17", "8", "8", "8"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "8", "8"],outv:[]},{inv:["1", "8", "17", "8", "8", "8"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"В поле 'Входные данные' содержится набор цифр. Напечатай 'Да' если среди них есть цифра 9",tasktype:"task",id:5,rightcode:"line = input()\nfor digit in line:\n    if digit == '9':\n        print('Да')\n        break",defaultcode:"",defaultinput:["125349"],defaultoutput:["Да"],inout: [{inv:["125349"],outv:["Да"]},{inv:["123"],outv:[]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"ebffc894-0193-4582-8e89-53909ac17b0c",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"В поле 'Входные данные' содержится набор цифр. Напечатай 'Да' если среди них есть цифра 9. Напечатай 'Нет', если  цифры-нет",tasktype:"task",id:6,rightcode:"line = input()\nflag = 0\nfor digit in line:\n    if digit == '9':\n        flag = 1\nif flag == 1:\n    print('Да')\nelse:\n    print('Нет')\n",defaultcode:"",defaultinput:["125349"],defaultoutput:["Да"],inout: [{inv:["125349"],outv:["Да"]},{inv:["123"],outv:["Нет"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# В данной главе мы научимся использовать индексы строк\n# Пусть мы имеем строку\ns = 'Программирование'\n# В Питоне есть возможность извлечь из строки отдельный символ\n# Нужно указать в квадратных скобках номер символа\nsym = s[2]\nprint('Третий символ строки', sym)\n# Напечатается третий символ, так как нумерация в питоне идет с нуля 0,1,2\n\n# Также в Питоне существует обратная нумерация, она начинается с -1\nsym = s[-1]\nprint('Последний символ строки', sym)\nsym = s[-2]\nprint('Предпоследний символ строки', sym)\n\n# Код, который выдаст ошибку, так как указан номер символа, который не существует:\n# print(s[100])\n# print(s[-100])\n# Код, который выдаст ошибку, так как нельзя поменять строку таким образом:\n# s[1]='A'\n# Раскомментируй некоторые строки и убедись в этом",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка. Удали все символы строки кроме первого и последнего. Используй индексы",tasktype:"task",id:2,rightcode:"s = input()\na = s[0]\nb = s[-1]\nprint(a + b)",defaultcode:"",defaultinput:["Картина"],defaultoutput:["Ка"],inout: [{inv:["Картина"],outv:["Ка"]},{inv:["Дороги"],outv:["Ди"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["["],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержатся 2 строки. В первой строке - набор символов, во второй - число M. Повтори третий символ строки M раз ",tasktype:"task",id:3,rightcode:"s = input()\nM = int(input())\na = s[2]\nprint(a * M)",defaultcode:"",defaultinput:["Картина", "8"],defaultoutput:["рррррррр"],inout: [{inv:["Картина", "8"],outv:["рррррррр"]},{inv:["Молоко", "4"],outv:["лллл"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка. Замени все символы кроме первого и последнего на звездочку *",tasktype:"task",id:4,rightcode:"s = input()\nL = len(s) - 2\na = s[0]\nb = s[-1]\nprint(a + '*' * L + b)",defaultcode:"",defaultinput:["Картина"],defaultoutput:["К*****а"],inout: [{inv:["Картина"],outv:["К*****а"]},{inv:["Дороги"],outv:["Д****и"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка из нечетного количества символов, напечатай символ посередине. Подсказка: раздели длину строки на 2",tasktype:"task",id:5,rightcode:"s = input()\nmid = len(s) // 2\nprint(s[mid])",defaultcode:"",defaultinput:["Картина"],defaultoutput:["т"],inout: [{inv:["Картина"],outv:["т"]},{inv:["Колокол"],outv:["о"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка из нечетного количества символов. Напечатай три символа, которые находятся посередине строки.",tasktype:"task",id:6,rightcode:"s = input()\nmid = len(s) // 2\nprint(s[mid - 1] + s[mid] + s[mid + 1])",defaultcode:"",defaultinput:["Картина"],defaultoutput:["рти"],inout: [{inv:["Картина"],outv:["рти"]},{inv:["Колокол"],outv:["лок"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"В поле 'Входные данные' содержится строка из четного количества символов, напечатай два символа посередине",tasktype:"task",id:7,rightcode:"s = input()\nmid = len(s) // 2\nprint(s[mid - 1] + s[mid])",defaultcode:"",defaultinput:["Дорога"],defaultoutput:["ро"],inout: [{inv:["Дорога"],outv:["ро"]},{inv:["Марс"],outv:["ар"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Мы уже знаем, что для перебора символов в строке можно использовать такой цикл:\ns = 'Программирование'\nfor a in s:\n    print(a)\n\n# Существует второй способ перебора символов через индексы:\nL = len(s)\nfor i in range(L):\n    print(s[i])\n\n# Продемонстрируем преимущества данного способа\n# Вывод каждого второго символа\nL = len(s)\nfor i in range(1, L, 2):\n    print(s[i])\n\n# Вывод символов парами\nL = len(s)\nfor i in range(L - 1):\n    print(s[i], s[i + 1])\n# Обрати внимание, что мы используем L-1 повторений цикла в данном примере",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка. Оставь каждый третий символ, остальные удали, результат напечатай",tasktype:"task",id:2,rightcode:"s = input()\nL = len(s)\nres = ''\nfor i in range(2, L, 3):\n    res = res + s[i]\nprint(res)",defaultcode:"",defaultinput:["Картина"],defaultoutput:["рн"],inout: [{inv:["Картина"],outv:["рн"]},{inv:["Дороги"],outv:["ри"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["for", "range", "len", "[", "]", "len"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка с четным количеством символов. Добавь тире после каждой пары символов",tasktype:"task",id:4,rightcode:"s = input()\nL = len(s)\nres = ''\nfor i in range(0, L, 2):\n    res = res + s[i] + s[i + 1] + '-'\nprint(res)",defaultcode:"",defaultinput:["Картон"],defaultoutput:["Ка-рт-он-"],inout: [{inv:["Картон"],outv:["Ка-рт-он-"]},{inv:["Дорога"],outv:["До-ро-га-"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["for", "range", "len", "[", "]", "len"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка. В строке более 2х символов. Выведи символы тройками: 1 2 3,  2 3 4,  3 4 5 и так далее ",tasktype:"task",id:5,rightcode:"s = input()\nL = len(s)\nfor i in range(L - 2):\n    print(s[i] + s[i + 1] + s[i + 2])",defaultcode:"",defaultinput:["Картон"],defaultoutput:["Кар", "арт", "рто", "тон"],inout: [{inv:["Картон"],outv:["Кар", "арт", "рто", "тон"]},{inv:["Дорога"],outv:["Дор", "оро", "рог", "ога"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["for", "range", "len", "[", "]", "input"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка c четным количеством символов. Выведи символы парами: первый и последний,  второй и предпоследний,  и так далее ",tasktype:"task",id:6,rightcode:"s = input()\nL = len(s) // 2\nfor i in range(L):\n    print(s[i] + s[-i - 1])",defaultcode:"",defaultinput:["Картон"],defaultoutput:["Кн", "ао", "рт"],inout: [{inv:["Картон"],outv:["Кн", "ао", "рт"]},{inv:["Дорога"],outv:["Да", "ог", "ро"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["for", "range", "len", "[", "]", "input"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка с нечетным количеством символов. Замени средний символ на тире",tasktype:"task",id:7,rightcode:"s = input()\nL = len(s)\nmid = L // 2\nres = ''\nfor i in range(L):\n    if i != mid:\n        res = res + s[i]\n    else:\n        res = res + '-'\nprint(res)",defaultcode:"",defaultinput:["Картина"],defaultoutput:["Кар-ина"],inout: [{inv:["Картина"],outv:["Кар-ина"]},{inv:["Дорогая"],outv:["Дор-гая"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["for", "range", "len", "[", "]", "len"],musthaveRe:[],}},{chapterid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"В поле 'Входные данные' содержится строка с четным количеством символов. Добавь в середину символ тире",tasktype:"task",id:8,rightcode:"s = input()\nL = len(s)\nmid = L // 2\nres = ''\nfor i in range(L):\n    if i == mid:\n        res = res + '-'\n    res = res + s[i]\nprint(res)",defaultcode:"",defaultinput:["Картон"],defaultoutput:["Кар-тон"],inout: [{inv:["Картон"],outv:["Кар-тон"]},{inv:["Дорога"],outv:["Дор-ога"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["for", "range", "len", "[", "]", "len"],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# В данной главе мы научимся использовать срезы 🍰 строк\n# Срезы очень похожи на индексы, но позволяют вырезать из строки более одного символа\ns = 'параллелепипед'\n# Срез с 1-го по 5-ый символ. Обрати внимание как и в циклах нужно указать число на 1 больше - 6\na = s[1:6]\nprint(a)\n# Срез с 3-го символа до конца строки.\nprint(s[3:])\n# Срез с начала строки до 6-го символа.\nprint(s[:7])\n# Срез с 3-го символа с начала строки до 4 символа, считая с конца строки\nprint(s[3:-4])\n# Срез с 3-го символа(считая с конца строки) до конца строки\nprint(s[-3:])",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка. Напечатай строку, состоящую из трех первых и трех последних символов строки",tasktype:"task",id:2,rightcode:"line = input()\ns = line[:3] + line[-3:]\nprint(s)",defaultcode:"",defaultinput:["Перевоплощение"],defaultoutput:["Перние"],inout: [{inv:["Перевоплощение"],outv:["Перние"]},{inv:["Владивосток"],outv:["Влаток"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "input", "]", "["],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Срежь с каждой строки по 5 символов, результат напечатай",tasktype:"task",id:3,rightcode:"n = int(input())\nfor i in range(n):\n    line = input()\n    print(line[:5])",defaultcode:"",defaultinput:["3", "комната", "квартира", "улица"],defaultoutput:["комна", "кварт", "улица"],inout: [{inv:["3", "комната", "квартира", "улица"],outv:["комна", "кварт", "улица"]},{inv:["4", "комната", "квартира", "улица", "поселок"],outv:["комна", "кварт", "улица", "посел"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "input", "]", "["],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка из четного количества символов. Добавь тире посередине. Используй срезы",tasktype:"task",id:4,rightcode:"line = input()\nmid = len(line) // 2\nprint(line[:mid] + '-' + line[mid:])",defaultcode:"",defaultinput:["дорога"],defaultoutput:["дор-ога"],inout: [{inv:["дорога"],outv:["дор-ога"]},{inv:["квартира"],outv:["квар-тира"]}],restrictions: {maxlines:5,forbidden:[],forbiddenRe:[],musthave:["print", "input", "]", "["],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка символов. Замени последние три символа на восклицательный знак. Используй срезы",tasktype:"task",id:5,rightcode:"line = input()\nprint(line[:-3] + '!')",defaultcode:"",defaultinput:["дорога"],defaultoutput:["дор!"],inout: [{inv:["дорога"],outv:["дор!"]},{inv:["квартира"],outv:["кварт!"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "input", "]", "["],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"Изучи программу",tasktype:"guide",id:6,rightcode:"pass",defaultcode:"# В срезах можно использовать третье число - шаг\ns = 'параллелепипед'\n# Срез с 1-го по 5-ый символ c шагом 2, то есть питон вырежет 1, 3 и 5 символы\na = s[1:6:2]\nprint(a)\n# Срез с начала до конца c шагом 3, то есть питон вырежет символы 0, 3, 6 и так далее\nprint(s[::3])\n# Есть еще вот такая хитрая штука. Выполни программу и посмотри на результат, ты будешь часто использовать такой фокус\nprint(s[::-1])\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка символов. Удали каждый второй символ. Результат напечатай. Используй срезы",tasktype:"task",id:7,rightcode:"line = input()\nprint(line[::2])",defaultcode:"",defaultinput:["дорога"],defaultoutput:["дрг"],inout: [{inv:["дорога"],outv:["дрг"]},{inv:["квартира"],outv:["катр"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "input", "]", "["],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка символов. Вырежи каждый третий символ . Результат разверни в обратную сторону. Используй срезы",tasktype:"task",id:8,rightcode:"line = input()\na = line[2::3]\nprint(a[::-1])",defaultcode:"",defaultinput:["123456789"],defaultoutput:["963"],inout: [{inv:["123456789"],outv:["963"]},{inv:["123456789XYZ"],outv:["Z963"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["print", "input", "]", "["],musthaveRe:[],}},{chapterid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"В поле 'Входные данные' содержится строка цифр. Вырежи каждый второй символ . Найди сумму вырезанных цифр. Используй срезы",tasktype:"task",id:9,rightcode:"line = input()\na = line[2::2]\nsumm = 0\nfor el in a:\n    summ = summ + int(el)\nprint(summ)",defaultcode:"",defaultinput:["413134224"],defaultoutput:["12"],inout: [{inv:["413134224"],outv:["12"]},{inv:["34525234"],outv:["13"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "input", "]", "["],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# В данной главе мы научимся использовать методы строк\n# Методы - это особые функции, которые пишутся через точку и применяются к тому объекту для которого вызываются\n# Сложновато звучит, но на примерах станет понятно\n\n# Метод count\ns = 'параллелепипед'\n# Метод count считает количество подстрок в строке. Подстрока-это просто набор символов\nn = s.count('п')\nprint('Количество букв п в строке', s, 'равно', n)\ns = 'AABBAABB'\nn = s.count('AA')\nprint('Количество подстрок АА в строке', s, 'равно', n)\n\n# Метод replace\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\n# Метод replace заменяет в строке одну подстроку на другую\ns = s.replace('Червяк', 'Жук')\nprint(s)\n# Важно! Если написать просто вот так s.replace('Червяк', 'Жук'), замена не будет произведена\n# Нужно именно вот так: s=s.replace('Червяк', 'Жук')\n\n# Можно указать сколько замен нужно сделать\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук', 1)\nprint(s)\n\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук', 2)\nprint(s)\n\n# Можно сделать несколько замен одновременно\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук').replace('Комар', 'Муха')\nprint(s)\n\n# А еще метод replace можно использовать для удаления символов\ns = '000000011111001010101111'\ns = s.replace('0', '')\nprint(s)\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится набор строк. В первой строке-их количество. Подсчитай сколько в каждой строке букв 'а'. Результат сложи и напечатай",tasktype:"task",id:2,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    line = input()\n    summ = summ + line.count('а')\nprint(summ)",defaultcode:"",defaultinput:["3", "трава", "дорога", "корова"],defaultoutput:["4"],inout: [{inv:["3", "трава", "дорога", "корова"],outv:["4"]},{inv:["2", "аа", "ааа"],outv:["5"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится набор строк. В первой строке-их количество. Подсчитай сколько в каждой строке букв 'а'. Результат сложи и напечатай",tasktype:"task",id:3,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    line = input()\n    summ = summ + line.count('а')\nprint(summ)",defaultcode:"",defaultinput:["3", "трава", "дорога", "корова"],defaultoutput:["4"],inout: [{inv:["3", "трава", "дорога", "корова"],outv:["4"]},{inv:["2", "аа", "ааа"],outv:["5"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "int", "in"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Замени все цифры 7 на цифры 8, все цифры 8 на цифру 7. Используй метод replace. Подсказка: сначала замени одну из цифр на звездочку или любой другой символ, который не является цифрой",tasktype:"task",id:4,rightcode:"s = input()\ns = s.replace('7', '*')\ns = s.replace('8', '7')\ns = s.replace('*', '8')\nprint(s)",defaultcode:"",defaultinput:["9777888"],defaultoutput:["9888777"],inout: [{inv:["9777888"],outv:["9888777"]},{inv:["667788"],outv:["668877"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Замени все цифры 7 на цифры 8, все цифры 8 на цифру 7. Используй метод replace. Подсказка: сначала замени одну из цифр на звездочку или любой другой символ, который не является цифрой",tasktype:"task",id:5,rightcode:"s = input()\ns = s.replace('7', '*')\ns = s.replace('8', '7')\ns = s.replace('*', '8')\nprint(s)",defaultcode:"",defaultinput:["9777888"],defaultoutput:["9888777"],inout: [{inv:["9777888"],outv:["9888777"]},{inv:["667788"],outv:["668877"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится строка из заглавных букв. Замени первые три первые буквы R на тире. Используй метод replace.",tasktype:"task",id:6,rightcode:"s = input()\ns = s.replace('R', '-', 3)\nprint(s)",defaultcode:"",defaultinput:["YYYRYYYRRRRR"],defaultoutput:["YYY-YYY--RRR"],inout: [{inv:["YYYRYYYRRRRR"],outv:["YYY-YYY--RRR"]},{inv:["RRRRYY"],outv:["---RYY"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' в первой строке содержится число M, во второй - число N. Замени первые M цифр 8 числа N на тире. Используй метод replace.",tasktype:"task",id:7,rightcode:"m = int(input())\ns = input()\ns = s.replace('8', '-', m)\nprint(s)",defaultcode:"",defaultinput:["2", "7777888889999"],defaultoutput:["7777--8889999"],inout: [{inv:["2", "7777888889999"],outv:["7777--8889999"]},{inv:["1", "7788883"],outv:["77-8883"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Удали все цифры 8 из числа. Полученное число раздели нацело на 9. Результат напечатай. Используй метод replace.",tasktype:"task",id:8,rightcode:"s = input()\ns = s.replace('8', '')\nn = int(s) // 9\nprint(n)",defaultcode:"",defaultinput:["998888899"],defaultoutput:["1111"],inout: [{inv:["998888899"],outv:["1111"]},{inv:["9889887"],outv:["110"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "replace"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Замени все нули на двойки, сложи все цифры полученного числа. Результат напечатай. Используй метод replace.",tasktype:"task",id:9,rightcode:"s = input()\ns = s.replace('0', '2')\nsumm = 0\nfor d in s:\n    summ = summ + int(d)\nprint(summ)",defaultcode:"",defaultinput:["0022200"],defaultoutput:["14"],inout: [{inv:["0022200"],outv:["14"]},{inv:["022"],outv:["6"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "replace", "for"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится число. Возьми первую цифру числа. Подсчитай сколько таких цифр в числе. Результат напечатай. Используй метод count",tasktype:"task",id:10,rightcode:"s = input()\nfirst = s[0]\ncnt = s.count(first)\nprint(cnt)",defaultcode:"",defaultinput:["998888899"],defaultoutput:["4"],inout: [{inv:["998888899"],outv:["4"]},{inv:["9889887"],outv:["2"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "count"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' содержится строка из символов. Сколько раз встречается самая часто встречающаяся буква. Результат напечатай. Используй метод count. Подсказка: вспомни алгоритм поиска максимального значения",tasktype:"task",id:11,rightcode:"s = input()\nmaxx = 0\nfor sym in s:\n    cnt = s.count(sym)\n    if cnt > maxx:\n        maxx = cnt\nprint(maxx)",defaultcode:"",defaultinput:["AACCCCCBB"],defaultoutput:["5"],inout: [{inv:["AACCCCCBB"],outv:["5"]},{inv:["ABB"],outv:["2"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "count", "for"],musthaveRe:[],}},{chapterid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"В поле 'Входные данные' строка из символов. Найди самую часто встречающуюся букву. Результат напечатай. Используй метод count.",tasktype:"task",id:12,rightcode:"s = input()\nmaxx = 0\nmaxxSym = ''\nfor sym in s:\n    cnt = s.count(sym)\n    if cnt > maxx:\n        maxx = cnt\n        maxxSym = sym\nprint(maxxSym)",defaultcode:"",defaultinput:["AACCCCCBB"],defaultoutput:["C"],inout: [{inv:["AACCCCCBB"],outv:["C"]},{inv:["ABB"],outv:["B"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "count", "for"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Изучим еще несколько полезных методов строк\n\n# Метод find\ns = 'параллелепипед'\n# Метод find находит подстроку в строке и возвращает её индекс\n# Если считать слева направо буква 'п' начинается с 0 индекса, поэтому find вернет 0\nn = s.find('п')\nprint(n)\n# Если считать слева направо буква 'л' начинается с 5 индекса, поэтому find вернет 5\nprint(s.find('п'))\n# Если считать слева направо символы 'леп' начинаются с 7 индекса, поэтому find вернет 7\nprint(s.find('леп'))\n# А вот сочетания символов 'лепа' нет в строке поэтому find вернет -1\nprint(s.find('лепа'))\n\n# Существует также метод rfind, которые делает тоже самое, но поиск осуществляет справа налево\n# Cравни:\nn = s.find('п')\nm = s.rfind('п')\nprint(n, m)\nn = s.find('леп')\nm = s.rfind('леп')\nprint(n, m)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. Напечатай все символы, начиная с первого появления Z до последнего появления Z. Используй только методы строк и срезы",tasktype:"task",id:2,rightcode:"s = input()\nstart = s.find('Z')\nend = s.rfind('Z')\nprint(s[start:end + 1])",defaultcode:"",defaultinput:["WWWWWWZWWWWZWWWZWW"],defaultoutput:["ZWWWWZWWWZ"],inout: [{inv:["WWWWWWZWWWWZWWWZWW"],outv:["ZWWWWZWWWZ"]},{inv:["WZWZWZW"],outv:["ZWZWZ"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int", "in"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. Удали все символы, начиная с первого появления Z до последнего появления Z. Используй только методы строк и срезы",tasktype:"task",id:3,rightcode:"s = input()\nstart = s.find('Z')\nend = s.rfind('Z')\nprint(s[:start + 1] + s[end:])",defaultcode:"",defaultinput:["WWWWWWZWWWWZWWWZWW"],defaultoutput:["WWWWWWZZWW"],inout: [{inv:["WWWWWWZWWWWZWWWZWW"],outv:["WWWWWWZZWW"]},{inv:["WZWZWZW"],outv:["WZZW"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int", "in"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. Замени все символы, начиная с первого появления Z до последнего появления Z на тире. Используй только методы строк и срезы",tasktype:"task",id:4,rightcode:"s = input()\nstart = s.find('Z')\nend = s.rfind('Z')\nprint(s[:start] + '-' * (end - start + 1) + s[end + 1:])",defaultcode:"",defaultinput:["WWWWWWZWWWWZWWWZWW"],defaultoutput:["WWWWWW----------WW"],inout: [{inv:["WWWWWWZWWWWZWWWZWW"],outv:["WWWWWW----------WW"]},{inv:["WZWZWZW"],outv:["W-----W"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int", "in"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если в числе содержится 0, то добавь его в сумму. Напечатай получившуюся сумму.  Используй  метод find",tasktype:"task",id:5,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    s = input()\n    if s.find('0') != -1:\n        summ = summ + int(s)\nprint(summ)",defaultcode:"",defaultinput:["3", "100", "88", "202"],defaultoutput:["302"],inout: [{inv:["3", "100", "88", "202"],outv:["302"]},{inv:["4", "100", "88", "202", "20"],outv:["322"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "find"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Все числа не превышают 1000000. Найди минимальную позицию нуля среди всех строк, если считать слева.  Используй  метод find",tasktype:"task",id:6,rightcode:"n = int(input())\nminn = 10\nfor i in range(n):\n    s = input()\n    pos = s.find('0')\n    if pos < minn:\n        minn = pos\nprint(minn)",defaultcode:"",defaultinput:["3", "1111100", "1111000", "110000"],defaultoutput:["2"],inout: [{inv:["3", "1111100", "1111000", "110000"],outv:["2"]},{inv:["4", "100", "1100", "1100", "1100"],outv:["1"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "find"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"Изучи программу",tasktype:"guide",id:7,rightcode:"pass",defaultcode:"# Метод strip удаляет пробелы в начале и в конце строки:\ns = '      п    д     '\nn = s.strip()\nprint(n)\n# Если в скобках указать какие-либо символы, он будет удалять их в начале и в конце строки:\ns = '*****п*****д****'\nprint(s.strip('*'))\ns = '*$$****п***$**д**$**$'\nprint(s.strip('*$'))",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. В строке как минимум 2 буквы Z. Напечатай символы начиная с первой Z по последнюю , включая сами Z. Используй только метод strip",tasktype:"task",id:8,rightcode:"s = input()\nprint(s.strip('W'))",defaultcode:"",defaultinput:["WWWWWWZWWWWZWWWZ"],defaultoutput:["ZWWWWZWWWZ"],inout: [{inv:["WWWWWWZWWWWZWWWZ"],outv:["ZWWWWZWWWZ"]},{inv:["WZWZWZW"],outv:["ZWZWZ"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int", "strip"],musthaveRe:[],}},{chapterid:"857da1bd-a404-4fff-a5f8-a58050c72fff",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"В поле 'Входные данные' содержится строка из букв Z и W. В строке как минимум 2 буквы Z. Напечатай символы начиная с первой Z по последнюю , не включая сами Z. Используй метод strip и срез",tasktype:"task",id:9,rightcode:"s = input()\nline = s.strip('W')\nprint(line[1:-1])",defaultcode:"",defaultinput:["WWWWWWZWWWWZWWWZ"],defaultoutput:["WWWWZWWW"],inout: [{inv:["WWWWWWZWWWWZWWWZ"],outv:["WWWWZWWW"]},{inv:["WZWZWZW"],outv:["WZW"]}],restrictions: {maxlines:3,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int", "strip"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Новая тема Сложные условия\n\n# Изучим новую тему на примере решения задач\ns = 'Альфа-Кентавра'\n# Напечатай 'Да' если в строке есть одновременно и буква 'А' и буква 'К'\nn = s.count('А')\nm = s.count('К')\nif n > 0 and m > 0:\n    print('ДА')\n# and объединяет два условия в одно и следит за тем, что оба условия выполнены\n\n# Напечатай Да если в строке есть или буква 'А' или буква 'Ф'\nn = s.count('А')\nm = s.count('Ф')\nif n > 0 or m > 0:\n    print('ДА')\n# or объединяет два условия в одно и следит за тем, что хотя бы одно условие выполнено\n\n# В сложном условии можно писать неограниченное число and и or\n# Напечатай 'Да' если в строке есть или буква 'А' или буква 'Ф' или буква 'М'\nn = s.count('А')\nm = s.count('Ф')\nk = s.count('М')\nif n > 0 or m > 0 or k > 0:\n    print('ДА')\n\n# Можно комбинировать and и or\n# Напечатай Да если в строке есть (буква 'А' или буква 'Ф') и тире 'М'\nn = s.count('А')\nm = s.count('Ф')\nk = s.count('-')\nif (n > 0 or m > 0) and k > 0:\n    print('ДА')\n# Вокруг условия (n > 0 or m > 0) стоят круглые скобки, а всё потому, что если их не поставить питон сначала проверит выполняется ли условие m > 0 and k>0\n# Если говорить научным языком, у операции and более высокий приоритет чем у or, как в математике, где у умножения более высокий приоритет, чем у сложения",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В поле 'Входные данные' содержится строка. Напечатай Да, если в строке есть и символ W и символ Z и символ J. В противном случае напечатай Нет",tasktype:"task",id:2,rightcode:"s = input()\nif s.count('W') > 0 and s.count('Z') > 0 and s.count('J') > 0:\n    print('Да')\nelse:\n    print('Нет')",defaultcode:"",defaultinput:["WWWWWWZWWWWZWWJWZWW"],defaultoutput:["Да"],inout: [{inv:["WWWWWWZWWWWZWWJWZWW"],outv:["Да"]},{inv:["WZWZWZW"],outv:["Нет"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В поле 'Входные данные' содержится строка. Напечатай Да, если в строке есть символ W или символ Z, но не оба одновременно. В противном случае напечатай Нет",tasktype:"task",id:3,rightcode:"s = input()\nif s.count('W') > 0 and s.count('Z') == 0 or s.count('W') == 0 and s.count('Z') > 0:\n    print('Да')\nelse:\n    print('Нет')",defaultcode:"",defaultinput:["WWWWWWWWWWWWJWWW"],defaultoutput:["Да"],inout: [{inv:["WWWWWWWWWWWWJWWW"],outv:["Да"]},{inv:["WZWZWZW"],outv:["Нет"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Напечатай 'Да', если среди строк есть имя 'Петр' или имя 'Ваня'. В противном случае напечатай 'Нет'. Используй флаг.",tasktype:"task",id:4,rightcode:"n = int(input())\nflag = 0\nfor i in range(n):\n    s = input()\n    if s == 'Ваня' or s == 'Петя':\n        flag = 1\nif flag == 1:\n    print('Да')\nelse:\n    print('Нет')",defaultcode:"",defaultinput:["3", "Петр", "Маша", "Ваня"],defaultoutput:["Да"],inout: [{inv:["3", "Петр", "Маша", "Ваня"],outv:["Да"]},{inv:["2", "Женя", "Маша"],outv:["Нет"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Напечатай 'Да', если среди строк есть и имя 'Петр' и имя 'Ваня'. В противном случае напечатай 'Нет'. Подсказка: используй 2 флага.",tasktype:"task",id:5,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    s = int(input())\n    if s % 3 == 0 and s > 7:\n        summ = summ + s\nprint(summ)",defaultcode:"",defaultinput:["3", "Петр", "Маша", "Ваня"],defaultoutput:["Да"],inout: [{inv:["3", "Петр", "Маша", "Ваня"],outv:["Да"]},{inv:["2", "Петр", "Маша"],outv:["Нет"]}],restrictions: {maxlines:14,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если число кратно трем и больше 7, то добавь его в сумму. Напечатай получившуюся сумму",tasktype:"task",id:5,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    s = int(input())\n    if s % 3 == 0 and s > 7:\n        summ = summ + s\nprint(summ)",defaultcode:"",defaultinput:["4", "9", "3", "7", "12"],defaultoutput:["21"],inout: [{inv:["4", "9", "3", "7", "12"],outv:["21"]},{inv:["4", "12", "3", "12", "7"],outv:["24"]}],restrictions: {maxlines:14,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Добавь в сумму следующие числа 1)кратные трем и большие 7, 2)оканчивающиеся на 2, 3) двузначные. Напечатай получившуюся сумму",tasktype:"task",id:6,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    s = int(input())\n    if (s % 3 == 0 and s > 7) or s % 10 == 2 or len(str(s)) == 2:\n        summ = summ + s\nprint(summ)",defaultcode:"",defaultinput:["5", "9", "2", "7", "12", "10"],defaultoutput:["33"],inout: [{inv:["5", "9", "2", "7", "12", "10"],outv:["33"]},{inv:["6", "2", "9", "7", "24", "10", "11"],outv:["56"]}],restrictions: {maxlines:14,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"Изучи программу",tasktype:"guide",id:7,rightcode:"pass",defaultcode:"# В программировании невероятно часто используется отрицание not\n# Отрицание превращает невыполняющееся условие в выполняющееся и наоборот-превращает выполняющееся условие в невыполняющееся\na = 18\n# Условие выполняется, печатается ДА\nif a > 11:\n    print('ДА')\nelse:\n    print('НЕТ')\n# Условие не выполняется, печатается НЕТ\nif not a > 11:\n    print('ДА')\nelse:\n    print('НЕТ')\n# Сложное условие выполняется, печатается ДА\nif a > 11 and a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n# Сложное не выполняется, печатается НЕТ. Обрати внимание, что вокруг сложного условия стоят круглые скобки, иначе not применится только к первому условию\nif not (a > 11 and a % 2 == 0):\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие выполняется, печатается ДА\nif a > 100 or a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n# Сложное условие не выполняется, печатается НЕТ.\nif a > 11 or not a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Добавь в сумму следующие числа: не кратные трем и не оканчивающиеся на 2 и не двузначные. Используй отрицание not. Напечатай получившуюся сумму",tasktype:"task",id:8,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    s = int(input())\n    if not s % 3 == 0 and not s % 10 == 2 and not len(str(s)) == 2:\n        summ = summ + s\nprint(summ)",defaultcode:"",defaultinput:["5", "9", "2", "7", "12", "5"],defaultoutput:["12"],inout: [{inv:["5", "9", "2", "7", "12", "5"],outv:["12"]},{inv:["6", "2", "9", "7", "24", "10", "4"],outv:["11"]}],restrictions: {maxlines:14,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "not", "%"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Добавь в сумму все числа, кроме: кратные трем и оканчивающиеся на 2 и двузначные. Используй отрицание not. Напечатай получившуюся сумму",tasktype:"task",id:9,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    s = int(input())\n    if not (s % 3 == 0 and s % 10 == 2 and len(str(s)) == 2):\n        summ = summ + s\nprint(summ)",defaultcode:"",defaultinput:["5", "9", "2", "7", "12", "5"],defaultoutput:["23"],inout: [{inv:["5", "9", "2", "7", "12", "5"],outv:["23"]},{inv:["6", "2", "9", "7", "24", "10", "4"],outv:["56"]}],restrictions: {maxlines:14,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "not", "%"],musthaveRe:[],}},{chapterid:"81525cb9-c322-40b3-a442-44011c2e90c9",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Напечатай все имена, кроме Петр и Ваня. Используй отрицание not.",tasktype:"task",id:10,rightcode:"n = int(input())\nflag1 = 0\nflag2 = 0\nfor i in range(n):\n    s = input()\n    if not (s == 'Ваня' or s == 'Петр'):\n        print(s)",defaultcode:"",defaultinput:["3", "Петр", "Маша", "Ваня"],defaultoutput:["Маша"],inout: [{inv:["3", "Петр", "Маша", "Ваня"],outv:["Маша"]},{inv:["2", "Петр", "Мария"],outv:["Мария"]}],restrictions: {maxlines:14,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Предположим в поле 'Входные данные' содержится неопределенное количество строк, то есть мы не знаем их количество.\n# Мы лишь знаем что самая последняя строка равна звездочке *\n# Как считать все строки? Нам поможет новый тип цикла - while.\ns = input()\nwhile s != '*':\n    print(s)\n    s = input()\n# Цикл while выполняется пока выполняется условие, которое идет после while, в нашем примере s!='*'\n\n# В цикле while можно использовать сложные условия\ns = input()\nwhile s != '*' and s != 'Саша':\n    print(s)\n    s = input()\n\n# Цикл while довольно опасный вид цикла, программа будет выполняться бесконечно, если не выполнилось условия остановки\n# Если это все таки произошло, просто обнови страницу браузера и программа остановится",defaultinput:["Петя", "Ваня", "Саша", "*"],defaultoutput:[],inout: [{inv:["Петя", "Ваня", "Саша", "*"],outv:[]},{inv:["Петя", "Ваня", "Саша", "*"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символ @.  Все числа не превышают 100. Найди минимальное число",tasktype:"task",id:2,rightcode:"s = input()\nminn = 100\nwhile s != '@':\n    if int(s) < minn:\n        minn = int(s)\n    s = input()\nprint(minn)",defaultcode:"",defaultinput:["12", "5", "17", "8", "@"],defaultoutput:["5"],inout: [{inv:["12", "5", "17", "8", "@"],outv:["5"]},{inv:["99", "100", "100", "100", "@"],outv:["99"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символ @.  Подсчитай количество чисел кратных 7 и не начинающихся на 1",tasktype:"task",id:3,rightcode:"s = input()\ncnt = 0\nwhile s != '@':\n    if s[0] != '1' and int(s) % 7 == 0:\n        cnt = cnt + 1\n    s = input()\nprint(cnt)",defaultcode:"",defaultinput:["7", "21", "14", "14", "@"],defaultoutput:["2"],inout: [{inv:["7", "21", "14", "14", "@"],outv:["2"]},{inv:["7", "14", "21", "7", "67", "14", "@"],outv:["3"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символ @. Все числа не превышают 100. Найди максимальное число, не начинающееся на 9",tasktype:"task",id:4,rightcode:"s = input()\nmaxx = 0\nwhile s != '@':\n    if int(s) > maxx and not s[0] == '9':\n        maxx = int(s)\n    s = input()\nprint(maxx)",defaultcode:"",defaultinput:["12", "5", "99", "8", "@"],defaultoutput:["12"],inout: [{inv:["12", "5", "99", "8", "@"],outv:["12"]},{inv:["12", "5", "99", "88", "@"],outv:["88"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор строк, в последней строке - символ @.  Найди максимальную длину строки, которая не содержит букву Z",tasktype:"task",id:5,rightcode:"s = input()\nmaxx = 0\nwhile s != '@':\n    if len(s) > maxx and s.find('Z') == -1:\n        maxx = len(s)\n    s = input()\nprint(maxx)",defaultcode:"",defaultinput:["AAW", "AAAAAA", "AAAA", "AAAAAAAAAAZ", "@"],defaultoutput:["6"],inout: [{inv:["AAW", "AAAAAA", "AAAA", "AAAAAAAAAAZ", "@"],outv:["6"]},{inv:["AAW", "AAAAAA", "AWWWWWAAA", "AAAAAAAAAAZ", "@"],outv:["9"]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"168294f2-b0c6-41a4-975f-1182e54f6097",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"В поле 'Входные данные' содержится набор строк, в последней строке - символ @.  Напечатай 'Да', если среди строк есть строка начинающаяся на 'Привет' ",tasktype:"task",id:6,rightcode:"s = input()\nflag = 0\nwhile s != '@':\n    if s[:6] == 'Привет':\n        flag = 1\n    s = input()\nif flag == 1:\n    print('Да')",defaultcode:"",defaultinput:["Все хорошо", "Привет, Иван!", "Ну, привет", "@"],defaultoutput:["Да"],inout: [{inv:["Все хорошо", "Привет, Иван!", "Ну, привет", "@"],outv:["Да"]},{inv:["Все хорошо", "Вот! Привет, Иван!", "Ну, привет", "@"],outv:[]}],restrictions: {maxlines:10,forbidden:["for"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# На данный момент мы знаем следующие способы проверки условий >, <, >=, <=, ==, !=\n# Есть еще один способ - in\n# Возьмем произвольный набор символов\ns = 'ABCD'\nif 'A' in s:\n    print('A', 'содержится в строке', s)\nelse:\n    print('A', 'не содержится в строке', s)\n# Условие if 'A' in s читается так-если 'A' содержится в s\n\n# Еще пример\nif 'AA' in s:\n    print('AА', 'содержится в строке', s)\nelse:\n    print('AA', 'не содержится в строке', s)\n\n# Можно применять сложные условия\nif 'A' in s and 'B' in s:\n    print('A и B', 'содержатся в строке', s)\nelse:\n    print('A и B', 'вместе не содержатся в строке', s)\n# Отметим, что данный способ удобнее, чем использование методов find и count",defaultinput:["Петя", "Ваня", "Саша", "*"],defaultoutput:[],inout: [{inv:["Петя", "Ваня", "Саша", "*"],outv:[]},{inv:["Петя", "Ваня", "Саша", "*"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если в числе содержится 0, то добавь его в сумму. Напечатай получившуюся сумму.  Используй  in",tasktype:"task",id:2,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    s = input()\n    if '0' in s:\n        summ = summ + int(s)\nprint(summ)",defaultcode:"",defaultinput:["3", "100", "88", "202"],defaultoutput:["302"],inout: [{inv:["3", "100", "88", "202"],outv:["302"]},{inv:["4", "100", "88", "202", "20"],outv:["322"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", " in "],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"В поле 'Входные данные' содержится набор строк, в последней строке - символ @.  Найди максимальную длину строки, которая не содержит букву Z. Используй  in.",tasktype:"task",id:3,rightcode:"s = input()\nmaxx = 0\nwhile s != '@':\n    if len(s) > maxx and not 'Z' in s:\n        maxx = len(s)\n    s = input()\nprint(maxx)",defaultcode:"",defaultinput:["AAW", "AAAAAA", "AAAA", "AAAAAAAAAAZ", "@"],defaultoutput:["6"],inout: [{inv:["AAW", "AAAAAA", "AAAA", "AAAAAAAAAAZ", "@"],outv:["6"]},{inv:["AAW", "AAAAAA", "AWWWWWAAA", "AAAAAAAAAAZ", "@"],outv:["9"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"В поле 'Входные данные' содержится набор строк, в последней строке - символ @.  Напечатай 'Да', если среди строк есть строка начинающаяся на 'Привет'. Используй  in",tasktype:"task",id:4,rightcode:"s = input()\nflag = 0\nwhile s != '@':\n    if 'Привет' in s:\n        flag = 1\n    s = input()\nif flag == 1:\n    print('Да')",defaultcode:"",defaultinput:["Все хорошо", "Ну, Привет, Иван!", "Ну, привет", "@"],defaultoutput:["Да"],inout: [{inv:["Все хорошо", "Ну, Привет, Иван!", "Ну, привет", "@"],outv:["Да"]},{inv:["Все хорошо", "Вот! Hi, Иван!", "Ну, hello", "@"],outv:[]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int"],musthaveRe:[],}},{chapterid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"В поле 'Входные данные' содержится строка из повторяющихся букв. Создай новую строку с уникальными буквами и напечатай ее. Используй  in",tasktype:"task",id:5,rightcode:"s = input()\nm = ''\nfor el in s:\n    if el not in m:\n        m = m + el\nprint(m)",defaultcode:"",defaultinput:["AAABAABBBBBBCCCCCB"],defaultoutput:["ABC"],inout: [{inv:["AAAAABBBBBBCCCCC"],outv:["ABC"]},{inv:["AAAAADBBBBBBCFCCCC"],outv:["ADBCF"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", " in "],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# На данный момент мы знаем следующие типы данных: целые числа, дробные числа, строки\n# Изучим новый тип данных - списки\n# Для начала нужно создать новый пустой список a=[]\na = []\n# затем его нужно наполнить. Для этого есть специальный метод append\na.append(5)\na.append('Иван')\na.append(0.1)\nprint(a)\n# Напечатанное выглядит вот так [5, 'Иван', 0.1]\n# Так что такое список? Список - это тип данных, который позволяет хранить множество значений в одной переменной\n\n# Как и в строках для получения доступа к элементам используются индексы:\nprint(a[1])\nprint(a[-1])\n\n# Напечатаем все значения списка. Это делается аналогично строкам!\n\n# Способ 1\nfor el in a:\n    print(el)\n\n# Способ 2\n# Функция len работает также как в строках - возвращает длину списка\nL = len(a)\nfor i in range(L):\n    print(a[i])\n\n# Найдем максимальное значение чисел во входных данных\nfor i in range(4):\n    a.append(int(input()))\nmaxx = 0\nfor el in a:\n    if el > maxx:\n        maxx = el\nprint(maxx)",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа. Если в числе содержится 0, то добавь его в список. Напечатай третий элемент списка.",tasktype:"task",id:2,rightcode:"n = int(input())\na = []\nfor i in range(n):\n    s = input()\n    if '0' in s:\n        a.append(s)\nprint(a[2])",defaultcode:"",defaultinput:["4", "100", "880", "5", "202"],defaultoutput:["202"],inout: [{inv:["4", "100", "880", "5", "202"],outv:["202"]},{inv:["5", "100", "880", "5", "203", "500"],outv:["203"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", " in ", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символы $$$. Добавь все числа в список. Напечатай числа в обратном порядке",tasktype:"task",id:3,rightcode:"s = input()\na = []\nwhile s != '$$$':\n    a.append(s)\n    s = input()\nfor i in range(len(a), 0, -1):\n    print(a[i - 1])",defaultcode:"",defaultinput:["100", "880", "5", "202", "$$$"],defaultoutput:["202", "5", "880", "100"],inout: [{inv:["100", "880", "5", "202", "$$$"],outv:["202", "5", "880", "100"]},{inv:["0", "1", "2", "3", "$$$"],outv:["3", "2", "1", "0"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", " in ", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В первой строке поля 'Входные данные' содержится количество чисел, далее сами числа. Количество чисел нечетное. Напечатай сумму трех чисел посередине списка(среднее, число слева от среднего, число справа от среднего",tasktype:"task",id:4,rightcode:"n = int(input())\na = []\nsumm = 0\nfor i in range(n):\n    a.append(int(input()))\nmid = len(a) // 2\nprint(a[mid - 1] + a[mid] + a[mid + 1])",defaultcode:"",defaultinput:["5", "1", "4", "3", "7", "5"],defaultoutput:["14"],inout: [{inv:["5", "1", "4", "3", "7", "5"],outv:["14"]},{inv:["5", "1", "1", "30", "2", "5"],outv:["33"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", " in ", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Во первой строке поля 'Входные данные' содержитсячетное количество чисел, далее идут сами числа. Умножь первое число на последнее, второе на предпоследнее и так далее, произведения  сложи и напечатай",tasktype:"task",id:5,rightcode:"n = int(input())\na = []\nsumm = 0\nfor i in range(n):\n    a.append(int(input()))\nmid = len(a) // 2\nfor i in range(mid):\n    summ = summ + a[i] * a[-i - 1]\nprint(summ)",defaultcode:"",defaultinput:["4", "1", "2", "3", "4"],defaultoutput:["10"],inout: [{inv:["4", "1", "2", "3", "4"],outv:["10"]},{inv:["4", "0", "1", "2", "3"],outv:["2"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", " in ", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Изучи программу",tasktype:"guide",id:6,rightcode:"pass",defaultcode:"for i in range(n):\n    a.append(int(input()))\n\n# Как и в строках для получения доступа к элементам также используются срезы:\nprint(a[1:-1])\nprint(a[::-1])\n\n# Срез можно сохранить в другую переменную и использовать в дальнейшем\nb = a[2::2]\n\n# Настала пора изучить одни из самых полезных функций, которые экономят много времени при программировании\n# Максимальное число в списке\nmaxx = max(a)\nprint(maxx)\n# Минимальное число в списке\nprint(min(a))\n# Сумма чисел в списке\nprint(sum(maxx))",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символы $$$. Добавь все числа в список. Найди минимальное число и напечатай. Используй функцию min",tasktype:"task",id:7,rightcode:"s = input()\na = []\nwhile s != '$$$':\n    a.append(int(s))\n    s = input()\nprint(min(a))",defaultcode:"",defaultinput:["100", "880", "5", "202", "$$$"],defaultoutput:["5"],inout: [{inv:["100", "880", "5", "202", "$$$"],outv:["5"]},{inv:["0", "1", "2", "3", "$$$"],outv:["0"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "min(", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В поле 'Входные данные' содержится набор чисел, в последней строке - символы $$$. Добавь все числа кратные 2 в список. Найди сумму полученных чисел и напечатай. Используй функцию sum",tasktype:"task",id:8,rightcode:"s = input()\na = []\nwhile s != '$$$':\n    n = int(s)\n    if n % 2 == 0:\n        a.append(n)\n    s = input()\nprint(sum(a))",defaultcode:"",defaultinput:["100", "881", "5", "20", "$$$"],defaultoutput:["120"],inout: [{inv:["100", "881", "5", "20", "$$$"],outv:["120"]},{inv:["0", "1", "2", "3", "$$$"],outv:["2"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "sum(", "append", "[", "]", "%"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В первой строке поля 'Входные данные' содержится количество строк, далее идут сами строки. Найди длину самой длинной строки. Используй функцию max",tasktype:"task",id:9,rightcode:"n = int(input())\na = []\nfor i in range(n):\n    a.append(len(input()))\nprint(max(a))",defaultcode:"",defaultinput:["4", "Сколько", "будет", "дважды два", "дважды два - четыре"],defaultoutput:["19"],inout: [{inv:["4", "Сколько", "будет", "дважды два", "дважды два - четыре"],outv:["19"]},{inv:["5", "AA", "AAA", "AAAAA", "AA", "A"],outv:["5"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "max(", "append", "[", "]"],musthaveRe:[],}},{chapterid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"В поле 'Входные данные' содержится некоторое четное количество чисел, в последней строке  - символы $$$. Возьми все числа из второй половины и найди минимальное среди них. Используй срезы",tasktype:"task",id:10,rightcode:"s = input()\na = []\nwhile s != '$$$':\n    a.append(int(s))\n    s = input()\nmid = len(a) // 2\nb = a[mid:]\nprint(min(b))",defaultcode:"",defaultinput:["100", "2", "5", "20", "$$$"],defaultoutput:["5"],inout: [{inv:["100", "2", "5", "20", "$$$"],outv:["5"]},{inv:["0", "1", "2", "3", "$$$"],outv:["2"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "min(", "append", "[", "]"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками, но у списков есть одно важное преимущество - списки можно редактировать\ns = 'Привет'\n# Следующий код выдаст ошибку, поэтому мы его закомментировали\n# s[0]='п'\ns = ['П', 'р', 'и', 'в', 'е', 'т']\ns[0] = 'п'\nprint('Заглавная буква П заменена на строчную п', s)\n\n# Рассмотрим следующую задачу. Есть две переменные, поменяем их значения местами, в других языках программирования для это потребуется третья переменная:\na = 5\nb = 10\nc = a\na = b\nb = c\nprint(a, b)\n# В питоне есть способ проще!\na = 5\nb = 10\na, b = b, a\nprint(a, b)\n\n# Поменяем местами первый и последний элемент списка.\ns = ['П', 'р', 'и', 'в', 'е', 'т']\ns[0], s[-1] = s[-1], s[0]\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится некоторое количество чисел, в последней строке символ @. Если количество чисел четное, то замени последнее число на 999, результат сложи и напечатай",tasktype:"task",id:2,rightcode:"s = input()\na = []\nwhile s != '@':\n    a.append(int(s))\n    s = input()\nif len(a) % 2 == 0:\n    a[-1] = 999\nprint(sum(a))",defaultcode:"",defaultinput:["100", "880", "5", "202", "@"],defaultoutput:["1984"],inout: [{inv:["100", "880", "5", "202", "@"],outv:["1984"]},{inv:["5", "100", "880", "@"],outv:["985"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "append", "[", "]", "sum"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится некоторое количество чисел, в последней строку символ @. Если если среди чисел есть число 999, то замени первое число на последнее, напечатай первое число списка",tasktype:"task",id:3,rightcode:"s = input()\na = []\nflag = 0\nwhile s != '@':\n    a.append(s)\n    if s == '999':\n        flag = 1\n    s = input()\nif flag == 1:\n    a[0], a[-1] = a[-1], a[0]\nprint(a[0])",defaultcode:"",defaultinput:["100", "880", "999", "202", "@"],defaultoutput:["202"],inout: [{inv:["100", "880", "999", "202", "@"],outv:["202"]},{inv:["5", "100", "880", "@"],outv:["5"]}],restrictions: {maxlines:12,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "append", "[", "]"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Изучи программу",tasktype:"guide",id:4,rightcode:"pass",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками, но у списков есть одно важное преимущество - списки можно редактировать\n# Изучим новую возможность строк\n# Пусть даны некоторые числа разделенные тире\na = '17-6-87-66'\n# Эту строку можно разделить на части и поместить в список. Для этого используется метод split(). В круглых скобках указывается разделитель\nb = a.split('-')\nprint(b)\n# Если значения разделены пробелом, то в круглых скобках вообще можно ничего не указывать\na = 'Иван Петр Дарья'\nprint(a.split())\n\n# Рассмотрим задачу. Даны числа, разделенные пробелом, найдем их сумму\na = '1 2 3 4 5'\nb = a.split()\n# Такой код выдаст ошибку, так как split создает список из строк, поэтому мы его закомментировали\n# print(sum(b))\n# Нужно как-то превратить каждую строку в число. Один из способов таков:\nfor i in range(len(b)):\n    b[i] = int(b[i])\nprint(sum(b))",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится строка с числами, разделенная пробелами. Напечатай минимальное число в списке",tasktype:"task",id:5,rightcode:"s = input()\nb = s.split()\nfor i in range(len(b)):\n    b[i] = int(b[i])\nprint(min(b))",defaultcode:"",defaultinput:["100 88 99 20"],defaultoutput:["20"],inout: [{inv:["100 88 99 20"],outv:["20"]},{inv:["5 100 880"],outv:["5"]}],restrictions: {maxlines:12,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "split", "[", "min"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится строка с числами, разделенная звездочками. Раздели каждое число целочисленно на 10, найди сумму. Используй методы split и sum",tasktype:"task",id:6,rightcode:"s = input()\nb = s.split('*')\nfor i in range(len(b)):\n    b[i] = int(b[i]) // 10\nprint(sum(b))",defaultcode:"",defaultinput:["10*88*99*20"],defaultoutput:["20"],inout: [{inv:["10*88*99*20"],outv:["20"]},{inv:["5*100*880"],outv:["98"]}],restrictions: {maxlines:12,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "split", "[", "sum"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится строка c городами, разделенная пробелами. Напечатай разницу между максимальной и минимальной длиной названия города.",tasktype:"task",id:7,rightcode:"s = input()\nb = s.split()\nfor i in range(len(b)):\n    b[i] = len(b[i])\nprint(max(b) - min(b))",defaultcode:"",defaultinput:["Париж Рим Лондон Ливерпуль"],defaultoutput:["6"],inout: [{inv:["Париж Рим Лондон Ливерпуль"],outv:["6"]},{inv:["Рим Милан"],outv:["2"]}],restrictions: {maxlines:6,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "split", "[", "max", "min"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится строка c городами, разделенная пробелами. Исключи города начинающиеся на 'М' из списка. Сложи все города получившегося списка и напечатай",tasktype:"task",id:8,rightcode:"s = input()\nb = s.split()\ns = ''\nfor i in range(len(b)):\n    a = b[i]\n    if a[0] != 'М':\n        s = s + b[i]\nprint(s)",defaultcode:"",defaultinput:["Париж Рим Лондон Москва Ливерпуль Милан"],defaultoutput:["ПарижРимЛондонЛиверпуль"],inout: [{inv:["Париж Рим Лондон Москва Ливерпуль Милан"],outv:["ПарижРимЛондонЛиверпуль"]},{inv:["Рим Милан"],outv:["Рим"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "split", "["],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится строка c числами, разделенная пробелами. Добавь в новый список числа меньшие 10. Напечатай минимальное число получившегося списка",tasktype:"task",id:9,rightcode:"s = input()\nb = s.split()\nr = []\nfor el in b:\n    if int(el) >= 10:\n        r.append(int(el))\nprint(min(r))",defaultcode:"",defaultinput:["5 6 2 15 60"],defaultoutput:["15"],inout: [{inv:["5 6 2 15 60"],outv:["15"]},{inv:["5 6 2 15 14"],outv:["14"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "split", "[", "split", "append"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится строка c подстроками, разделенными пробелами. Возьми подстроки содержащие две подряд буквы LL. Сложи все подстроки получившегося списка и напечатай",tasktype:"task",id:10,rightcode:"s = input()\nb = s.split()\ns = ''\nfor el in b:\n    if 'LL' in el:\n        s = s + el\nprint(s)",defaultcode:"",defaultinput:["MMLLLMM KKLKKK HHLHHL LLMM"],defaultoutput:["MMLLLMMLLMM"],inout: [{inv:["MMLLLMM KKLKKK HHLHHL LLMM"],outv:["MMLLLMMLLMM"]},{inv:["MMLL LLMM"],outv:["MMLLLLMM"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "split"],musthaveRe:[],}},{chapterid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Во входных данных содержится строка c числами, разделенная пробелами. К каждому числу добавь предыдущее, напечатай минимальное число получившегося списка. Используй функцию min",tasktype:"task",id:11,rightcode:"s = input()\nb = s.split()\nb[0] = int(b[0])\nfor i in range(1, len(b)):\n    b[i] = int(b[i]) + b[i - 1]\nprint(min(b))",defaultcode:"",defaultinput:["5 -6 2 -15 60"],defaultoutput:["-14"],inout: [{inv:["5 -6 2 -15 60"],outv:["-14"]},{inv:["-5 6 2 -15 14"],outv:["-12"]}],restrictions: {maxlines:10,forbidden:["find", "rfind", "count"],forbiddenRe:[],musthave:["print", "input", "int", "split", "["],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками...хм... где-то мы уже об этом говорили\n\n# Оператор in используется аналогично\ns = ['П', 'р', 'и', 'в', 'е', 'т']\nif 'р' in s:\n    print('Элемент', 'р', 'есть в списке')\n\n# count тоже работает\nprint(s.count('п'))\n\n# Существует полезный метод join, который объединяет элементы в строку.\n# Он применим к спискам, которые содержат только строки.\n# Метод выглядит довольно необычно, постарайся запомнить, он пригодится нам много раз.\nb = '-'.join(s)\nprint(b)\nb = ''.join(s)\nprint(b)\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Во входных данных содержится некоторое количество чисел, в последней строке символ @. Напечатай только уникальные числа. Используй in",tasktype:"task",id:2,rightcode:"s = input()\na = []\nwhile s != '@':\n    if s not in a:\n        print(s)\n    a.append(s)\n    s = input()\n",defaultcode:"",defaultinput:["100", "5", "5", "100", "@"],defaultoutput:["100", "5"],inout: [{inv:["100", "5", "5", "100", "@"],outv:["100", "5"]},{inv:["5", "800", "5", "@"],outv:["5", "800"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "append", "[", "]", "in"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Во входных данных содержится строка с числами. Сложи уникальные числа. Используй функцию sum",tasktype:"task",id:3,rightcode:"s = input()\nb = s.split()\na = []\nfor el in b:\n    if int(el) not in a:\n        a.append(int(el))\nprint(sum(a))\n",defaultcode:"",defaultinput:["100 5 5 100"],defaultoutput:["105"],inout: [{inv:["100 5 5 100"],outv:["105"]},{inv:["5 800 5"],outv:["805"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "append", "sum", "in"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Во входных данных содержится строка с числами. Подсчитай количество чисел равных 1",tasktype:"task",id:4,rightcode:"s = input()\na = s.split()\nprint(a.count('1'))\n",defaultcode:"",defaultinput:["1 0 0 1 11 1 0"],defaultoutput:["3"],inout: [{inv:["1 0 0 1 11 1 0"],outv:["3"]},{inv:["11 1 1"],outv:["2"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "count"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Во входных данных содержится строка с числами. Подсчитай количество чисел равных 1",tasktype:"task",id:5,rightcode:"s = input()\na = s.split()\nprint(a.count('1'))\n",defaultcode:"",defaultinput:["1 0 0 1 11 1 0"],defaultoutput:["3"],inout: [{inv:["1 0 0 1 11 1 0"],outv:["3"]},{inv:["11 1 1"],outv:["2"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "count"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Во входных данных содержится строка с именами. Для каждого имени найди количество раз, которое оно встречается",tasktype:"task",id:6,rightcode:"s = input()\na = s.split()\nfor el in a:\n    print(el, a.count(el))",defaultcode:"",defaultinput:["Иван Иван Мария Дарья Роман Иван Мария"],defaultoutput:["Иван 3", "Иван 3", "Мария 2", "Дарья 1", "Роман 1", "Иван 3", "Мария 2"],inout: [{inv:["Иван Иван Мария Дарья Роман Иван Мария"],outv:["Иван 3", "Иван 3", "Мария 2", "Дарья 1", "Роман 1", "Иван 3", "Мария 2"]},{inv:["Иван Петр Мария Дарья Роман Иван"],outv:["Иван 2", "Петр 1", "Мария 1", "Дарья 1", "Роман 1", "Иван 2"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "count"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Во входных данных содержится строка с именами. Сформируй список с уникальными именами. Для каждого имени найди количество раз, которое оно встречается",tasktype:"task",id:7,rightcode:"s = input()\na = s.split()\nb = []\nfor el in a:\n    if el not in b:\n        b.append(el)\nfor el in b:\n    print(el, a.count(el))",defaultcode:"",defaultinput:["Иван Иван Мария Дарья Роман Иван Мария"],defaultoutput:["Иван 3", "Мария 2", "Дарья 1", "Роман 1"],inout: [{inv:["Иван Иван Мария Дарья Роман Иван Мария"],outv:["Иван 3", "Мария 2", "Дарья 1", "Роман 1"]},{inv:["Иван Петр Мария Дарья Роман Иван"],outv:["Иван 2", "Петр 1", "Мария 1", "Дарья 1", "Роман 1"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "count"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Во входных данных содержится строка с числами. Найди уникальные числа, большие 10. Результат выведи в виде одной строки через тире. Используй метод join",tasktype:"task",id:8,rightcode:"s = input()\nb = s.split()\na = []\nfor el in b:\n    if el not in a and int(el) > 10:\n        a.append(el)\nv = '-'.join(a)\nprint(v)",defaultcode:"",defaultinput:["100 5 5 100 200 800"],defaultoutput:["100-200-800"],inout: [{inv:["100 5 5 100 200 800"],outv:["100-200-800"]},{inv:["5 800 5"],outv:["800"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "append", "join", "in"],musthaveRe:[],}},{chapterid:"51e03714-823f-439b-ad95-fcca1ef4fd47",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Во входных данных содержится строка с числами. Оставь числа кратные 2. Объедини полученные числа в 1 строку c помощью join. Получится длинное число. Умножь его на 2 и напечатай",tasktype:"task",id:9,rightcode:"s = input()\nb = s.split()\na = []\nfor el in b:\n    if int(el) % 2 == 0:\n        a.append(el)\nv = ''.join(a)\nprint(int(v) * 2)",defaultcode:"",defaultinput:["2 2 2 3 3 3"],defaultoutput:["444"],inout: [{inv:["2 2 2 3 3 3"],outv:["444"]},{inv:["4 4 5"],outv:["88"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "append", "join", "in"],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Новая возможность списков - это сортировка.\n# Метод sorted возвращает список отсортированный по возрастанию. Мы будем применять его только к спискам чисел.\na = [1, 1, 2, 3, 4, 30, 20, 2, 3, 4]\nb = sorted(a)\nprint(b)\n# Для получения отсортированного по убыванию списка развернем его с помощью среза\nb = b[::-1]\nprint(b)",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"Во входных данных содержится некоторое количество чисел, в последней строке символ @. Напечатай все числа по возрастанию",tasktype:"task",id:2,rightcode:"s = input()\na = []\nwhile s != '@':\n    a.append(int(s))\n    s = input()\na = sorted(a)\nfor el in a:\n    print(el // 10)",defaultcode:"",defaultinput:["100", "50", "50", "100", "@"],defaultoutput:["5", "5", "10", "10"],inout: [{inv:["100", "50", "50", "100", "@"],outv:["5", "5", "10", "10"]},{inv:["50", "800", "50", "@"],outv:["5", "5", "80"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "append", "[", "]", "in"],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"Во входных данных содержится некоторое количество чисел. Возьми только числа, которые повторяются. Отсортируй получившийся список и распечатай.",tasktype:"task",id:3,rightcode:"s = input().split()\na = []\nfor el in s:\n    if s.count(el) > 1 and int(el) not in a:\n        a.append(int(el))\na = sorted(a)\nfor el in a:\n    print(el)",defaultcode:"",defaultinput:["100 9 5 5 100 1 8"],defaultoutput:["5", "100"],inout: [{inv:["100 9 5 5 100 1 8"],outv:["5", "100"]},{inv:["5 80 80 5"],outv:["5", "80"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "append", "[", "]", "in"],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"Во входных данных содержится число. Добавь все цифры числа в список, отсортируй список по убыванию. Объедини все цифры в число, напечатай это число",tasktype:"task",id:4,rightcode:"s = input()\na = []\nfor el in s:\n    a.append(int(el))\na = sorted(a)\na = a[::-1]\nfor i in range(len(a)):\n    a[i] = str(a[i])\nprint(''.join(a))",defaultcode:"",defaultinput:["10095510018"],defaultoutput:["98551110000"],inout: [{inv:["10095510018"],outv:["98551110000"]},{inv:["231412423"],outv:["443322211"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "append", "[", "]", "in"],musthaveRe:[],}},{chapterid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"В первой строке Входных данных содержится количество чисел, далее сами числа. Количество чисел всегда четное. Добавь все цифры числа в список, отсортируй получившийся список по возрастанию, возьми каждый второй элемент получившегося списка. Напечатай получившийся список.",tasktype:"task",id:5,rightcode:"n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\na = sorted(a)\na = a[1::2]\nfor el in a:\n    print(el)",defaultcode:"",defaultinput:["4", "100", "880", "5", "202"],defaultoutput:["100", "880"],inout: [{inv:["4", "100", "880", "5", "202"],outv:["100", "880"]},{inv:["6", "100", "880", "5", "203", "500", "200"],outv:["100", "203", "880"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "append", "[", "]", "in"],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"Во входных данных содержится некоторое количество чисел. Напечатай числа парами 1 и 2, 2 и 3, 3 и 4 и так далее",tasktype:"task",id:1,rightcode:"s = input().split()\na = []\nfor i in range(len(s) - 1):\n    print(s[i], s[i + 1])",defaultcode:"",defaultinput:["100 9 5 5 100 1 8"],defaultoutput:["100 9", "9 5", "5 5", "5 100", "100 1", "1 8"],inout: [{inv:["100 9 5 5 100 1 8"],outv:["100 9", "9 5", "5 5", "5 100", "100 1", "1 8"]},{inv:["5 80 80 5"],outv:["5 80", "80 80", "80 5"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "[", "]", "in"],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"Во входных данных содержится некоторое количество чисел. Возьми пары чисел 1 и 2, 2 и 3, 3 и 4 и так далее. Подсчитай количество пар, в которых оба числа нечетные",tasktype:"task",id:2,rightcode:"s = input().split()\nfor i in range(len(s)):\n    s[i] = int(s[i])\ncnt = 0\nfor i in range(len(s) - 1):\n    if s[i] % 2 != 0 and s[i + 1] % 2 != 0:\n        cnt += 1\nprint(cnt)",defaultcode:"",defaultinput:["100 9 5 5 100 1 8"],defaultoutput:["2"],inout: [{inv:["100 9 5 5 100 1 8"],outv:["2"]},{inv:["5 81 80 5"],outv:["1"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "[", "]", "in"],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"Во входных данных содержится некоторое количество чисел. Возьми тройки чисел 1,2,3, 2,3,4, 3,4,5 и так далее. Найди сумму троек, в которых хотя бы одно число имеет 0",tasktype:"task",id:3,rightcode:"s = input().split()\nsum = 0\nfor i in range(len(s) - 2):\n    if '0' in s[i] or '0' in s[i + 1] or '0' in s[i + 2]:\n        sum = sum + int(s[i]) + int(s[i + 1]) + int(s[i + 2])\nprint(sum)",defaultcode:"",defaultinput:["10 9 5 5 10 1 8"],defaultoutput:["79"],inout: [{inv:["10 9 5 5 10 1 8"],outv:["79"]},{inv:["5 10 20 5"],outv:["70"]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:["print", "input", "int", "[", "]", "in"],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В первой строке Входных данных количество строк, затем идут сами строки. Подсчитай количество букв А в каждой строке. Сумму напечатай.",tasktype:"task",id:4,rightcode:"n = int(input())\nsumm = 0\nfor i in range(n):\n    a = input()\n    summ = summ + a.count('A')\nprint(summ)",defaultcode:"",defaultinput:["4", "AAA", "BAAA", "AAAB", "ABAA"],defaultoutput:["12"],inout: [{inv:["4", "AAA", "BAAA", "AAAB", "ABAA"],outv:["12"]},{inv:["5", "AAA", "BAAA", "AAAAB", "ABAA", "A"],outv:["14"]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:["print", "for", "input", "count"],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В первой строке количество пар чисел, далее - сами пары. Сложи числа попарно. Результат напечатай. Используй split",tasktype:"task",id:5,rightcode:"n = int(input())\nfor i in range(n):\n    a = input().split()\n    print(int(a[0]) + int(a[1]))",defaultcode:"",defaultinput:["3", "1 3", "2 4", "3 4"],defaultoutput:["4", "6", "7"],inout: [{inv:["3", "1 3", "2 4", "3 4"],outv:["4", "6", "7"]},{inv:["4", "1 3", "2 5", "3 6", "9 10"],outv:["4", "7", "9", "19"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["split"],musthaveRe:[],}},{chapterid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",chapterparentid:"2ee7d58e-82ae-4ac4-b288-b06dcdcaeb4e",task:"В первой строке количество наборов чисел, далее - сами числа. Найди количество чисел в каждой строке",tasktype:"task",id:6,rightcode:"n = int(input())\nfor i in range(n):\n    a = input().split()\n    print(len(a))",defaultcode:"",defaultinput:["3", "1 3 4 7 8 8 ", "2 4 1", "3 4 18 8 8"],defaultoutput:["6", "3", "5"],inout: [{inv:["3", "1 3 4 7 8 8 ", "2 4 1", "3 4 18 8 8"],outv:["6", "3", "5"]},{inv:["4", "1 3 2 9 9 9 9", " 9 10 2 5", "5", "6"],outv:["7", "4", "1", "1"]}],restrictions: {maxlines:4,forbidden:[],forbiddenRe:[],musthave:["split"],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:1,rightcode:"pass",defaultcode:"# Первая команда или по-другому функция, которую мы изучим - это print.\n# Функция print выводит данные в поле Выходные данные\nprint('Я знаю команду print')\n\n# Нажми кнопку 'Выполнить' и ты увидишь результат работы программы в поле Выходные данные.\n# Проведи эксперименты - удали некоторые части строки 'Я знаю команду print' или кода и посмотри, будет ли выполняться код и что он будет выводить\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:2,rightcode:"pass",defaultcode:"# Ты конечно заметил, что и в прошлой программе, и в этой - перед некоторыми строками стоит решетка - #.\n# Такие строки называются 'Комментариями' и не учитываются при выполнении программы.\n# Любую строку кода можно исключить из выполнения программы, если поставить перед ней #.\n# Это называется по другому - Закомментировать код.\n\n# Данная программа выводит четыре строки, а нужно одну. Закомментируй любые 3 строки программы и выполни программу\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')\nprint('Комментарии - это удобно')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:3,rightcode:"pass",defaultcode:"# Команда print может печатать несколько значений, они указываются через запятую\n# Напечатанные значения будут разделены одним пробелом\n\n# Проведи эксперимент, добавь несколько новых значений через запятую\nprint('1', '2', '3')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:["print"],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"4680f00b-b586-413c-890a-9669b4b7b1c3",task:"Изучи программу",tasktype:"guide",id:4,rightcode:"pass",defaultcode:"# Пробел - это тоже символ и учитывается при проверке заданий!\n\n# Этот код печатает 4 пробела между цифрами и еще 4 пробела в конце\nprint('1   ', '   2   ', '   3', '   ')\n\n# Пробелы невидимы в поле 'Выходные данные', из-за этого можно допустить ошибку при выполнении заданий. Чтобы увидеть пробелы, нужно выделить весь текст в поле 'Выходные данные'.\n# Проведи эксперимент - выдели весь текст в окне 'Выходные данные' и ты увидишь пробелы",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:1,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Изучи программу",tasktype:"guide",id:5,rightcode:"pass",defaultcode:"# Научимся использовать переменные.\n\n# Посмотри на этот код:\nprint('Этот код не использует переменные')\nprint('Привет, Иван!')\nprint('Привет, Иван!')\n\n# Теперь представь, что мы хотим вместо имени Иван напечатать Ваня.\n# Придется в двух местах менять код. Проще сделать так:\nprint('Этот код использует переменные')\na = 'Привет, Иван!'\nprint(a)\nprint(a)\n\n# a - это переменная. Её название можно изменить.",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"0f5132f9-58aa-4a89-b03b-8af052dbd3ed",task:"Изучи программу",tasktype:"guide",id:6,rightcode:"pass",defaultcode:"# Предположим мы имеем такой код:\ninduct = 'Привет'\nname = 'Ваня'\nprint(induct, ',', name)\n\n# Он печатает 'Привет , Ваня'. Как убрать лишний пробел перед запятой?\n\n# Вот так, просто сложим переменную и запятую\nprint(induct + ',', name)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Изучи программу",tasktype:"guide",id:7,rightcode:"pass",defaultcode:"# Обрати внимание, что под текстом задачи есть поле 'Входные данные'. Программа может брать данные из этого поля и делать с ними что-либо.\n\n# Функция input() считывает из поля 'Входные данные' одну строку текста. После этого мы помещаем ее в переменную d и печатаем\nd = input()\nprint(d)",defaultinput:["Сейчас мы загрузим эту строку в программу"],defaultoutput:[],inout: [{inv:["Сейчас мы загрузим эту строку в программу"],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"53945ea5-7a89-44eb-b43f-03de6bef8390",task:"Изучи программу",tasktype:"guide",id:8,rightcode:"pass",defaultcode:"# Что делать если нужно считать 2 строки из поля 'Входные данные'?\n# Для считывания второй строки вызови команду input второй раз:\na = input()\nprint('Это первая строка:', a)\nb = input()\nprint('Это вторая строка:', b)",defaultinput:["Всем привет!", "Меня зовут", "Иван"],defaultoutput:[],inout: [{inv:["Всем привет!", "Меня зовут", "Иван"],outv:[]}],restrictions: {maxlines:10,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:9,rightcode:"pass",defaultcode:"# В этой главе мы научимся работать с числами.\n\n# Сначала напечатаем несколько чисел\nprint(1, 2, 3, 4)\n\n# Чем числа отличаются от строк? Они пишутся без кавычек.\n\n# Мы можем печатать одновременно и строки и числа. Вот так:\nprint(1, 2, 3, 4, '1', '2', '-это  числа')\n\n# Обрати внимание, в поле 'Выходные данные' невозможно понять что мы напечатали - число или строку, ведь кавычки исчезают при печати.\n\n# Если мы складываем числа, то выводится их сумма, если мы складываем строки, то они объединяются\nprint('Результат сложения чисел:', 1 + 4)\nprint('Результат сложения строк:', '1' + '4')\nprint('1 + 5 =', 1 + 5)\n\n# К числу нельзя прибавить строку, питон выдаст ошибку.\n\n# Раскомментируй строку ниже и попробуй выполнить программу - будет ошибка:\n# print(1+'1')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:10,rightcode:"pass",defaultcode:"# В поле 'Входные данные' ты видишь число 5, давай введем его в программу и вычтем из него 2\na = input()\nprint(a - 2)\n# Возникла ошибка! А все потому, что всё, что содержитсяв поле 'Входные данные' является строками, а из строки нельзя вычесть число.\n\n# Что же делать?\n\n# Новая команда int(), которую мы изучим позволяет превратить строку в число.\n# (Закомментируй или удали предыдущий код, чтобы ошибка не возникала.)\na = input()\nb = int(a)\nprint(b - 2)\n\n# Теперь все получилось!\n\n# Можно сократить код, написав так:\na = int(input())\nprint(a - 2)\n\n# В программировании говорят - Мы обернули функцию input в функцию int\n\n# Можно еще короче:\nprint(int(input()) - 2)",defaultinput:["5", "6", "7"],defaultoutput:[],inout: [{inv:["5", "6", "7"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"31ecf55a-c0e2-4246-b2b2-f0e919057467",task:"Изучи программу",tasktype:"guide",id:11,rightcode:"pass",defaultcode:"# В предыдущей задаче в строке 'Разность: 5' стоит пробел после двоеточия, так как при печати мы использовали запятую.\n# Что если не требуется печатать пробел? '+' - не сработает, так как к строке нельзя прибавить число\n\n# Данный код выдаст ошибку:\na = int(input())\nb = int(input())\nd = a - b\nprint('Разность:' + d)\n\n# Нам поможет команда str! Она превращает число в строку!\n# (Закомментируй или удали предыдущую строку кода, чтобы ошибка не возникала)\nc = str(d)\nprint('Разность:' + c)\n\n# Можно записать короче:\nc = str(a - b)\nprint('Разность:' + c)\n\n# Еще короче:\nprint('Разность:' + str(a - b))",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "3"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Изучи программу",tasktype:"guide",id:12,rightcode:"pass",defaultcode:"# В этой главе мы узнаем новые математические команды:\n# *  - умножение\n# /  - деление\n# ** - возведение в степень\n\na = int(input())\nb = int(input())\nprint('Произведение', str(a) + '*' + str(b) + '=' + str(a * b))\nprint('Частное', str(a) + '/' + str(b) + '=' + str(a / b))\nprint(str(a) + ' в степени ' + str(b) + '=' + str(a / b))\n\n# Как и в обычной математике можно использовать скобки:\nprint('(5 - 2) * 2 =', (a - b) * b)",defaultinput:["5", "2", "2"],defaultoutput:[],inout: [{inv:["5", "3", "2"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f5fa5312-f89e-44c7-b6d7-5601bd0a5638",task:"Изучи программу",tasktype:"guide",id:13,rightcode:"pass",defaultcode:"# Две новых операции которые мы пройдем:\n# % - остаток от деления\n# // - целочисленное деление (деление нацело)\n\n# Вот как работают операции на конкретных примерах:\n# 5 // 5 = 1     5 % 5 = 0\n# 6 // 5 = 1     6 % 5 = 1\n# 7 // 5 = 1     7 % 5 = 2\n# 8 // 5 = 1     8 % 5 = 3\n# 9 // 5 = 1     9 % 5 = 4\n# 10// 5 = 2     10% 5 = 0\n# 11// 5 = 2     11% 5 = 1\n\n# Поэкспериментируй с данными операциями самостоятельно\nprint(10 // 3)\nprint(10 % 3)",defaultinput:["5", "2"],defaultoutput:[],inout: [{inv:["5", "3"],outv:[]}],restrictions: {maxlines:30,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Изучи программу",tasktype:"guide",id:14,rightcode:"pass",defaultcode:"# Что если некоторую строку нужно повторить несколько раз🦕?\nprint('Победа!' + 'Победа!' + 'Победа!' + 'Победа!')\n# Не очень удобно, особенно, если что-то нужно повторить раз 100!\n\n# Лучше сделать вот так:\nprint('Победа!' * 4)\n\n# Получается, в Питоне можно умножить строку на число и она повторится!",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"1fe8a12f-9a77-488a-af6d-444a6c3fb83a",task:"Изучи программу",tasktype:"guide",id:15,rightcode:"pass",defaultcode:"# Новая функция, которую мы узнаем - это функция len. Функция позволяет вычислить длину строки.\ns = 'Сколько в этом предложении букв? Функция len позволит подсчитать их'\nprint('В предложении:', len(s), 'букв')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:16,rightcode:"pass",defaultcode:"# Дана переменная N:\nN = 10\n\n# Взглянем на следующую строку кода:\nif N == 10:\n    print('N равно 10')\n# Запусти код. Программа напечатает 'N равно 10'\n\n# Теперь измени N на другое число и запусти заново. Программа ничего не напечатает.\n\n# if - это условный оператор, если выполняется условие N==10, то выполняется код после двоеточия\n\n# Обрати внимание на следующие особенности:\n# 1) После условия всегда стоит двоеточие\n# 2) Перед командой print стоит отступ\n# 3) Вместо одного = стоит два ==. В чём разница?\n# =  - для того чтобы поместить значение в переменную,\n# == - для сравнения значений.",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:3,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:17,rightcode:"pass",defaultcode:"# Дана переменная N:\nN = 10\n\n# Взглянем на следующую строку кода:\nif N == 10:\n    print('N равно 10')\n\n# В случае если N не равно 10, программа ничего не выводит, это не очень хорошо.\n# В случае если условие не выполняется мы будем выводить 'N не равно 10'\n\n# Это делается так:\nif N == 10:\n    print('N равно 10')\nelse:\n    print('N не равно 10')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:5,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"83b6b842-4e66-4149-91e2-cadb72ca4b3e",task:"Изучи программу",tasktype:"guide",id:18,rightcode:"pass",defaultcode:"# Помимо равенства == в условии можно использовать знаки неравенства:\n# >  больше\n# >= больше или равно\n# <  меньше\n# <= меньше или равно\n# != не равно\n\nN = 100\nif N > 100:\n    print('больше 100')\nelse:\n    print('меньше либо равно 100')\nif N != 100:\n    print('не равно 100')\nelse:\n    print('равно 100')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:6,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"1bd3edc3-45e0-41f2-9274-12c4f05c3bab",task:"Изучи программу",tasktype:"guide",id:19,rightcode:"pass",defaultcode:"# Научимся извлекать цифры из числа.\n# Возьмем число 783, как извлечь все цифры числа?\n\n# Начнем с последней цифры. Последняя цифра - это остаток от деления числа на 10\nN = 783\nprint('Последняя цифра:', N % 10)\n\n# Первая цифра числа-это целочисленное деление на 100\nprint('Первая цифра', N // 100)\n\n# Осталось извлечь цифру в середине. Это можно сделать двумя способами:\n\n# Способ 1.\n# Как уже стало понятно мы можем извлечь первую и последнюю цифру числа.\n# Разделим число нацело на 10, это позволит отбросить последнюю цифру числа и поместим результат в переменную М\nM = N // 10\nprint('Промежуточное число', M)\n# Теперь легко получим последнюю цифру\nprint('Средняя цифра', M % 10)\n\n# Способ 2.\n# Найдем остаток от деления числа на 100\nM = N % 100\nprint('Промежуточное число', M)\n\n# А затем разделим нацело на 10\nprint('Средняя цифра', M // 10)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"187c338c-1b7e-4b0f-8f36-b9b075a85451",task:"Изучи программу",tasktype:"guide",id:20,rightcode:"pass",defaultcode:"# Представим, что у нас есть следующий код:\nprint('Ура!')\nprint('Ура!')\nprint('Ура!')\n\n# Как его можно упростить? Используем циклы!\nfor i in range(3):\n    print('Ура')\n\n# Данный код называется циклом.\n\n# Обрати внимание на следующие детали:\n# 1) Как и в условии стоит двоеточие\n# 2) Все строки после строки с for, имеющие отступ, будут повторяться\n# 3) Количество повторений указано в круглых скобках (3)\n# 4) Что такое i? Это счетчик цикла, пока мы не будем его использовать\n# 5) Все что идет после строк с отступом не будет повторяться.\n\n# Остальное нужно просто пока запомнить\n\n# Приведем пример другой программы\nprint('На первый-второй рассчитайся')\nfor i in range(4):\n    print('Первый')\n    print('Второй')\nprint('Молодцы!')  # этот код не будет повторяться, так как нет отступа слева",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:9,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"Изучи программу",tasktype:"guide",id:21,rightcode:"pass",defaultcode:"# В первой строке поля 'Входные данные' содержится количество чисел, далее идут сами числа.\n# Найдем сумму этих чисел.\n\n# Создадим переменную summ\nsumm = 0\n# Возьмем код для считывания чисел\nN = int(input())\nfor i in range(N):\n    r = int(input())\n    # Каждый раз когда мы считываем очередное число будем добавлять его к сумме\n    summ = summ + r\n# После завершения цикла напечатаем сумму\nprint('Сумма чисел: ', summ)\n",defaultinput:["3", "2", "3", "4"],defaultoutput:[],inout: [{inv:["3", "2", "3", "4"],outv:[]},{inv:["2", "1", "2"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"cec2b28e-ff38-43c1-a161-ce4200ad2078",task:"Изучи программу",tasktype:"guide",id:22,rightcode:"pass",defaultcode:"# В поле 'Входные данные' некоторое количество строк. В первой строке количество строк, в остальных строках сами строки.\n\n# Сложим все строки в одну строку.\n\n# Создадим переменную line\nline = ''\nN = int(input())\nfor i in range(N):\n    r = input()\n    # Каждый раз когда мы считываем очередную строку будем добавлять ее к переменной line\n    line = line + str(r) + '!'\n# После завершения цикла напечатаем итоговую строку\nprint('Строка:', line)",defaultinput:["3", "Быстрей", "Выше", "Сильней"],defaultoutput:[],inout: [{inv:["3", "Быстрей", "Выше", "Сильней"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"Изучи программу",tasktype:"guide",id:23,rightcode:"pass",defaultcode:"# Рассмотрим следующую задачу.\n\n# В первой строке Входных данных содержится количество строк - 6. Далее идут сами строки. Сложим первую строку со второй, третью - с четвертой, пятую - с шестой.\n\n# Какое количество повторений цикла нам потребуется?\n\n# Правильный ответ - 3. То есть - половина от количества строк - 6//2\nN = int(input())\nfor i in range(N // 2):\n    one = input()\n    two = input()\n    print(one + two)\n\n# Обрати внимание, что нам потребовался оператор целочисленного деления //, обычное деление / не подойдет",defaultinput:["6", "город-", "герой", "море по ", "колено", "крибли крабли", "бумс"],defaultoutput:[],inout: [{inv:["6", "город-", "герой", "море по ", "колено", "крибли крабли", "бумс"],outv:[]},{inv:["6", "Ф", "Ф", "Ф", "Ф", "Ф", "Ф"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"a85d7711-f7f6-4411-9fb7-153fe8357787",task:"Изучи программу",tasktype:"guide",id:24,rightcode:"pass",defaultcode:"# Рассмотрим следующую задачу.\n\n# В первой строке Входных данных содержится количество чисел - 5. Далее идут сами числа.\n# Требуется найти разность между вторым и первым числом, третьим и вторым, четвертым и третьим, и так далее.\n\n# Сколько  повторений цикла нам потребуется?\n\n# Правильный ответ - 4. То есть - на 1 меньше, чем количество чисел.\n\n# Также возникает вторая проблема: нужно где-то хранить предыдущее значение.\n\n# Изучи способ решения данной проблемы\nN = int(input())\nprev = int(input())  # Запоминаем первое число\nfor i in range(N - 1):\n    curr = int(input())  # Считываем следующее\n    print(curr - prev)  # Вычитаем из следующего предыдущее\n    prev = curr  # Обновляем предыдущее",defaultinput:["5", "1", "2", "3", "5", "10"],defaultoutput:[],inout: [{inv:["5", "1", "2", "3", "5", "10"],outv:[]},{inv:["2", "2", "20"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"Изучи программу",tasktype:"guide",id:25,rightcode:"pass",defaultcode:"# Вернемся в структуре цикла\n# for i in range(3):\n#     print('Ура')\n# Настала пока изучить счетчик цикла i. На самом деле это обычная переменная, которая может принимать разные числовые значения на каждом повторении цикла\n# Проиллюстрируем работу счетчика на конкретном примере\nfor counter in range(3):\n    print(counter)\n# Напечатаются значения 0, 1, 2. Получается нумерация начинается с нуля и заканчивается на единицу меньше\n# чем указано в скобках range(3)!\n# Что есть необходимо начать нумерацию с 1 или другого числа? Прибавим к счетчику столько сколько нужно\nfor counter in range(3):\n    print(counter + 1)\n# Ну и напоследок нумерация в обратную сторону:\nfor counter in range(3):\n    print(3 - counter)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b0c50fbc-b473-4b71-97d4-ad7fb6f8654f",task:"Изучи программу",tasktype:"guide",id:26,rightcode:"pass",defaultcode:"# Вернемся в структуре цикла\n# for i in range(3):\n#     print(i)\n# Научимся делать предыдущие вещи другим способом\n\n# 1) Если в скобках указать два числа, например, 1 и 5, то счетчик будет принимать значения от 1 до 4\n# Да, да, да ... это не опечатка 🤔, эту важную деталь ❗️нужно обязательно запомнить\nfor i in range(1, 5):\n    print(i)\n# 2) Если в скобках указать три числа, например, 1 и 10 и 2, то счетчик будет принимать значения 1,3,5,7,9\n# Получается третье число - это шаг\nfor i in range(1, 10, 2):\n    print(i)\n\n# 3) Ну, и, напоследок, нумерация в обратную сторону. Если указать два числа 5 и 1, ничего работать не\n# будет. Нужно дополнительно указать шаг:\nfor i in range(5, 1, -1):\n    print(i)\n# ❗️В этом примере диапазон от 5 до 2, последнее число опять не берется, имей это ввиду при решении задач",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f4be7afe-5310-4a7a-b28f-03b28c1f977f",task:"Изучи программу",tasktype:"guide",id:27,rightcode:"pass",defaultcode:"# Взглянем на структуру цикла более опытными глазами\n# В данном примере i - это переменная, которая принимает значения из диапазона range. Range в переводе с английского Диапазон.\n# Как мы уже знаем диапазон в Питоне можно задавать одним числом (от нуля до указанного числа), двумя числами(первое и последнее число), и тремя числами(первое, последнее, шаг)\nfor i in range(3):\n    print(i)\n# Вместо диапазона чисел можно использовать набор символов. В этом случае в переменную цикла будут по очереди попадать все символы строки\nfor i in 'ABCDEF1234':\n    print(i)\n# Другой пример\ncity = input()\nfor i in city:\n    print(i)",defaultinput:["LONDON"],defaultoutput:[],inout: [{inv:["LONDON"],outv:[]},{inv:["LONDON"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:28,rightcode:"pass",defaultcode:"# В данной главе мы научимся искать минимальные, максимальные и средние значения\n# Предположим нам надо найти максимальное среди шести чисел 1 8 17 8 18 3, которые находятся во Входных данных\n# Введем переменную maxx, в которую поместим значение заведомо меньшее любого из чисел, среди которых  осуществляется поиск\nmaxx = 0\n# Будем перебирать все числа\nfor i in range(6):\n    # если очередное число больше переменной maxx, то поместим это значение в переменную maxx\n    a = int(input())\n    if a > maxx:\n        maxx = a\nprint(maxx)",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:29,rightcode:"pass",defaultcode:"# Предположим нам надо найти минимальное число среди шести чисел 1 8 17 8 18 3, которые находятся в поле 'Входные данные'.\n# Введем переменную minn, в которую поместим число заведомо большее любого из чисел, среди которых  осуществляется поиск\nminn = 0\n# Будем перебирать все числа\nfor i in range(6):\n    # если очередное число меньше переменной minn, то поместим это значение в переменную minn\n    a = int(input())\n    if a < minn:\n        minn = a\nprint(minn)",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"df8a2127-4d9b-4f36-9423-35f75f649189",task:"Изучи программу",tasktype:"guide",id:30,rightcode:"pass",defaultcode:"# Предположим нам надо найти среднее значение среди шести чисел 1 8 17 8 18 3, которые находятся во Входных данных\n# Здесь все просто, разделим сумму на количество\nsumm = 0\nfor i in range(6):\n    a = int(input())\n    summ = summ + a\nprint(summ / 6)\n# Усложним задачу, найдем среднее значение чисел, которые больше 3\n# Введем дополнительную переменную для подсчета таких чисел\nsumm = 0\ncnt = 0\nfor i in range(6):\n    a = int(input())\n    if a > 3:\n        summ = summ + a\n        cnt = cnt + 1\nprint(summ / cnt)",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:31,rightcode:"pass",defaultcode:"# В данной главе мы научимся выполнять поиск сред значений.\n# Предположим нам надо понять есть ли число 8 среди шести уникальных чисел 1 8 17 8 18 3, которые находятся во Входных данных.\n# Будем перебирать все числа\nfor i in range(6):\n    # если очередное равно 8, то напечатаем результат поиска\n    a = int(input())\n    if a == 8:\n        print('Число 8 найдено')",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:32,rightcode:"pass",defaultcode:"# Усложним задачу, выполним поиск числа 10, которого нет в списке, программа должна вывести 'Число 10 не найдено'\n# Задача решается с помощью дополнительной переменной, которую иногда называют флагом\nflag = 0\nfor i in range(6):\n    a = int(input())\n    # если очередное число равно 10, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n    if a == 10:\n        flag = 1\n# Если после выполнения цикла переменная все еще равна 0(флаг опущен), это значит, что среди чисел не нашлось 10\nif flag == 0:\n    print('Число 10 не найдено')",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:33,rightcode:"pass",defaultcode:"# Выполним поиск числа 8, которое повторяется в списке много раз, программа должна вывести 'Число 8 найдено'\n# Задача решается двумя способами\n\n# Решение с помощью флага\nflag = 0\nfor i in range(6):\n    a = int(input())\n    # если очередное число равно 8, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n    if a == 8:\n        flag = 1\n# Если после выполнения цикла переменная равна 1, это значит, что среди чисел есть число 8\nif flag == 0:\n    print('Число 8 найдено')",defaultinput:["1", "8", "17", "8", "8", "8"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "8", "8"],outv:[]},{inv:["1", "8", "17", "8", "8", "8"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"ebffc894-0193-4582-8e89-53909ac17b0c",task:"Изучи программу",tasktype:"guide",id:34,rightcode:"pass",defaultcode:"# Другой способ-это использование новой команды, которая называется break\n# команда break позволяет прервать выполнение цикла\n# попробуй выполнить программу с использованием команды break и без неё\nfor i in range(6):\n    a = int(input())\n    # если очередное число равно 8, то мы 'поднимаем флаг', то есть записываем в переменную значение 1\n    if a == 8:\n        print('Число 8 найдено')\n        break",defaultinput:["1", "8", "17", "8", "8", "8"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "8", "8"],outv:[]},{inv:["1", "8", "17", "8", "8", "8"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"0e6aa2f7-2837-46d8-a614-0d815a5f9935",task:"Изучи программу",tasktype:"guide",id:35,rightcode:"pass",defaultcode:"# В данной главе мы научимся использовать индексы строк\n# Пусть мы имеем строку\ns = 'Программирование'\n# В Питоне есть возможность извлечь из строки отдельный символ\n# Нужно указать в квадратных скобках номер символа\nsym = s[2]\nprint('Третий символ строки', sym)\n# Напечатается третий символ, так как нумерация в питоне идет с нуля 0,1,2\n\n# Также в Питоне существует обратная нумерация, она начинается с -1\nsym = s[-1]\nprint('Последний символ строки', sym)\nsym = s[-2]\nprint('Предпоследний символ строки', sym)\n\n# Код, который выдаст ошибку, так как указан номер символа, который не существует:\n# print(s[100])\n# print(s[-100])\n# Код, который выдаст ошибку, так как нельзя поменять строку таким образом:\n# s[1]='A'\n# Раскомментируй некоторые строки и убедись в этом",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"64eb6a6b-5e3c-45d8-ae9a-a7718d2ff8fd",task:"Изучи программу",tasktype:"guide",id:36,rightcode:"pass",defaultcode:"# Мы уже знаем, что для перебора символов в строке можно использовать такой цикл:\ns = 'Программирование'\nfor a in s:\n    print(a)\n\n# Существует второй способ перебора символов через индексы:\nL = len(s)\nfor i in range(L):\n    print(s[i])\n\n# Продемонстрируем преимущества данного способа\n# Вывод каждого второго символа\nL = len(s)\nfor i in range(1, L, 2):\n    print(s[i])\n\n# Вывод символов парами\nL = len(s)\nfor i in range(L - 1):\n    print(s[i], s[i + 1])\n# Обрати внимание, что мы используем L-1 повторений цикла в данном примере",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"Изучи программу",tasktype:"guide",id:37,rightcode:"pass",defaultcode:"# В данной главе мы научимся использовать срезы 🍰 строк\n# Срезы очень похожи на индексы, но позволяют вырезать из строки более одного символа\ns = 'параллелепипед'\n# Срез с 1-го по 5-ый символ. Обрати внимание как и в циклах нужно указать число на 1 больше - 6\na = s[1:6]\nprint(a)\n# Срез с 3-го символа до конца строки.\nprint(s[3:])\n# Срез с начала строки до 6-го символа.\nprint(s[:7])\n# Срез с 3-го символа с начала строки до 4 символа, считая с конца строки\nprint(s[3:-4])\n# Срез с 3-го символа(считая с конца строки) до конца строки\nprint(s[-3:])",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"66c1cb3b-d049-4912-9f4b-44baf6a4b70d",task:"Изучи программу",tasktype:"guide",id:38,rightcode:"pass",defaultcode:"# В срезах можно использовать третье число - шаг\ns = 'параллелепипед'\n# Срез с 1-го по 5-ый символ c шагом 2, то есть питон вырежет 1, 3 и 5 символы\na = s[1:6:2]\nprint(a)\n# Срез с начала до конца c шагом 3, то есть питон вырежет символы 0, 3, 6 и так далее\nprint(s[::3])\n# Есть еще вот такая хитрая штука. Выполни программу и посмотри на результат, ты будешь часто использовать такой фокус\nprint(s[::-1])\n",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f61d3bf9-3d79-4b49-ae14-098bba9e88d2",task:"Изучи программу",tasktype:"guide",id:39,rightcode:"pass",defaultcode:"# В данной главе мы научимся использовать методы строк\n# Методы - это особые функции, которые пишутся через точку и применяются к тому объекту для которого вызываются\n# Сложновато звучит, но на примерах станет понятно\n\n# Метод count\ns = 'параллелепипед'\n# Метод count считает количество подстрок в строке. Подстрока-это просто набор символов\nn = s.count('п')\nprint('Количество букв п в строке', s, 'равно', n)\ns = 'AABBAABB'\nn = s.count('AA')\nprint('Количество подстрок АА в строке', s, 'равно', n)\n\n# Метод replace\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\n# Метод replace заменяет в строке одну подстроку на другую\ns = s.replace('Червяк', 'Жук')\nprint(s)\n# Важно! Если написать просто вот так s.replace('Червяк', 'Жук'), замена не будет произведена\n# Нужно именно вот так: s=s.replace('Червяк', 'Жук')\n\n# Можно указать сколько замен нужно сделать\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук', 1)\nprint(s)\n\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук', 2)\nprint(s)\n\n# Можно сделать несколько замен одновременно\ns = 'Червяк, Комар, Комар, Червяк, Червяк'\ns = s.replace('Червяк', 'Жук').replace('Комар', 'Муха')\nprint(s)\n\n# А еще метод replace можно использовать для удаления символов\ns = '000000011111001010101111'\ns = s.replace('0', '')\nprint(s)\n",defaultinput:["1", "8", "17", "8", "18", "3"],defaultoutput:[],inout: [{inv:["1", "8", "17", "8", "18", "3"],outv:[]},{inv:["1", "8", "17", "8", "18", "3"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"Изучи программу",tasktype:"guide",id:40,rightcode:"pass",defaultcode:"# Изучим еще несколько полезных методов строк\n\n# Метод find\ns = 'параллелепипед'\n# Метод find находит подстроку в строке и возвращает её индекс\n# Если считать слева направо буква 'п' начинается с 0 индекса, поэтому find вернет 0\nn = s.find('п')\nprint(n)\n# Если считать слева направо буква 'л' начинается с 5 индекса, поэтому find вернет 5\nprint(s.find('п'))\n# Если считать слева направо символы 'леп' начинаются с 7 индекса, поэтому find вернет 7\nprint(s.find('леп'))\n# А вот сочетания символов 'лепа' нет в строке поэтому find вернет -1\nprint(s.find('лепа'))\n\n# Существует также метод rfind, которые делает тоже самое, но поиск осуществляет справа налево\n# Cравни:\nn = s.find('п')\nm = s.rfind('п')\nprint(n, m)\nn = s.find('леп')\nm = s.rfind('леп')\nprint(n, m)",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"857da1bd-a404-4fff-a5f8-a58050c72fff",task:"Изучи программу",tasktype:"guide",id:41,rightcode:"pass",defaultcode:"# Метод strip удаляет пробелы в начале и в конце строки:\ns = '      п    д     '\nn = s.strip()\nprint(n)\n# Если в скобках указать какие-либо символы, он будет удалять их в начале и в конце строки:\ns = '*****п*****д****'\nprint(s.strip('*'))\ns = '*$$****п***$**д**$**$'\nprint(s.strip('*$'))",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"Изучи программу",tasktype:"guide",id:42,rightcode:"pass",defaultcode:"# Новая тема Сложные условия\n\n# Изучим новую тему на примере решения задач\ns = 'Альфа-Кентавра'\n# Напечатай 'Да' если в строке есть одновременно и буква 'А' и буква 'К'\nn = s.count('А')\nm = s.count('К')\nif n > 0 and m > 0:\n    print('ДА')\n# and объединяет два условия в одно и следит за тем, что оба условия выполнены\n\n# Напечатай Да если в строке есть или буква 'А' или буква 'Ф'\nn = s.count('А')\nm = s.count('Ф')\nif n > 0 or m > 0:\n    print('ДА')\n# or объединяет два условия в одно и следит за тем, что хотя бы одно условие выполнено\n\n# В сложном условии можно писать неограниченное число and и or\n# Напечатай 'Да' если в строке есть или буква 'А' или буква 'Ф' или буква 'М'\nn = s.count('А')\nm = s.count('Ф')\nk = s.count('М')\nif n > 0 or m > 0 or k > 0:\n    print('ДА')\n\n# Можно комбинировать and и or\n# Напечатай Да если в строке есть (буква 'А' или буква 'Ф') и тире 'М'\nn = s.count('А')\nm = s.count('Ф')\nk = s.count('-')\nif (n > 0 or m > 0) and k > 0:\n    print('ДА')\n# Вокруг условия (n > 0 or m > 0) стоят круглые скобки, а всё потому, что если их не поставить питон сначала проверит выполняется ли условие m > 0 and k>0\n# Если говорить научным языком, у операции and более высокий приоритет чем у or, как в математике, где у умножения более высокий приоритет, чем у сложения",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"81525cb9-c322-40b3-a442-44011c2e90c9",task:"Изучи программу",tasktype:"guide",id:43,rightcode:"pass",defaultcode:"# В программировании невероятно часто используется отрицание not\n# Отрицание превращает невыполняющееся условие в выполняющееся и наоборот-превращает выполняющееся условие в невыполняющееся\na = 18\n# Условие выполняется, печатается ДА\nif a > 11:\n    print('ДА')\nelse:\n    print('НЕТ')\n# Условие не выполняется, печатается НЕТ\nif not a > 11:\n    print('ДА')\nelse:\n    print('НЕТ')\n# Сложное условие выполняется, печатается ДА\nif a > 11 and a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n# Сложное не выполняется, печатается НЕТ. Обрати внимание, что вокруг сложного условия стоят круглые скобки, иначе not применится только к первому условию\nif not (a > 11 and a % 2 == 0):\n    print('ДА')\nelse:\n    print('НЕТ')\n\n# Сложное условие выполняется, печатается ДА\nif a > 100 or a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')\n# Сложное условие не выполняется, печатается НЕТ.\nif a > 11 or not a % 2 == 0:\n    print('ДА')\nelse:\n    print('НЕТ')",defaultinput:[],defaultoutput:[],inout: [{inv:[],outv:[]},{inv:[],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"168294f2-b0c6-41a4-975f-1182e54f6097",task:"Изучи программу",tasktype:"guide",id:44,rightcode:"pass",defaultcode:"# Предположим в поле 'Входные данные' содержится неопределенное количество строк, то есть мы не знаем их количество.\n# Мы лишь знаем что самая последняя строка равна звездочке *\n# Как считать все строки? Нам поможет новый тип цикла - while.\ns = input()\nwhile s != '*':\n    print(s)\n    s = input()\n# Цикл while выполняется пока выполняется условие, которое идет после while, в нашем примере s!='*'\n\n# В цикле while можно использовать сложные условия\ns = input()\nwhile s != '*' and s != 'Саша':\n    print(s)\n    s = input()\n\n# Цикл while довольно опасный вид цикла, программа будет выполняться бесконечно, если не выполнилось условия остановки\n# Если это все таки произошло, просто обнови страницу браузера и программа остановится",defaultinput:["Петя", "Ваня", "Саша", "*"],defaultoutput:[],inout: [{inv:["Петя", "Ваня", "Саша", "*"],outv:[]},{inv:["Петя", "Ваня", "Саша", "*"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"f3178bc2-d879-49f0-a2fc-3e8a00d4a31e",task:"Изучи программу",tasktype:"guide",id:45,rightcode:"pass",defaultcode:"# На данный момент мы знаем следующие способы проверки условий >, <, >=, <=, ==, !=\n# Есть еще один способ - in\n# Возьмем произвольный набор символов\ns = 'ABCD'\nif 'A' in s:\n    print('A', 'содержится в строке', s)\nelse:\n    print('A', 'не содержится в строке', s)\n# Условие if 'A' in s читается так-если 'A' содержится в s\n\n# Еще пример\nif 'AA' in s:\n    print('AА', 'содержится в строке', s)\nelse:\n    print('AA', 'не содержится в строке', s)\n\n# Можно применять сложные условия\nif 'A' in s and 'B' in s:\n    print('A и B', 'содержатся в строке', s)\nelse:\n    print('A и B', 'вместе не содержатся в строке', s)\n# Отметим, что данный способ удобнее, чем использование методов find и count",defaultinput:["Петя", "Ваня", "Саша", "*"],defaultoutput:[],inout: [{inv:["Петя", "Ваня", "Саша", "*"],outv:[]},{inv:["Петя", "Ваня", "Саша", "*"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Изучи программу",tasktype:"guide",id:46,rightcode:"pass",defaultcode:"# На данный момент мы знаем следующие типы данных: целые числа, дробные числа, строки\n# Изучим новый тип данных - списки\n# Для начала нужно создать новый пустой список a=[]\na = []\n# затем его нужно наполнить. Для этого есть специальный метод append\na.append(5)\na.append('Иван')\na.append(0.1)\nprint(a)\n# Напечатанное выглядит вот так [5, 'Иван', 0.1]\n# Так что такое список? Список - это тип данных, который позволяет хранить множество значений в одной переменной\n\n# Как и в строках для получения доступа к элементам используются индексы:\nprint(a[1])\nprint(a[-1])\n\n# Напечатаем все значения списка. Это делается аналогично строкам!\n\n# Способ 1\nfor el in a:\n    print(el)\n\n# Способ 2\n# Функция len работает также как в строках - возвращает длину списка\nL = len(a)\nfor i in range(L):\n    print(a[i])\n\n# Найдем максимальное значение чисел во входных данных\nfor i in range(4):\n    a.append(int(input()))\nmaxx = 0\nfor el in a:\n    if el > maxx:\n        maxx = el\nprint(maxx)",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"cb6fa3cc-e3a8-4b0d-b7e8-c65e3990cb8d",task:"Изучи программу",tasktype:"guide",id:47,rightcode:"pass",defaultcode:"for i in range(n):\n    a.append(int(input()))\n\n# Как и в строках для получения доступа к элементам также используются срезы:\nprint(a[1:-1])\nprint(a[::-1])\n\n# Срез можно сохранить в другую переменную и использовать в дальнейшем\nb = a[2::2]\n\n# Настала пора изучить одни из самых полезных функций, которые экономят много времени при программировании\n# Максимальное число в списке\nmaxx = max(a)\nprint(maxx)\n# Минимальное число в списке\nprint(min(a))\n# Сумма чисел в списке\nprint(sum(maxx))",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Изучи программу",tasktype:"guide",id:48,rightcode:"pass",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками, но у списков есть одно важное преимущество - списки можно редактировать\ns = 'Привет'\n# Следующий код выдаст ошибку, поэтому мы его закомментировали\n# s[0]='п'\ns = ['П', 'р', 'и', 'в', 'е', 'т']\ns[0] = 'п'\nprint('Заглавная буква П заменена на строчную п', s)\n\n# Рассмотрим следующую задачу. Есть две переменные, поменяем их значения местами, в других языках программирования для это потребуется третья переменная:\na = 5\nb = 10\nc = a\na = b\nb = c\nprint(a, b)\n# В питоне есть способ проще!\na = 5\nb = 10\na, b = b, a\nprint(a, b)\n\n# Поменяем местами первый и последний элемент списка.\ns = ['П', 'р', 'и', 'в', 'е', 'т']\ns[0], s[-1] = s[-1], s[0]\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b55eceba-df8f-4b9a-9052-dbc34bd0747b",task:"Изучи программу",tasktype:"guide",id:49,rightcode:"pass",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками, но у списков есть одно важное преимущество - списки можно редактировать\n# Изучим новую возможность строк\n# Пусть даны некоторые числа разделенные тире\na = '17-6-87-66'\n# Эту строку можно разделить на части и поместить в список. Для этого используется метод split(). В круглых скобках указывается разделитель\nb = a.split('-')\nprint(b)\n# Если значения разделены пробелом, то в круглых скобках вообще можно ничего не указывать\na = 'Иван Петр Дарья'\nprint(a.split())\n\n# Рассмотрим задачу. Даны числа, разделенные пробелом, найдем их сумму\na = '1 2 3 4 5'\nb = a.split()\n# Такой код выдаст ошибку, так как split создает список из строк, поэтому мы его закомментировали\n# print(sum(b))\n# Нужно как-то превратить каждую строку в число. Один из способов таков:\nfor i in range(len(b)):\n    b[i] = int(b[i])\nprint(sum(b))",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"51e03714-823f-439b-ad95-fcca1ef4fd47",task:"Изучи программу",tasktype:"guide",id:50,rightcode:"pass",defaultcode:"# Как ты уже понял списки имеют большие сходства со строками...хм... где-то мы уже об этом говорили\n\n# Оператор in используется аналогично\ns = ['П', 'р', 'и', 'в', 'е', 'т']\nif 'р' in s:\n    print('Элемент', 'р', 'есть в списке')\n\n# count тоже работает\nprint(s.count('п'))\n\n# Существует полезный метод join, который объединяет элементы в строку.\n# Он применим к спискам, которые содержат только строки.\n# Метод выглядит довольно необычно, постарайся запомнить, он пригодится нам много раз.\nb = '-'.join(s)\nprint(b)\nb = ''.join(s)\nprint(b)\n",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}},{chapterid:"2e31a4ae-242d-4c55-b801-ef12ccc06013",chapterparentid:"b0f52d90-d25e-4f63-a487-0d06420e1d7b",task:"Изучи программу",tasktype:"guide",id:51,rightcode:"pass",defaultcode:"# Новая возможность списков - это сортировка.\n# Метод sorted возвращает список отсортированный по возрастанию. Мы будем применять его только к спискам чисел.\na = [1, 1, 2, 3, 4, 30, 20, 2, 3, 4]\nb = sorted(a)\nprint(b)\n# Для получения отсортированного по убыванию списка развернем его с помощью среза\nb = b[::-1]\nprint(b)",defaultinput:["10", "15", "2", "7"],defaultoutput:[],inout: [{inv:["10", "15", "2", "7"],outv:[]},{inv:["10", "15", "2", "7"],outv:[]}],restrictions: {maxlines:8,forbidden:[],forbiddenRe:[],musthave:[],musthaveRe:[],}}]